[
  {
    "objectID": "analysis_report.html",
    "href": "analysis_report.html",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "Introduction\n\n1.1 Data Understanding\n1.2 Data Source\n1.3 Initial Questions\n\nData Loading & Understanding\n\n2.1 Importing Libraries\n2.2 Loading and Understanding the Data\n2.3 Categorizing the Datasets Attributes\n\nData Cleaning\n\n3.1 Handling Null Values\n\n3.1.1 Treating Null Values\n3.1.2 Decision for Treating Null Values\n3.1.3 Approach\n\n3.2 Handling Outliers\n\n3.2.2 Treating Outliers\n3.2.3 Decision for Treating Outliers\n\n\nData Analysis\n\n4.1 Plots\n4.2 Variance Analysis\n4.3 Covariance Analysis\n\nModels\n\n5.1 Multiple Regression of Life Expectancy\n\n5.1.1 Splitting the Data\n5.1.2 Making the First Model\n5.1.3 Pruning the Model\n\n5.2 Neural Network of Life Expectancy\n5.3 SVR Model for Life Expectancy\n\n5.3.1 Conclusion of SVR Model\n\n5.4 Random Forest\n5.5 Which Variables Most Influence Life Expectancy\n5.6 Comparing the Models\n5.7 Predict Countries Economic Status from Life Expectancy\n\n5.7.1 Logistic Regression Model\n5.7.2 XG Boost Model\n5.7.3 Decision Tree\n5.7.4 Comparing the Models\n\n5.8 Deep Analysis\n\n5.8.1 Deep Analysis Conclusion\n\n\n\n\nThis dataset includes comprehensive information on 179 countries spanning from 2000 to 2015, covering aspects like life expectancy, health indicators, immunization rates, and economic and demographic data. Originally sourced from Kaggle, it underwent updates to rectify inaccuracies and missing values. Population, GDP, and life expectancy figures were updated from World Bank data, while data on vaccinations, alcohol consumption, BMI, HIV rates, mortality, and other health metrics were sourced from the World Health Organization. Additional information on schooling was gathered from the University of Oxford’s Our World in Data project. Missing values were addressed using strategies such as filling with the closest three-year average or the regional average. Countries with significant missing data were excluded, and the remaining countries were categorized based on their Gross National Income per capita into developed vs developing economies, following guidelines from organizations like the World Trade Organization and the UN.\n\n\nColumns in the dataset:\n\nCountry: List of the 179 countries\nRegion: 179 countries are distributed in 9 regions. E.g. Africa, Asia, Oceania, European Union, Rest of Europe and etc.\nYear: Years observed from 2000 to 2015\nInfant_deaths: Represents infant deaths per 1000 population\nUnder_five_deaths: Represents deaths of children under five years old per 1000 population\nAdult_mortality: Represents deaths of adults per 1000 population\nAlcohol_consumption: Represents alcohol consumption that is recorded in liters of pure alcohol per capita with 15+ years old\nHepatitis_B: Represents % of coverage of Hepatitis B (HepB3) immunization among 1-year-olds\nMeasles: Represents % of coverage of Measles containing vaccine first dose (MCV1) immunization among 1-year-olds\nBMI: BMI is a measure of nutritional status in adults. It is defined as a person’s weight in kilograms divided by the square of that person’s height in meters (kg/m2)\nPolio: Represents % of coverage of Polio (Pol3) immunization among 1-year-olds\nDiphtheria: Represents % of coverage of Diphtheria tetanus toxoid and pertussis (DTP3) immunization among 1-year-olds\nIncidents_HIV: Incidents of HIV per 1000 population aged 15-49\nGDP_per_capita: GDP per capita in current USD\nPopulation_mln: Total population in millions\nThinness_ten_nineteen_years: Prevalence of thinness among adolescents aged 10-19 years. BMI &lt; -2 standard deviations below the median\nThinness_five_nine_years: Prevalence of thinness among children aged 5-9 years. BMI &lt; -2 standard deviations below the median\nSchooling: Average years that people aged 25+ spent in formal education\nEconomy_status_Developed: Developed country\nEconomy_status_Developing: Developing county\nLife_expectancy: Average life expectancy of both genders in different years from 2010 to 2015\n\n\n\n\nOriginal dataset can be found here: https://www.kaggle.com/datasets/lashagoch/life-expectancy-who-updated\nFor ease of use we have re-uploaded the dataset to this Github repository created for this group project:\nhttps://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv\n\n\n\n\nWhat are the predicting variables affecting life expectancy?\nHow does infant and adult mortality rates affect life expectancy?\nDoes life expectancy have a positive or negative correlation with\n\nBMI\nDiseases\nAlcohol Consumption\nImmunizations\n\nWhat is the impact of schooling on the lifespan of humans?\n\nCan we predict lifespan based off of schooling?\n\nDo densely populated countries tend to have lower life expectancy?\nWhat is the impact of imunization coverage on life expectancy?\nWill there be an increase in life expectancy in the next 10 years?\nWill the rate of infant deaths go down over the next 5 years?\nIs there a correlation between economic status and life expectancy?\n\nCan we predict countries economic status based off life expectancy?\n\nDo certain regions have higher vaccination rates?\n\n\n\n\n\n\n\nInstall these packages if not already installed on your machine:\n\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n\ninstall.packages(\"tidyverse\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"car\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"caret\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"neuralnet\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"e1071\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"randomForest\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"caTools\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"clusterGeneration\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"pROC\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"xgboost\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\n\nImport the libraries:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(caret)\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\nlibrary(car)\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nlibrary(neuralnet)\n\n\nAttaching package: 'neuralnet'\n\nThe following object is masked from 'package:dplyr':\n\n    compute\n\nlibrary(e1071)\nlibrary(randomForest)\n\nrandomForest 4.7-1.1\nType rfNews() to see new features/changes/bug fixes.\n\nAttaching package: 'randomForest'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\nlibrary(caTools)\nlibrary(parallel)\nlibrary(doParallel)\n\nLoading required package: foreach\n\nAttaching package: 'foreach'\n\nThe following objects are masked from 'package:purrr':\n\n    accumulate, when\n\nLoading required package: iterators\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(xgboost)\n\n\nAttaching package: 'xgboost'\n\nThe following object is masked from 'package:dplyr':\n\n    slice\n\n\n\n\n\nLoad the dataset from the GitHub repository:\n\ndf &lt;- read_csv(\"https://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv\", show_col_types = FALSE)\n\nDisplay the first 5 rows of the dataset:\n\nhead(df, 5)\n\n# A tibble: 5 × 21\n  Country Region          Year Infant_deaths Under_five_deaths Adult_mortality\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n1 Turkiye Middle East     2015          11.1              13             106. \n2 Spain   European Union  2015           2.7               3.3            57.9\n3 India   Asia            2007          51.5              67.9           201. \n4 Guyana  South America   2006          32.8              40.5           222. \n5 Israel  Middle East     2012           3.4               4.3            58.0\n# ℹ 15 more variables: Alcohol_consumption &lt;dbl&gt;, Hepatitis_B &lt;dbl&gt;,\n#   Measles &lt;dbl&gt;, BMI &lt;dbl&gt;, Polio &lt;dbl&gt;, Diphtheria &lt;dbl&gt;,\n#   Incidents_HIV &lt;dbl&gt;, GDP_per_capita &lt;dbl&gt;, Population_mln &lt;dbl&gt;,\n#   Thinness_ten_nineteen_years &lt;dbl&gt;, Thinness_five_nine_years &lt;dbl&gt;,\n#   Schooling &lt;dbl&gt;, Economy_status_Developed &lt;dbl&gt;,\n#   Economy_status_Developing &lt;dbl&gt;, Life_expectancy &lt;dbl&gt;\n\n\nShape of the data frame\n\n# Get the number of rows\nnum_rows &lt;- nrow(df)\n\n# Get the number of columns\nnum_cols &lt;- ncol(df)\n\n# Print the results\ncat(\"Number of rows:\", num_rows, \"\\n\")\n\nNumber of rows: 2864 \n\ncat(\"Number of columns:\", num_cols, \"\\n\")\n\nNumber of columns: 21 \n\n\nSummary of the Data Frame:\n\nsummary(df)\n\n   Country             Region               Year      Infant_deaths   \n Length:2864        Length:2864        Min.   :2000   Min.   :  1.80  \n Class :character   Class :character   1st Qu.:2004   1st Qu.:  8.10  \n Mode  :character   Mode  :character   Median :2008   Median : 19.60  \n                                       Mean   :2008   Mean   : 30.36  \n                                       3rd Qu.:2011   3rd Qu.: 47.35  \n                                       Max.   :2015   Max.   :138.10  \n Under_five_deaths Adult_mortality  Alcohol_consumption  Hepatitis_B   \n Min.   :  2.300   Min.   : 49.38   Min.   : 0.000      Min.   :12.00  \n 1st Qu.:  9.675   1st Qu.:106.91   1st Qu.: 1.200      1st Qu.:78.00  \n Median : 23.100   Median :163.84   Median : 4.020      Median :89.00  \n Mean   : 42.938   Mean   :192.25   Mean   : 4.821      Mean   :84.29  \n 3rd Qu.: 66.000   3rd Qu.:246.79   3rd Qu.: 7.777      3rd Qu.:96.00  \n Max.   :224.900   Max.   :719.36   Max.   :17.870      Max.   :99.00  \n    Measles           BMI            Polio        Diphtheria   \n Min.   :10.00   Min.   :19.80   Min.   : 8.0   Min.   :16.00  \n 1st Qu.:64.00   1st Qu.:23.20   1st Qu.:81.0   1st Qu.:81.00  \n Median :83.00   Median :25.50   Median :93.0   Median :93.00  \n Mean   :77.34   Mean   :25.03   Mean   :86.5   Mean   :86.27  \n 3rd Qu.:93.00   3rd Qu.:26.40   3rd Qu.:97.0   3rd Qu.:97.00  \n Max.   :99.00   Max.   :32.10   Max.   :99.0   Max.   :99.00  \n Incidents_HIV     GDP_per_capita   Population_mln    \n Min.   : 0.0100   Min.   :   148   Min.   :   0.080  \n 1st Qu.: 0.0800   1st Qu.:  1416   1st Qu.:   2.098  \n Median : 0.1500   Median :  4217   Median :   7.850  \n Mean   : 0.8943   Mean   : 11541   Mean   :  36.676  \n 3rd Qu.: 0.4600   3rd Qu.: 12557   3rd Qu.:  23.688  \n Max.   :21.6800   Max.   :112418   Max.   :1379.860  \n Thinness_ten_nineteen_years Thinness_five_nine_years   Schooling     \n Min.   : 0.100              Min.   : 0.1             Min.   : 1.100  \n 1st Qu.: 1.600              1st Qu.: 1.6             1st Qu.: 5.100  \n Median : 3.300              Median : 3.4             Median : 7.800  \n Mean   : 4.866              Mean   : 4.9             Mean   : 7.632  \n 3rd Qu.: 7.200              3rd Qu.: 7.3             3rd Qu.:10.300  \n Max.   :27.700              Max.   :28.6             Max.   :14.100  \n Economy_status_Developed Economy_status_Developing Life_expectancy\n Min.   :0.0000           Min.   :0.0000            Min.   :39.40  \n 1st Qu.:0.0000           1st Qu.:1.0000            1st Qu.:62.70  \n Median :0.0000           Median :1.0000            Median :71.40  \n Mean   :0.2067           Mean   :0.7933            Mean   :68.86  \n 3rd Qu.:0.0000           3rd Qu.:1.0000            3rd Qu.:75.40  \n Max.   :1.0000           Max.   :1.0000            Max.   :83.80  \n\n\n\n\n\n\nNominal (Factors)\n\nCountry\nRegion\nYear\nEconomy_status_Developed\nEconomy_status_Developing\n\nNumerical (Nominal):\n\nInfant_deaths\nUnder_five_deaths\n\nNumerical (Interval)\n\nBMI\n\nNumerical (Ratio)\n\nLife_expectancy\nAdult_mortality\nHepatitis_B\nMeasles\nPolio\nIncidents_HIV\nGDP_per_capita\nPopulation_mln\nThinness_five_nine_years\nThinness_ten_nineteen_years\nSchooling\n\n\n\nCreating a list of all nominal/factors\nRegions\n\ndf |&gt;\ndistinct(Region)\n\n# A tibble: 9 × 1\n  Region                       \n  &lt;chr&gt;                        \n1 Middle East                  \n2 European Union               \n3 Asia                         \n4 South America                \n5 Central America and Caribbean\n6 Rest of Europe               \n7 Africa                       \n8 Oceania                      \n9 North America                \n\n\nCountry\n\ndf |&gt;\ndistinct(Country)\n\n# A tibble: 179 × 1\n   Country           \n   &lt;chr&gt;             \n 1 Turkiye           \n 2 Spain             \n 3 India             \n 4 Guyana            \n 5 Israel            \n 6 Costa Rica        \n 7 Russian Federation\n 8 Hungary           \n 9 Jordan            \n10 Moldova           \n# ℹ 169 more rows\n\n\nYear\n\ndf |&gt;\ndistinct(Year)\n\n# A tibble: 16 × 1\n    Year\n   &lt;dbl&gt;\n 1  2015\n 2  2007\n 3  2006\n 4  2012\n 5  2000\n 6  2001\n 7  2008\n 8  2011\n 9  2002\n10  2013\n11  2005\n12  2003\n13  2004\n14  2009\n15  2010\n16  2014\n\n\nEconomic Status:\n\ndf |&gt;\ndistinct(Economy_status_Developed)\n\n# A tibble: 2 × 1\n  Economy_status_Developed\n                     &lt;dbl&gt;\n1                        0\n2                        1\n\ndf |&gt;\ndistinct(Economy_status_Developing)\n\n# A tibble: 2 × 1\n  Economy_status_Developing\n                      &lt;dbl&gt;\n1                         1\n2                         0\n\n\nFor the purpose of analysis in R, it is good practice to change categorical variables into factors\n\ndf$Country &lt;- factor(df$Country)\ndf$Region &lt;- factor(df$Region)\ndf$Region &lt;- factor(df$Region)\ndf$Year &lt;- factor(df$Year)\ndf$Economy_status_Developed &lt;- factor(df$Economy_status_Developed)\ndf$Economy_status_Developing &lt;- factor(df$Economy_status_Developing)\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\n\n\n\n\n\n\nThe original data set had several hundred missing values. While the data is publicly available as it is all published by the various nations of the world and the World Heath Organization, it is not feasible with our teams man hours to manually enter each missing value.\nNumber of Missing Values:\n\nLife_expectancy: 10\nAdult_mortality: 10\nInfant_deaths: 0\nHepatitis_B: 553\nMeasles: 0\nBMI: 34\nUnder_five_deaths: 0\nPolio: 19\nIncidents_HIV: 0\nGDP_per_capita: 448\nPopulation_mln: 652\nThinness_five_nine_years: 34\nSchooling: 163\n\n\n\n1) Delete the row: Possible for datasets with small number of NA’s, sadly that is not our dataset.\n2) Replace the missing values with the average for that variable\n\n\n\nWhen doing research on how to handle the missing values, Our group leader found a data set that has already “fixed” the missing values. This new data set first grouped each country into regions, from there the average value of each column was found by region. This is a very clean way to ensure that different regions do not effect each other, while still filling in the missing values.\n\n\n\nThe group moved forward with the “Fixed” dataset.\n\n\n\n\nFunction to find number of outliers and plot:\n\nnum_outliers &lt;- function(data_set, column) {\n  q1 &lt;- quantile(column, 0.25)\n  q3 &lt;- quantile(column, 0.75)\n  iqr &lt;- q3 -q1\n  \n  upper_bound &lt;- q3 + 1.5 * iqr\n  lower_bound &lt;- q1 - 1.5 * iqr\n  \n  outliers &lt;- column[column &lt; lower_bound | column &gt; upper_bound]\n  \n  plot &lt;- ggplot(data_set) + geom_boxplot(aes(x = \"\", y = column))\n  \n  print(plot)\n  \n  return(length(outliers))\n}\n\nNumber of Outliers:\nLife_expectancy:\n\nnum_outliers(df, df$Life_expectancy)\n\n\n\n\n\n\n\n\n[1] 19\n\n\nAdult_mortality:\n\nnum_outliers(df, df$Adult_mortality)\n\n\n\n\n\n\n\n\n[1] 112\n\n\nAlcohol_consumption:\n\nnum_outliers(df, df$Alcohol_consumption)\n\n\n\n\n\n\n\n\n[1] 2\n\n\nHepatitis_B:\n\nnum_outliers(df, df$Hepatitis_B)\n\n\n\n\n\n\n\n\n[1] 164\n\n\nMeasles:\n\nnum_outliers(df, df$Measles)\n\n\n\n\n\n\n\n\n[1] 35\n\n\nPolio:\n\nnum_outliers(df, df$Polio)\n\n\n\n\n\n\n\n\n[1] 190\n\n\nDiphtheria:\n\nnum_outliers(df, df$Diphtheria)\n\n\n\n\n\n\n\n\n[1] 187\n\n\nIncidents_HIV:\n\nnum_outliers(df, df$Incidents_HIV)\n\n\n\n\n\n\n\n\n[1] 461\n\n\nGDP_per_capita:\n\nnum_outliers(df, df$GDP_per_capita)\n\n\n\n\n\n\n\n\n[1] 425\n\n\nPopulation_mln:\n\nnum_outliers(df, df$Population_mln)\n\n\n\n\n\n\n\n\n[1] 362\n\n\nThinness_five_nine_years:\n\nnum_outliers(df, df$Thinness_five_nine_years)\n\n\n\n\n\n\n\n\n[1] 95\n\n\nThinness_ten_nineteen_years:\n\nnum_outliers(df, df$Thinness_ten_nineteen_years)\n\n\n\n\n\n\n\n\n[1] 89\n\n\nSchooling:\n\nnum_outliers(df, df$Schooling)\n\n\n\n\n\n\n\n\n[1] 0\n\n\nBMI:\n\nnum_outliers(df, df$BMI)\n\n\n\n\n\n\n\n\n[1] 25\n\n\nInfant_deaths:\n\nnum_outliers(df, df$Infant_deaths)\n\n\n\n\n\n\n\n\n[1] 29\n\n\nUnder_five_deaths:\n\nnum_outliers(df, df$Under_five_deaths)\n\n\n\n\n\n\n\n\n[1] 102\n\n\n\n\nThe variation in outlier counts between our analytical methods (IQR Method, identify_outliers function) and box plot visualization likely comes from differing definitions of outliers. While the analytical methods stick to strict statistical criteria, box plots visually show points beyond the data’s central range, potentially capturing more extreme values.\n\nggplot(df, aes(x = Region, y = Infant_deaths)) + geom_boxplot() + ggtitle(\"Comparison of Infant Deaths Incidence by Region\")\n\n\n\n\n\n\n\n\nThe “Infant_deaths” column represents the number of infant deaths per 1000 population. The IQR method identifies 29 outliers. The regions with outliers include Africa, Central America and Caribbean, European Union, Middle East, Rest of Europe, and South America. Outliers in infant deaths may indicate regions with unusually high infant mortality rates, potentially reflecting poor healthcare access and quality.\n\nggplot(df, aes(x = Region, y = Under_five_deaths )) + geom_boxplot() + ggtitle(\"Comparison of Under Five Deaths:  by Region\")\n\n\n\n\n\n\n\n\nThe “Under_five_deaths” column represents deaths of children under five years old per 1000 population. The IQR method identifies 102 outliers. The regions with outliers include Africa, Asia, Central America and Caribbean, European Union, Middle East, Rest of Europe, and South America. High rates of under-five deaths may indicate challenges related to healthcare access, quality, and availability of essential services such as maternal and child healthcare and vaccinations.\n\nggplot(df, aes(x = Region, y = Adult_mortality)) + geom_boxplot() + ggtitle(\"Comparison of Adult M         ortality by Region\")\n\n\n\n\n\n\n\n\nThe “Adult_mortality” column represents the probability of dying between 15 and 60 per 1000 population. The IQR method identifies 112 outliers. The only region with outliers is Africa. High rates of adult mortality may indicate challenges related to healthcare access, quality, and availability of essential services such as vaccinations.\n\nggplot(df, aes(x = Region, y = Alcohol_consumption)) + geom_boxplot() + ggtitle(\"Comparison of Alcohol Consumption by Region\")\n\n\n\n\n\n\n\n\nThe “Alcohol_consumption” column represents alcohol consumption per capita by liter. The IQR method identifies 2 outliers.\n\nggplot(df, aes(x = Region, y = Hepatitis_B)) + geom_boxplot() + ggtitle(\"Comparison of Hepatitis B by Region\")\n\n\n\n\n\n\n\n\nThe “Hepatitis_B” column represents Hepatitis B immunization coverage in 1-year olds. The IQR method identifies 164 outliers.\n\nggplot(df, aes(x = Region, y = Measles)) + geom_boxplot() + ggtitle(\"Comparison of Measles by Region\")\n\n\n\n\n\n\n\n\nThe “Measles” column represents number of measles cases reported per 1000 population. The IQR method identifies 35 outliers. The regions with outliers include Indonesia(Asia), Philippines(Asia), Afghanistan(Asia), and Suriname(South America). High rates of measles may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = BMI)) + geom_boxplot() + ggtitle(\"Comparison of BMI by Region\")\n\n\n\n\n\n\n\n\nThe “BMI” column represents the body mass index of the entire population. The IQR method identifies 25 outliers. The regions with outliers are Samoa and Tonga. Higher BMI may indicate genetic predispositions and fattier diets.\n\nggplot(df, aes(x = Region, y = Polio)) + geom_boxplot() + ggtitle(\"Comparison of Polio by Region\")\n\n\n\n\n\n\n\n\nThe “Polio” column represents the polio immunization records among 1-year olds. The IQR method identifies 190 outliers. The regions with outliers include Africa and Oceania. Lower polio vaccination rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = Diphtheria)) + geom_boxplot() + ggtitle(\"Comparison of Diphtheria by Region\")\n\n\n\n\n\n\n\n\nThe “Diphtheria” column represents the TDP immunization records among 1-year olds. The IQR method identifies 187 outliers. The regions with outliers include Africa and Asia. Lower diphtheria vaccination rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = Incidents_HIV)) + geom_boxplot() + ggtitle(\"Comparison of Incidents HIV by Region\")\n\n\n\n\n\n\n\n\nThe “Incidents_HIV” column represents the deaths per 1000 live births due to HIV/AIDS. The IQR method identifies 461 outliers. The region with outliers is Africa. Higher HIV rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = GDP_per_capita)) + geom_boxplot() + ggtitle(\"Comparison of GDP Per Capita by Region\")\n\n\n\n\n\n\n\n\nThe “GDP_per_capita’ column represents the gross domestic product per capita. The IQR method identifies 425 outliers. The regions with outliers includes France and Austria. Higher GDP may indicate a more developed economy.\n\n\nggplot(df, aes(x = Region, y = Population_mln)) + geom_boxplot() + ggtitle(\"Comparison of Population by Region\")\n\n\n\n\n\n\n\n\nThe “Population_mln” column represents the total population in millions. The IQR method identifies 362 outliers. The regions with outliers include India, China, and the United States.\n\n\nggplot(df, aes(x = Region, y = Thinness_ten_nineteen_years)) + geom_boxplot() + ggtitle(\"Comparison of Thinness Ten to Nineteen Years by Region\")\n\n\n\n\n\n\n\n\nThe “Thinness_ten_nineteen_years” column represents the prevalence of thinness among 10 to 19 year olds. The IQR method identifies 89 outliers. The regions with outliers include Asia and Africa. Higher rates of thinness may indicate challenges related to healthcare access, diet, and cultural values.\n\n\nggplot(df, aes(x = Region, y = Thinness_five_nine_years)) + geom_boxplot() + ggtitle(\"Comparison of Thinness Five to Nine Years by Region\")\n\n\n\n\n\n\n\n\nThe “Thinness_five_nine_years” column represents the prevalence of thinness among 5 to 9 year olds. The IQR method identifies 95 outliers. The regions with outliers include Asia and Africa. Higher rates of thinness may indicate challenges related to healthcare access, diet, and cultural values.\n\n\nggplot(df, aes(x = Region, y = Schooling)) + geom_boxplot() + ggtitle(\"Comparison of Schooling by Region\")\n\n\n\n\n\n\n\n\nThere are no outliers.\n\nggplot(df, aes(x = Region, y = Life_expectancy)) + geom_boxplot() + ggtitle(\"Comparison of Life Expectancy by Region\")\n\n\n\n\n\n\n\n\nThe “Life_expectancy” represents the average life expectancy in age. The IQR method identifies 19 outliers. The region with outliers include Africa. Lower life expectancy rates may indicate challenges related to healthcare access.\n\n\n\n1) Trimming: Remove outliers from the dataset. This approach can be appropriate if the outliers are deemed to be data entry errors or highly improbable values. Due to the high number of outliers in the dataset, this is not a viable option.\n2) Winsorization: Replace outliers with values at a specified percentile (e.g., replacing values above the 95th percentile with the 95th percentile value, replacing values below the 5th percentile with the 5th percentile value).\n\n\n\nAfter doing research on how to identify and treat outliers in R, and reviewing the outliers present in our data, we have chosen to leave the outliers as is. None of them appear erroneous and as such provide valid data for training the models\n\n\n\n\n\n\n\n\ncovariance_plot &lt;- function(y_val, x_val, data_frame, std_data_frame) {\n  ggplot(data = data_frame, aes_string(y = y_val, x = x_val, color = \"Region\")) +\n    geom_point() +\n    geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], std_data_frame[[x_val]]), 2))),\n            x = Inf, y = Inf, hjust = 1, vjust = 1, color = \"black\")\n}\n\n\n\n\nLife Expectancy\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Life_expectancy))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Life_expectancy), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Life_expectancy, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Life expectancy by Region\",\n         x=\"Life expectancy\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Life_expectancy)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  39.40   62.70   71.40   68.86   75.40   83.80 \n\n\n\nInference:\nLife Expectancy represents the average years lived in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~71\nThe minimum is 39.40, the max is 83.8\nWe can see that the various regions are clustered\n\nInfant Deaths\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Infant_deaths))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Infant_deaths), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Life_expectancy, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Infant_deaths by Region\",\n         x=\"Infant deaths\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Infant_deaths)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.80    8.10   19.60   30.36   47.35  138.10 \n\n\nInference:\nIt represents the Infant Deaths in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~20\nThe minimum is 1.80, the max is 138.10\n\nUnder_five_deaths\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Under_five_deaths))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Under_five_deaths), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Under_five_deaths, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Under_five_deaths by Region\",\n         x=\"Under_five_deaths\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Under_five_deaths)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.300   9.675  23.100  42.938  66.000 224.900 \n\n\nInference:\nLife Expectancy represents the average deaths under five (age) in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~23\nThe minimum is 2.30, the max is 224.90\n\nAdult_mortality\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Adult_mortality))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Adult_mortality), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Adult_mortality, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Adult_mortality by Region\",\n         x=\"Adult_mortality\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Adult_mortality)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  49.38  106.91  163.84  192.25  246.79  719.36 \n\n\nInference:\nAdult mortality represents the adult deaths in the given country\nLife Expectancy is not evenly distributed,\nAdult mortality peaks ~164\nThe minimum is 49.38, the max is 719.36\n\nAlcohol Consumption\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Alcohol_consumption))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Alcohol_consumption), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Alcohol_consumption, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Alcohol_consumption by Region\",\n         x=\"Alcohol_consumption\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Alcohol_consumption)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.200   4.020   4.821   7.777  17.870 \n\n\nInference:\nAlcohol consumption is recorded per capita (15+) consumption (in litres of pure alcohol)\nMin is 0 litres\nMax is 17.87\nAlcohol consumption is not evenly distrusted.\nAlcohol Consumption peaks at 0\n\n$Hepatitis_B\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Hepatitis_B))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Hepatitis_B), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Hepatitis_B, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Hepatitis_B by Region\",\n         x=\"Hepatitis_B\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Hepatitis_B)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   78.00   89.00   84.29   96.00   99.00 \n\n\nHepatitis Inferences:\nHepatitis B represents the immunization coverage among 1-year olds(%)\nIt is not evenly distrusted\nmin: 12\nMax 99.9\nIt peaks around 90%\nWhy is there a spike around 85?\nThat spike is due to the E.U.\n\nMeasles\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Measles))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Measles), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Measles, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Measles by Region\",\n         x=\"Measles\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Measles)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.00   64.00   83.00   77.34   93.00   99.00 \n\n\nMeasles Influences:\nMeasles represents the percentage of 1 year olds who have been immunized\nIt is not evenly distrusted\nMin 10\nMax 99\nIt peaks around 62%\nWhy is there a spike around 62%?\nDue to a large chunk of Africa\n\nBMI\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$BMI))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$BMI), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=BMI, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of BMI by Region\",\n         x=\"BMI\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$BMI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  19.80   23.20   25.50   25.03   26.40   32.10 \n\n\nBMI Inferences:\nBMI represents the nutritional status of the adult population\nIt is not evenly distributed\nMin 19\nMax 32.10\nWhy is there two groups?\nThe two groups are two to African and Asia forming one peak, and Europe forming another peak\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Polio))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Polio), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Polio, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Polio by Region\",\n         x=\"Polio\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Polio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    8.0    81.0    93.0    86.5    97.0    99.0 \n\n\nPolio represents the percentage of one year-olds who were immunized for polio\nMin: 8\nMedian 93.0\nMax 99.0\nDiphtheria\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Diphtheria))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Diphtheria), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Diphtheria, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Diphtheria by Region\",\n         x=\"Diphtheria\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Diphtheria)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  16.00   81.00   93.00   86.27   97.00   99.00 \n\n\nPolio represents the percentage of one year-olds who were immunized for Diphtheria\nMin: 16\nMedian 93.0\nMax 99.0\nHIV\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Incidents_HIV))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Incidents_HIV), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Incidents_HIV, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Incidents_HIV by Region\",\n         x=\"Incidents_HIV\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Incidents_HIV)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0100  0.0800  0.1500  0.8943  0.4600 21.6800 \n\n\nMin. 1st Qu.  Median    Mean 3rd Qu.    Max.  \n0.0100  0.0800  0.1500  0.8943  0.4600 21.6800 \nIncidents_HIV represents the number of incidents of HIV per 1000 people\nMin: 0.01\nMedian 0.15\nMax:21.68\nMost of the regions exist in the large spike at just after 0, with Africa making up the bulk of the rest of the graph, this is a possible explanation for Africa’s lower life expectancy\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$GDP_per_capita))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$GDP_per_capita), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=GDP_per_capita, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of GDP_per_capita by Region\",\n         x=\"GDP_per_capita\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$GDP_per_capita)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    148    1416    4217   11541   12557  112418 \n\n\nGDP is a representation of the overall wealth of a country\nMin:148\nMedian: 4217\nMean: 11541\nMax: 112418\nThis variable has a very large range, with the majority of the world existing in the lower end of this scale.\nPopulation\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Population_mln))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Population_mln), bins = 100) \n\n\n\n\n\n\n\n#re-do of the graph with xlim to exclude the outliers \ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Population_mln), bins = 30) +\n  xlim(0,350)\n\nWarning: Removed 32 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\nggplot(df, aes(x=Population_mln, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Population_mln by Region\",\n         x=\"Population_mln\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Population_mln)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   0.080    2.098    7.850   36.676   23.688 1379.860 \n\n\nPopulation represents the total number of people living within a nation, in the millions.\nMin: 0.08\nMedian: 7.85\nMean: 36.676\nMax: 1379.86\nThe outliers on the extreme edge are India and China.\nThinness 10 to 19\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Thinness_ten_nineteen_years))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Thinness_ten_nineteen_years), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Thinness_ten_nineteen_years, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Thinness_ten_nineteen_years by Region\",\n         x=\"Thinness_ten_nineteen_years\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Thinness_ten_nineteen_years)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.100   1.600   3.300   4.866   7.200  27.700 \n\n\nThinness 10-19 represents the percentage of individuals in the age group who are “thin”\nMin: 0.1\nMedian: 3.3\nMean 4.866\nMax: 27.7\nWhy are there two groups?\nThe two peaks are formed by different regions, the first being Europe, the second being Africa.\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Thinness_five_nine_years))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Thinness_five_nine_years), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Thinness_five_nine_years, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Thinness_five_nine_years by Region\",\n         x=\"Thinness_five_nine_years\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Thinness_five_nine_years)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.1     1.6     3.4     4.9     7.3    28.6 \n\n\nMin: 0.1\nMedian:3.4\nMean:4.9\nMax: 28.6\nWhy are there two groups?\nSame as the 10-19 Thinness, Most of this graph is a mirror of the other Thinness graph.\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Schooling))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Schooling), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Schooling, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Schooling by Region\",\n         x=\"Schooling\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Schooling)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.100   5.100   7.800   7.632  10.300  14.100 \n\n\nSchooling Represents the average years of schooling in the nation.\nMin: 1.1\nMedian: 7.8\nMean: 7.632\nMax: 14.1\nSchooling is our most evenly distrusted graph so far.\n\n\n\nFor Covariance Analysis we need a subset of the data that only has the numeric variables\nStandardize the data\n\nsdf &lt;- df |&gt;\n  select(-Year, everything()) |&gt;\n  mutate(across(where(is.numeric), scale))\n\n\n# Get only numeric data\nnumeric_data &lt;- select_if(sdf, is.numeric)\n\ncov_matrix &lt;- cov(numeric_data)\n\nprint(cov_matrix)\n\n                            Infant_deaths Under_five_deaths Adult_mortality\nInfant_deaths                  1.00000000       0.985651346      0.79466086\nUnder_five_deaths              0.98565135       1.000000000      0.80236112\nAdult_mortality                0.79466086       0.802361123      1.00000000\nAlcohol_consumption           -0.45452615      -0.409367397     -0.24479376\nHepatitis_B                   -0.51256224      -0.507427407     -0.34488221\nMeasles                       -0.52628201      -0.512971742     -0.41615254\nBMI                           -0.66198827      -0.665255042     -0.52286551\nPolio                         -0.74079046      -0.742983474     -0.52422554\nDiphtheria                    -0.72187465      -0.725355032     -0.51380270\nIncidents_HIV                  0.34945826       0.369617726      0.69911938\nGDP_per_capita                -0.51228611      -0.469681668     -0.51012141\nPopulation_mln                 0.00762199      -0.005234231     -0.05384768\nThinness_ten_nineteen_years    0.49119174       0.466978458      0.38214030\nThinness_five_nine_years       0.47763934       0.450755699      0.37979229\nSchooling                     -0.78851253      -0.773195983     -0.58103548\nLife_expectancy               -0.92003192      -0.920419134     -0.94536036\n                            Alcohol_consumption Hepatitis_B     Measles\nInfant_deaths                       -0.45452615 -0.51256224 -0.52628201\nUnder_five_deaths                   -0.40936740 -0.50742741 -0.51297174\nAdult_mortality                     -0.24479376 -0.34488221 -0.41615254\nAlcohol_consumption                  1.00000000  0.16843582  0.31860293\nHepatitis_B                          0.16843582  1.00000000  0.42916779\nMeasles                              0.31860293  0.42916779  1.00000000\nBMI                                  0.28403195  0.34542091  0.41632141\nPolio                                0.30192623  0.72434526  0.51409629\nDiphtheria                           0.29901592  0.76178009  0.49405877\nIncidents_HIV                       -0.03411801 -0.07578195 -0.15058000\nGDP_per_capita                       0.44396595  0.15937504  0.31372372\nPopulation_mln                      -0.03911866 -0.08239640 -0.09822189\nThinness_ten_nineteen_years         -0.44636618 -0.20845350 -0.34070533\nThinness_five_nine_years            -0.43302972 -0.21379442 -0.36696995\nSchooling                            0.61572804  0.34764345  0.49839128\nLife_expectancy                      0.39915911  0.41780443  0.49001859\n                                   BMI       Polio  Diphtheria Incidents_HIV\nInfant_deaths               -0.6619883 -0.74079046 -0.72187465    0.34945826\nUnder_five_deaths           -0.6652550 -0.74298347 -0.72535503    0.36961773\nAdult_mortality             -0.5228655 -0.52422554 -0.51380270    0.69911938\nAlcohol_consumption          0.2840319  0.30192623  0.29901592   -0.03411801\nHepatitis_B                  0.3454209  0.72434526  0.76178009   -0.07578195\nMeasles                      0.4163214  0.51409629  0.49405877   -0.15058000\nBMI                          1.0000000  0.45720604  0.42650090   -0.16114208\nPolio                        0.4572060  1.00000000  0.95317790   -0.14795220\nDiphtheria                   0.4265009  0.95317790  1.00000000   -0.14693191\nIncidents_HIV               -0.1611421 -0.14795220 -0.14693191    1.00000000\nGDP_per_capita               0.3361796  0.31378567  0.31332094   -0.16958972\nPopulation_mln              -0.1664820 -0.03348589 -0.02733598   -0.05803971\nThinness_ten_nineteen_years -0.5964833 -0.31268545 -0.30446625    0.18876454\nThinness_five_nine_years    -0.5991122 -0.30699811 -0.29559745    0.19384734\nSchooling                    0.6354752  0.55276511  0.53562097   -0.20124620\nLife_expectancy              0.5984233  0.64121746  0.62754139   -0.55302746\n                            GDP_per_capita Population_mln\nInfant_deaths                  -0.51228611    0.007621990\nUnder_five_deaths              -0.46968167   -0.005234231\nAdult_mortality                -0.51012141   -0.053847680\nAlcohol_consumption             0.44396595   -0.039118659\nHepatitis_B                     0.15937504   -0.082396398\nMeasles                         0.31372372   -0.098221891\nBMI                             0.33617960   -0.166482004\nPolio                           0.31378567   -0.033485888\nDiphtheria                      0.31332094   -0.027335977\nIncidents_HIV                  -0.16958972   -0.058039708\nGDP_per_capita                  1.00000000   -0.040838867\nPopulation_mln                 -0.04083887    1.000000000\nThinness_ten_nineteen_years    -0.37526974    0.256322009\nThinness_five_nine_years       -0.38103211    0.258485836\nSchooling                       0.58062592   -0.033561816\nLife_expectancy                 0.58308972    0.026297880\n                            Thinness_ten_nineteen_years\nInfant_deaths                                 0.4911917\nUnder_five_deaths                             0.4669785\nAdult_mortality                               0.3821403\nAlcohol_consumption                          -0.4463662\nHepatitis_B                                  -0.2084535\nMeasles                                      -0.3407053\nBMI                                          -0.5964833\nPolio                                        -0.3126855\nDiphtheria                                   -0.3044662\nIncidents_HIV                                 0.1887645\nGDP_per_capita                               -0.3752697\nPopulation_mln                                0.2563220\nThinness_ten_nineteen_years                   1.0000000\nThinness_five_nine_years                      0.9387571\nSchooling                                    -0.5714852\nLife_expectancy                              -0.4678245\n                            Thinness_five_nine_years   Schooling\nInfant_deaths                              0.4776393 -0.78851253\nUnder_five_deaths                          0.4507557 -0.77319598\nAdult_mortality                            0.3797923 -0.58103548\nAlcohol_consumption                       -0.4330297  0.61572804\nHepatitis_B                               -0.2137944  0.34764345\nMeasles                                   -0.3669700  0.49839128\nBMI                                       -0.5991122  0.63547517\nPolio                                     -0.3069981  0.55276511\nDiphtheria                                -0.2955975  0.53562097\nIncidents_HIV                              0.1938473 -0.20124620\nGDP_per_capita                            -0.3810321  0.58062592\nPopulation_mln                             0.2584858 -0.03356182\nThinness_ten_nineteen_years                0.9387571 -0.57148516\nThinness_five_nine_years                   1.0000000 -0.55137635\nSchooling                                 -0.5513764  1.00000000\nLife_expectancy                           -0.4581662  0.73248447\n                            Life_expectancy\nInfant_deaths                   -0.92003192\nUnder_five_deaths               -0.92041913\nAdult_mortality                 -0.94536036\nAlcohol_consumption              0.39915911\nHepatitis_B                      0.41780443\nMeasles                          0.49001859\nBMI                              0.59842332\nPolio                            0.64121746\nDiphtheria                       0.62754139\nIncidents_HIV                   -0.55302746\nGDP_per_capita                   0.58308972\nPopulation_mln                   0.02629788\nThinness_ten_nineteen_years     -0.46782450\nThinness_five_nine_years        -0.45816623\nSchooling                        0.73248447\nLife_expectancy                  1.00000000\n\n\nLife Expectancy:\n\ncovariance_plot(\"Life_expectancy\", \"Adult_mortality\", df, sdf)\n\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`.\nℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInference:\nStrong negative: adult mortality, infant deaths, under five deaths\nNegative: HIV, thinness\nSlight positive: Alcohol consumption, Hepatitis B, measles\nPositive: BMI, Polio, Diphtheria, Schooling\n\nAlcohol Consumption:\n\ncovariance_plot(\"Alcohol_consumption\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nThere is a positive relationship between Schooling and alcohol consumption,\nSome positive relationship: GDP\nSome negative relationship: Infant deaths\nStrong negative relationship: Population\nOther variables have some covariance, but it does not seem to be strongly related.\n\nGDP:\n\ncovariance_plot(\"GDP_per_capita\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInference:\nSome positive relationship: Life expectancy, alcohol consumption, schooling\nSome negative relationship: Infant deaths, under five deaths, adult mortality\n\nAdult Mortality:\n\ncovariance_plot(\"Adult_mortality\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nStrong negative: Life expectancy\nNegative: BMI, polio Diphtheria, schooling\nPositive: HIV\nStrong positive: infant deaths, under five deaths\n\nHepatitis B:\n\ncovariance_plot(\"Hepatitis_B\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nHepatitis B Inferences:\nPositive: Life Expectancy, Alcohol Consumption, Polio, Measles, Diphtheria\nNegative: Infant Deaths, Under Five Deaths, Adult mortality\n\nMeasles:\n\ncovariance_plot(\"Measles\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nMeasles Inferences:\nPositive: Life Expectancy, Schooling, Hepatitis B, BMI, polio, Diphtheria\nNegative: Infant Deaths, Under Five Deaths, adult mortality\n\nBMI:\n\ncovariance_plot(\"BMI\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nBMI Inferences:\nPositive: Life Expectancy, Diphtheria, GDP, measles, polio, schooling\nNegative: Thinness, infant deaths, under five deaths, adult mortality\n\nPolio:\n\ncovariance_plot(\"Polio\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nPolio Inferences:\nStrong Positive, Hepatitis B, Diphtheria\nPositive: Polio, BMI, Schooling, life expectancy, measles\nNegative: Thinness, adult mortality\nStrong Negative: Infant Deaths, Under Five deaths\n\nDiphtheria:\n\ncovariance_plot(\"Diphtheria\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nDiphtheria Inferences:\nStrong Positive: Hepatitis B, Polio\nPositive: Life Expectancy, Measles, BMI, Schooling\nNegative: Thinness, adult mortality\nStrong Negative: Infant Deaths, Under Five Deaths\n\nHIV:\n\ncovariance_plot(\"Incidents_HIV\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nHIV Inferences:\nPositive: Adult mortality\nNegative: life expectancy\nConclusion: We may want to separate out Africa for this one, as it seems to be skewing the data.\n\nPopulation:\n\ncovariance_plot(\"Population_mln\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nPopulation Inferences:\nConclusion: We may want to do this again without China and India, as they seems to be skewing the data\n\nThinness:\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nThinness:\nStrong positive: Thinness\nPositive: Infant deaths, under five deaths, adult mortality\nNegative: Life expectancy, alcohol consumption, BMI, schooling\nNo surprise that the two thinness are basically one to one.\n\nSchooling:\n\ncovariance_plot(\"Schooling\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nPositive: Life expectancy, alcohol consumption, measles, BMI, polio, diphtheria, GDP\nNegative: Infant deaths, under five deaths, adult mortality, thinness\n\n\n\n\n\n\n\nFor testing purposes, we must separate out a portion of the data now. We will be using a 80/20 split. 80% Training, 20% testing.\n\n\n\n#seed to make this reproducible \nset.seed(333)\n\n#split the data\ntraining.samples &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain.data &lt;- sdf[training.samples, ]\ntest.data &lt;- sdf[-training.samples, ]\n\n\n\n\nWe are leaving out one of the two economy status variables as they are two halves of a binary variable.\nWe must also pick between Country and Region, as having both in the model seems to create singularities. For readability sake we will be keeping Region\n\n#make the model\nLE_MR &lt;- lm(Life_expectancy ~ .  -Economy_status_Developing -Country , data = train.data)\n\n#print summary of the model\nsummary(LE_MR)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Economy_status_Developing - \n    Country, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.45439 -0.08736 -0.00297  0.08382  0.60675 \n\nCoefficients:\n                                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         -0.1066983  0.0139377  -7.655 2.84e-14 ***\nRegionAsia                           0.0408052  0.0121871   3.348 0.000827 ***\nRegionCentral America and Caribbean  0.2160099  0.0128928  16.754  &lt; 2e-16 ***\nRegionEuropean Union                -0.0760235  0.0190799  -3.984 6.98e-05 ***\nRegionMiddle East                    0.0337327  0.0149020   2.264 0.023691 *  \nRegionNorth America                  0.0806516  0.0254903   3.164 0.001577 ** \nRegionOceania                       -0.0846981  0.0154317  -5.489 4.51e-08 ***\nRegionRest of Europe                 0.0305305  0.0151715   2.012 0.044300 *  \nRegionSouth America                  0.1913290  0.0148165  12.913  &lt; 2e-16 ***\nInfant_deaths                       -0.1453887  0.0179910  -8.081 1.04e-15 ***\nUnder_five_deaths                   -0.2410563  0.0181045 -13.315  &lt; 2e-16 ***\nAdult_mortality                     -0.5682994  0.0078518 -72.379  &lt; 2e-16 ***\nAlcohol_consumption                 -0.0015641  0.0049114  -0.318 0.750163    \nHepatitis_B                         -0.0132183  0.0045331  -2.916 0.003581 ** \nMeasles                              0.0025920  0.0034613   0.749 0.454030    \nBMI                                 -0.0307122  0.0052688  -5.829 6.38e-09 ***\nPolio                                0.0161071  0.0092268   1.746 0.081001 .  \nDiphtheria                          -0.0106687  0.0096653  -1.104 0.269792    \nIncidents_HIV                        0.0179509  0.0046521   3.859 0.000117 ***\nGDP_per_capita                       0.0345499  0.0042100   8.207 3.78e-16 ***\nPopulation_mln                      -0.0043878  0.0028185  -1.557 0.119671    \nThinness_ten_nineteen_years         -0.0163594  0.0078495  -2.084 0.037261 *  \nThinness_five_nine_years             0.0113872  0.0079526   1.432 0.152314    \nSchooling                            0.0379658  0.0062753   6.050 1.69e-09 ***\nEconomy_status_Developed1            0.2759249  0.0176359  15.646  &lt; 2e-16 ***\nYear2001                             0.0036431  0.0150026   0.243 0.808156    \nYear2002                             0.0047602  0.0150254   0.317 0.751417    \nYear2003                            -0.0002601  0.0150909  -0.017 0.986251    \nYear2004                            -0.0019237  0.0151688  -0.127 0.899095    \nYear2005                             0.0060558  0.0152973   0.396 0.692236    \nYear2006                            -0.0028633  0.0149272  -0.192 0.847903    \nYear2007                             0.0080377  0.0152156   0.528 0.597376    \nYear2008                             0.0143914  0.0149241   0.964 0.334998    \nYear2009                             0.0231979  0.0154422   1.502 0.133175    \nYear2010                             0.0260254  0.0152619   1.705 0.088285 .  \nYear2011                             0.0250554  0.0150605   1.664 0.096321 .  \nYear2012                             0.0324372  0.0150364   2.157 0.031093 *  \nYear2013                             0.0367911  0.0155761   2.362 0.018260 *  \nYear2014                             0.0557758  0.0154254   3.616 0.000306 ***\nYear2015                             0.0570597  0.0154153   3.701 0.000219 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1278 on 2253 degrees of freedom\nMultiple R-squared:  0.9841,    Adjusted R-squared:  0.9838 \nF-statistic:  3579 on 39 and 2253 DF,  p-value: &lt; 2.2e-16\n\n\nEach variable in the model is given a P_Value, The lower the P_Value is the more significant the attribute is, with the cutoff for significance being 0.05.\nFrom this first model we can see that the following attributes are significant:\n\nAny attribute not on this table did not make the cut for significance.\n\n\nAttribute\nP Value\n\n\n\n\nRegion\nVarious\n\n\nInfant Deaths\n1.04e-15\n\n\nUnder Five Deaths\n2e-16\n\n\nAdult Mortality\n2e-16\n\n\nHepatitis B\n0.003581\n\n\nBMI\n6.38e-09\n\n\nPolio\n0.081001\n\n\nIncidents HIV\n0.000117\n\n\nGDP per Capita\n3.78e-16\n\n\nThinness_ten_nineteen\n0.037261\n\n\nSchooling\n1.69e-09\n\n\nEconomy_Status\n2e-16\n\n\nYear\nVarious\n\n\n\nThis model has a very high R-Squared, but we need to be wary of over-fitting as well as other potential issues such as multicollinearity values.\n\n\n\nFirst performing a vif test to check for multicollinearity\n\nvif(LE_MR)\n\n                                 GVIF Df GVIF^(1/(2*Df))\nRegion                      52.587643  8        1.281018\nInfant_deaths               46.712975  1        6.834689\nUnder_five_deaths           47.630069  1        6.901454\nAdult_mortality              8.543636  1        2.922950\nAlcohol_consumption          3.411669  1        1.847070\nHepatitis_B                  2.772769  1        1.665163\nMeasles                      1.650280  1        1.284632\nBMI                          3.983825  1        1.995952\nPolio                       11.845756  1        3.441766\nDiphtheria                  13.011222  1        3.607107\nIncidents_HIV                2.946336  1        1.716490\nGDP_per_capita               2.628907  1        1.621390\nPopulation_mln               1.213445  1        1.101565\nThinness_ten_nineteen_years  8.612156  1        2.934648\nThinness_five_nine_years     8.871877  1        2.978570\nSchooling                    5.579833  1        2.362167\nEconomy_status_Developed     7.121377  1        2.668591\nYear                         1.191581 15        1.005860\n\n\nThere are several variables that have high multicollinearity. From the co-variation analysis done in 4.3 we know that Infant deaths and under five deaths are very closely related, as well as the two thinness variables, and Polio and Diphtheria are related.\nWe should only pick one of the variables in these pairs in order to avoid the issues that arise from having high multicollinearity values. We will be picking the values that have more relevance to the models.\nAs neither polio nor diphtheria are significant to the model we will be dropping both.\nFor the other two pairs we will be keeping:\n\nUnder Five Deaths\nThinness_ten_nineteen\n\nWe will also be dropping Region from the model due to its very high VIF test result.\nFirst, remove the variables from the VIF test.\n\n#make the multiple Regression model for Life Expectancy \nLE_MR2 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years, data = train.data)\n\n#print summary of the model\nsummary(LE_MR2)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years, \n    data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51173 -0.09891 -0.00468  0.09589  0.93355 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050046   0.015922   3.143  0.00169 ** \nUnder_five_deaths           -0.386302   0.007926 -48.738  &lt; 2e-16 ***\nAdult_mortality             -0.596080   0.008809 -67.669  &lt; 2e-16 ***\nAlcohol_consumption          0.032940   0.004732   6.961 4.42e-12 ***\nHepatitis_B                 -0.007311   0.003902  -1.873  0.06113 .  \nMeasles                      0.003348   0.003834   0.873  0.38272    \nBMI                         -0.035360   0.004961  -7.128 1.36e-12 ***\nIncidents_HIV                0.023195   0.005200   4.460 8.59e-06 ***\nGDP_per_capita               0.048889   0.004541  10.767  &lt; 2e-16 ***\nPopulation_mln              -0.003616   0.003158  -1.145  0.25230    \nThinness_ten_nineteen_years -0.017529   0.004373  -4.008 6.31e-05 ***\nSchooling                    0.033128   0.006463   5.126 3.22e-07 ***\nEconomy_status_Developing1  -0.079675   0.013134  -6.066 1.53e-09 ***\nYear2001                     0.007050   0.017306   0.407  0.68374    \nYear2002                     0.002974   0.017316   0.172  0.86366    \nYear2003                     0.001353   0.017396   0.078  0.93801    \nYear2004                    -0.006486   0.017472  -0.371  0.71049    \nYear2005                    -0.002628   0.017620  -0.149  0.88145    \nYear2006                    -0.004286   0.017194  -0.249  0.80316    \nYear2007                     0.002856   0.017520   0.163  0.87054    \nYear2008                     0.006734   0.017153   0.393  0.69465    \nYear2009                     0.011643   0.017742   0.656  0.51172    \nYear2010                     0.020988   0.017506   1.199  0.23068    \nYear2011                     0.013066   0.017255   0.757  0.44901    \nYear2012                     0.022202   0.017205   1.290  0.19701    \nYear2013                     0.025501   0.017784   1.434  0.15173    \nYear2014                     0.041596   0.017626   2.360  0.01836 *  \nYear2015                     0.048717   0.017567   2.773  0.00560 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2265 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  3861 on 27 and 2265 DF,  p-value: &lt; 2.2e-16\n\n\nNext remove measles\n\n#make the multiple Regression model for Life Expectancy \nLE_MR3 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles, data = train.data)\n\n#print summary of the model\nsummary(LE_MR3)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years - \n    Measles, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51250 -0.09831 -0.00455  0.09440  0.93757 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050020   0.015921   3.142  0.00170 ** \nUnder_five_deaths           -0.386432   0.007924 -48.766  &lt; 2e-16 ***\nAdult_mortality             -0.596671   0.008782 -67.941  &lt; 2e-16 ***\nAlcohol_consumption          0.033177   0.004724   7.023 2.86e-12 ***\nHepatitis_B                 -0.006479   0.003784  -1.712  0.08699 .  \nBMI                         -0.035190   0.004957  -7.100 1.67e-12 ***\nIncidents_HIV                0.023402   0.005195   4.505 6.98e-06 ***\nGDP_per_capita               0.048910   0.004540  10.772  &lt; 2e-16 ***\nPopulation_mln              -0.003818   0.003150  -1.212  0.22553    \nThinness_ten_nineteen_years -0.017545   0.004373  -4.012 6.21e-05 ***\nSchooling                    0.033816   0.006415   5.272 1.48e-07 ***\nEconomy_status_Developing1  -0.079557   0.013132  -6.058 1.61e-09 ***\nYear2001                     0.007142   0.017304   0.413  0.67986    \nYear2002                     0.003142   0.017314   0.182  0.85599    \nYear2003                     0.001277   0.017395   0.073  0.94150    \nYear2004                    -0.006502   0.017471  -0.372  0.70979    \nYear2005                    -0.002665   0.017619  -0.151  0.87981    \nYear2006                    -0.004253   0.017193  -0.247  0.80462    \nYear2007                     0.002819   0.017519   0.161  0.87219    \nYear2008                     0.006512   0.017151   0.380  0.70422    \nYear2009                     0.011442   0.017739   0.645  0.51898    \nYear2010                     0.020778   0.017503   1.187  0.23531    \nYear2011                     0.012996   0.017254   0.753  0.45140    \nYear2012                     0.022204   0.017204   1.291  0.19696    \nYear2013                     0.025139   0.017778   1.414  0.15749    \nYear2014                     0.041520   0.017625   2.356  0.01857 *  \nYear2015                     0.048636   0.017566   2.769  0.00567 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2266 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  4010 on 26 and 2266 DF,  p-value: &lt; 2.2e-16\n\n\nnext remove population\n\n#make the multiple Regression model for Life Expectancy \nLE_MR4 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln, data = train.data)\n\n#print summary of the model\nsummary(LE_MR4)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years - \n    Measles - Population_mln, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51307 -0.09792 -0.00394  0.09519  0.93736 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050652   0.015914   3.183  0.00148 ** \nUnder_five_deaths           -0.386244   0.007924 -48.746  &lt; 2e-16 ***\nAdult_mortality             -0.595477   0.008728 -68.228  &lt; 2e-16 ***\nAlcohol_consumption          0.032976   0.004722   6.984 3.76e-12 ***\nHepatitis_B                 -0.006014   0.003765  -1.598  0.11028    \nBMI                         -0.034346   0.004908  -6.998 3.40e-12 ***\nIncidents_HIV                0.023078   0.005188   4.448 9.09e-06 ***\nGDP_per_capita               0.049225   0.004533  10.858  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.018571   0.004290  -4.328 1.57e-05 ***\nSchooling                    0.033231   0.006397   5.195 2.23e-07 ***\nEconomy_status_Developing1  -0.080269   0.013121  -6.118 1.11e-09 ***\nYear2001                     0.007042   0.017306   0.407  0.68412    \nYear2002                     0.003269   0.017315   0.189  0.85028    \nYear2003                     0.001075   0.017396   0.062  0.95073    \nYear2004                    -0.006690   0.017472  -0.383  0.70185    \nYear2005                    -0.002894   0.017619  -0.164  0.86956    \nYear2006                    -0.004419   0.017194  -0.257  0.79717    \nYear2007                     0.002706   0.017521   0.154  0.87726    \nYear2008                     0.006542   0.017152   0.381  0.70295    \nYear2009                     0.011470   0.017741   0.647  0.51799    \nYear2010                     0.020597   0.017505   1.177  0.23946    \nYear2011                     0.012816   0.017255   0.743  0.45772    \nYear2012                     0.022055   0.017205   1.282  0.20000    \nYear2013                     0.024885   0.017779   1.400  0.16173    \nYear2014                     0.041227   0.017625   2.339  0.01941 *  \nYear2015                     0.048649   0.017567   2.769  0.00566 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2267 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  4169 on 25 and 2267 DF,  p-value: &lt; 2.2e-16\n\n\nNext we remove year,\n\n#make the multiple Regression model for Life Expectancy \nLE_MR5 &lt;- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln , data = train.data)\n\n#print summary of the model\nsummary(LE_MR5)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Year - \n    Economy_status_Developed - Polio - Diphtheria - Infant_deaths - \n    Thinness_five_nine_years - Measles - Population_mln, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.50802 -0.09808 -0.00724  0.09558  0.94591 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.060100   0.010872   5.528 3.61e-08 ***\nUnder_five_deaths           -0.384942   0.007929 -48.550  &lt; 2e-16 ***\nAdult_mortality             -0.598249   0.008715 -68.649  &lt; 2e-16 ***\nAlcohol_consumption          0.032231   0.004724   6.823 1.14e-11 ***\nHepatitis_B                 -0.005156   0.003749  -1.375    0.169    \nBMI                         -0.033666   0.004911  -6.855 9.15e-12 ***\nIncidents_HIV                0.024005   0.005187   4.628 3.90e-06 ***\nGDP_per_capita               0.048657   0.004539  10.721  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.017914   0.004291  -4.174 3.10e-05 ***\nSchooling                    0.035912   0.006375   5.633 1.99e-08 ***\nEconomy_status_Developing1  -0.077447   0.013114  -5.906 4.04e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1478 on 2282 degrees of freedom\nMultiple R-squared:  0.9785,    Adjusted R-squared:  0.9784 \nF-statistic: 1.038e+04 on 10 and 2282 DF,  p-value: &lt; 2.2e-16\n\n\nNow Hep B has the lowest P Values and is thus next to be removed\n\n#make the multiple Regression model for Life Expectancy \nLE_MR6 &lt;- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln -Hepatitis_B, data = train.data)\n\n#print summary of the model\nsummary(LE_MR6)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Year - \n    Economy_status_Developed - Polio - Diphtheria - Infant_deaths - \n    Thinness_five_nine_years - Measles - Population_mln - Hepatitis_B, \n    data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.50728 -0.09775 -0.00759  0.09580  0.94256 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.060964   0.010856   5.616 2.19e-08 ***\nUnder_five_deaths           -0.381629   0.007556 -50.510  &lt; 2e-16 ***\nAdult_mortality             -0.598373   0.008716 -68.653  &lt; 2e-16 ***\nAlcohol_consumption          0.032139   0.004724   6.803 1.31e-11 ***\nBMI                         -0.033723   0.004912  -6.865 8.51e-12 ***\nIncidents_HIV                0.023336   0.005165   4.518 6.55e-06 ***\nGDP_per_capita               0.048763   0.004539  10.744  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.017852   0.004292  -4.159 3.31e-05 ***\nSchooling                    0.036260   0.006372   5.691 1.43e-08 ***\nEconomy_status_Developing1  -0.078664   0.013087  -6.011 2.14e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1479 on 2283 degrees of freedom\nMultiple R-squared:  0.9785,    Adjusted R-squared:  0.9784 \nF-statistic: 1.153e+04 on 9 and 2283 DF,  p-value: &lt; 2.2e-16\n\n\n\nggplot(df, aes(x = Under_five_deaths, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Under Five Deaths\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Adult_mortality\nggplot(df, aes(x = Adult_mortality, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") +\n  labs(title = \"Life Expectancy vs Adult Mortality\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Alcohol_consumption\nggplot(df, aes(x = Alcohol_consumption, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Alcohol Consumption\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for BMI\nggplot(df, aes(x = BMI, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs BMI\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Incidents_HIV\nggplot(df, aes(x = Incidents_HIV, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Incidents HIV\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for GDP_per_capita\nggplot(df, aes(x = GDP_per_capita, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs GDP per Capita\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Thinness_ten_nineteen_years\nggplot(df, aes(x = Thinness_ten_nineteen_years, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Thinness (10-19 years)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Schooling\nggplot(df, aes(x = Schooling, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Schooling\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTesting the data\n\npredictions &lt;- predict(LE_MR, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 1\")\n\n[1] \"RMSE 1\"\n\nrmse\n\n[1] 0.0006730005\n\npredictions &lt;- predict(LE_MR2, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 2\")\n\n[1] \"RMSE 2\"\n\nrmse\n\n[1] 0.006045691\n\nrmsepredictions &lt;- predict(LE_MR3, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 3\")\n\n[1] \"RMSE 3\"\n\nrmse\n\n[1] 0.006045691\n\npredictions &lt;- predict(LE_MR4, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 4\")\n\n[1] \"RMSE 4\"\n\nrmse\n\n[1] 0.006292047\n\npredictions &lt;- predict(LE_MR5, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 5\")\n\n[1] \"RMSE 5\"\n\nrmse\n\n[1] 0.006712114\n\npredictions &lt;- predict(LE_MR6, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 6\")\n\n[1] \"RMSE 6\"\n\nrmse\n\n[1] 0.007220434\n\n\n\nComparing the Regression Models\n\n\nModel\nRMSE\nAdjusted R^2\n\n\n\n\nLE_MR\n0.0006730005\n0.9838\n\n\nLE_MR2\n0.006045691\n0.9785\n\n\nLE_MR3\n0.006045691\n0.9785\n\n\nLE_MR4\n0.006292047\n0.9785\n\n\nLE_MR5\n0.006712114\n0.9784\n\n\nLE_MR6\n0.007220434\n0.9784\n\n\n\n\n\n\n\nSplitting the dataset\n\nglimpse(sdf)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Infant_deaths               &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Under_five_deaths           &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Adult_mortality             &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Alcohol_consumption         &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Hepatitis_B                 &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Measles                     &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ BMI                         &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Polio                       &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Diphtheria                  &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Incidents_HIV               &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ GDP_per_capita              &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Population_mln              &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Thinness_ten_nineteen_years &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Thinness_five_nine_years    &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Schooling                   &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0,…\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,…\n$ Life_expectancy             &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 20…\n\n\n\nsdf_num &lt;- sdf %&gt;% select_if(is.numeric)\n\n\n#seed to make this reproducible \nset.seed(444)\n\n#split the data\ntraining.samples. &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain_data_nn &lt;- sdf_num[training.samples, ]\ntest_data_nn &lt;- sdf_num[-training.samples, ]\n\nTraining\n\n# Train the neural network\nnn &lt;- neuralnet(Life_expectancy ~ . -Diphtheria  - Infant_deaths - Thinness_ten_nineteen_years \n, data = train_data_nn, hidden = 3,\n linear.output = FALSE)\nplot(nn)\n\n\n\n\n\n#seed to make this reproducible \nset.seed(444)\n\n#split the data\ntraining.samples &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain.data.svm &lt;- sdf[training.samples, ]\ntest.data.svm &lt;- sdf[-training.samples, ]\n\nThe data needs to be scaled for SVR\n\n# Filter out non-numeric columns\nnumeric_cols &lt;- sapply(train.data.svm, is.numeric)\ntrain.data.svm_numeric &lt;- train.data.svm[, numeric_cols]\n\n# Scale the numeric features\ntrain.data.svm_scaled &lt;- as.data.frame(scale(train.data.svm_numeric))\n\n# Train the SVR model \nLE_SVR &lt;- svm(Life_expectancy ~ . , data = train.data.svm_scaled)\n\nEvaluate Model function:\n\nevaluate_SVR_model &lt;- function(model, test_data) {\n  \n  actual_values &lt;- test_data$Life_expectancy\n  \n  # Predict \n  predicted_values &lt;- predict(model, newdata = test_data)\n  \n  # Calculate evaluation metrics\n  mae &lt;- mean(abs(predicted_values - actual_values))\n  mse &lt;- mean((predicted_values - actual_values)^2)\n  rmse &lt;- sqrt(mse)\n  r_squared &lt;- cor(predicted_values, actual_values)^2\n  \n  # Calculate Adjusted R-squared\n  n &lt;- length(actual_values)\n  p &lt;- 1  # Assuming you have one predictor, adjust accordingly if you have more\n  adjusted_r_squared &lt;- 1 - ((1 - r_squared) * (n - 1) / (n - p - 1))\n  \n  # Print evaluation metrics\n  cat(\"Mean Absolute Error (MAE):\", mae, \"\\n\")\n  cat(\"Mean Squared Error (MSE):\", mse, \"\\n\")\n  cat(\"Root Mean Squared Error (RMSE):\", rmse, \"\\n\")\n  cat(\"R-squared:\", r_squared, \"\\n\")\n  cat(\"Adjusted R-squared:\", adjusted_r_squared, \"\\n\")\n}\n\nUse the function to evaluate the model\n\nevaluate_SVR_model(LE_SVR, test.data.svm)\n\nMean Absolute Error (MAE): 0.07397218 \nMean Squared Error (MSE): 0.007783215 \nRoot Mean Squared Error (RMSE): 0.08822253 \nR-squared: 0.9925463 \nAdjusted R-squared: 0.9925332 \n\n\nTo establish which of the variables are significant we will be removing them one at a time and re-evaluate to see if the model is more or less accurate, Paying attention to the Adjusted R-Square and RMSE especially.\n\nRecursive Feature Elimination - Run this at your own risk!\n\n# Adjust cross-validation settings\n# ctrl &lt;- rfeControl(method = \"cv\", number = 5, verbose = FALSE)\n\n# Use parallel processing\n\n# cores &lt;- parallel::detectCores()\n# cl &lt;- makeCluster(cores - 1)  # Use one less core to avoid overloading\n# registerDoParallel(cl)\n\n# Perform RFE with scaled features\n# rfe_result &lt;- rfe(x = train.data.svm_scaled, \n#                  y = train.data.svm$Life_expectancy,\n#                  sizes = c(1:length(predictors)), rfeControl = ctrl)\n\n# Stop parallel processing\n# stopCluster(cl)\n\n\nAs RFE is not working for the group, we are going to just brute force it by removing attributes one at a time and see if the models numbers get better.\nGlimpse of the data just for checking the names\n\nglimpse(train.data.svm_scaled)\n\nRows: 2,293\nColumns: 16\n$ Infant_deaths               &lt;dbl&gt; 0.7590492, 0.0841529, -0.7856332, -0.30562…\n$ Under_five_deaths           &lt;dbl&gt; 0.55258540, -0.05825996, -0.73598621, -0.3…\n$ Adult_mortality             &lt;dbl&gt; 0.077338858, 0.261532302, 0.006631077, -0.…\n$ Alcohol_consumption         &lt;dbl&gt; -0.82494784, 0.20916759, 1.85721042, -1.08…\n$ Hepatitis_B                 &lt;dbl&gt; -1.51935470, 0.53879157, 0.22695123, 0.788…\n$ Measles                     &lt;dbl&gt; -2.31877381, -0.19600053, 1.16475158, 0.51…\n$ BMI                         &lt;dbl&gt; -1.75692499, 0.11855802, 0.39301895, 1.307…\n$ Polio                       &lt;dbl&gt; -1.2747616, 0.3605905, 0.8184891, 0.687660…\n$ Diphtheria                  &lt;dbl&gt; -1.4035975, 0.4296643, 0.8089598, 0.808959…\n$ Incidents_HIV               &lt;dbl&gt; -0.32326406, -0.04478948, -0.34436062, -0.…\n$ GDP_per_capita              &lt;dbl&gt; -0.6173467, -0.4339117, -0.1456139, -0.460…\n$ Population_mln              &lt;dbl&gt; 7.79008710, -0.26103660, -0.19662543, -0.2…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9415722, 0.1836360, -0.5722978, -0.19433…\n$ Thinness_five_nine_years    &lt;dbl&gt; 5.0464300, 0.1296280, -0.5696505, -0.22001…\n$ Schooling                   &lt;dbl&gt; -0.83048406, 0.08144663, 0.80470200, 0.616…\n$ Life_expectancy             &lt;dbl&gt; -0.36755454, -0.19705890, 0.25049214, 0.32…\n\n\n\n#Without Infant_deaths\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Infant_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07471295 \nMean Squared Error (MSE): 0.007852998 \nRoot Mean Squared Error (RMSE): 0.08861714 \nR-squared: 0.9924428 \nAdjusted R-squared: 0.9924295 \n\n\n\n#Without Under_five_deaths\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Under_five_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07619821 \nMean Squared Error (MSE): 0.008231436 \nRoot Mean Squared Error (RMSE): 0.09072726 \nR-squared: 0.9920679 \nAdjusted R-squared: 0.992054 \n\n\n\n#Adult_mortality\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Adult_mortality, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.1133804 \nMean Squared Error (MSE): 0.02399256 \nRoot Mean Squared Error (RMSE): 0.1548953 \nR-squared: 0.9766539 \nAdjusted R-squared: 0.9766129 \n\n\n\n#Alcohol_consumption\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Alcohol_consumption, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07744333 \nMean Squared Error (MSE): 0.008586509 \nRoot Mean Squared Error (RMSE): 0.09266342 \nR-squared: 0.9916855 \nAdjusted R-squared: 0.9916709 \n\n\n\n#Hepatitis_B                 \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Hepatitis_B                 , data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07241759 \nMean Squared Error (MSE): 0.007626557 \nRoot Mean Squared Error (RMSE): 0.08733016 \nR-squared: 0.9926655 \nAdjusted R-squared: 0.9926526 \n\n\n\n#Measles                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Measles, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07528426 \nMean Squared Error (MSE): 0.008338268 \nRoot Mean Squared Error (RMSE): 0.09131412 \nR-squared: 0.9919717 \nAdjusted R-squared: 0.9919576 \n\n\n\n#BMI                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - BMI, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07787055 \nMean Squared Error (MSE): 0.009170201 \nRoot Mean Squared Error (RMSE): 0.09576117 \nR-squared: 0.9912598 \nAdjusted R-squared: 0.9912444 \n\n\n\n#Polio                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Polio, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07443335 \nMean Squared Error (MSE): 0.007857034 \nRoot Mean Squared Error (RMSE): 0.08863991 \nR-squared: 0.9925017 \nAdjusted R-squared: 0.9924885 \n\n\n\n#Diphtheria                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Diphtheria, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07355648 \nMean Squared Error (MSE): 0.007704026 \nRoot Mean Squared Error (RMSE): 0.08777258 \nR-squared: 0.9926214 \nAdjusted R-squared: 0.9926085 \n\n\n\n#Incidents_HIV                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Incidents_HIV, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07527161 \nMean Squared Error (MSE): 0.008397796 \nRoot Mean Squared Error (RMSE): 0.09163949 \nR-squared: 0.9918974 \nAdjusted R-squared: 0.9918832 \n\n\n\n#GDP_per_capita                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - GDP_per_capita, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07584458 \nMean Squared Error (MSE): 0.008198734 \nRoot Mean Squared Error (RMSE): 0.09054686 \nR-squared: 0.9921686 \nAdjusted R-squared: 0.9921549 \n\n\n\n#Population_mln                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Population_mln, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07505001 \nMean Squared Error (MSE): 0.008137925 \nRoot Mean Squared Error (RMSE): 0.09021045 \nR-squared: 0.992191 \nAdjusted R-squared: 0.9921773 \n\n\n\n#Thinness_ten_nineteen_years\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Thinness_ten_nineteen_years, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07369326 \nMean Squared Error (MSE): 0.007717285 \nRoot Mean Squared Error (RMSE): 0.08784808 \nR-squared: 0.9925828 \nAdjusted R-squared: 0.9925698 \n\n\n\n#Thinness_five_nine_years\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Thinness_five_nine_years, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07403657 \nMean Squared Error (MSE): 0.007772499 \nRoot Mean Squared Error (RMSE): 0.08816178 \nR-squared: 0.9925884 \nAdjusted R-squared: 0.9925753 \n\n\n\n#Schooling\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Schooling, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07663966 \nMean Squared Error (MSE): 0.008466487 \nRoot Mean Squared Error (RMSE): 0.09201351 \nR-squared: 0.9918468 \nAdjusted R-squared: 0.9918324 \n\n\nTable comparing the different SVR models.\n\n\n\n\n\n\n\n\n\n\n\nRemoved Variable\nMAE\nMSE\nRMSE\nR-Squared\nAdjusted R-Squared\n\n\n\n\nNone (Base)\n0.07395971\n0.00778042\n0.08820669\n0.9925481\n0.992535\n\n\nInfant deaths\n0.07470623\n0.007850003\n0.08860024\n0.992445\n0.9924317\n\n\nUnder five deaths\n0.07621305\n0.008232278\n0.0907319\n0.9920679\n0.992054\n\n\nAdult mortality\n0.1133804\n0.02399256\n0.1548953\n0.9766539\n0.9766129\n\n\nAlcohol consumption\n0.07744333\n0.008586509\n0.09266342\n0.9916855\n0.9916709\n\n\nHepatitis B\n0.07243036\n0.007626723\n0.08733111\n0.992664\n0.9926511\n\n\nMeasles\n0.07528426\n0.008338268\n0.09131412\n0.9919717\n0.9919576\n\n\nBMI\n0.07787055\n0.009170201\n0.09576117\n0.9912598\n0.9912444\n\n\nPolio\n0.0744371\n0.007858702\n0.08864932\n0.9925011\n0.9924879\n\n\nDiphtheria\n0.07355422\n0.007703352\n0.08776874\n0.9926202\n0.9926072\n\n\nIncidents HIV\n0.07527161\n0.008397796\n0.09163949\n0.9918974\n0.9918832\n\n\nGDP per capita\n0.07584458\n0.008198734\n0.09054686\n0.9921686\n0.9921549\n\n\nPopulation mln\n0.07505001\n0.008137925\n0.09021045\n0.992191\n0.9921773\n\n\nThinness ten nineteen years\n0.07371203\n0.007720199\n0.08786466\n0.992582\n0.992569\n\n\nThinness five nine years\n0.0740283\n0.007773223\n0.08816589\n0.9925873\n0.9925743\n\n\nSchooling\n0.07663966\n0.008466487\n0.09201351\n0.9918468\n0.9918324\n\n\n\nThe general idea of this table is that the worse the model does without the given variable, the more important the variable is to the SVR model.\nThe fact that Infant deaths and Under 5 deaths are not showing as significant is interesting, as every other model shows them as being very significant. It is possible that due to the Multicollinearity between them, removing one will not have much of an effect as the other is still present in the model, to test this we will remove both to see what happens.\n\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Under_five_deaths -Infant_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.08451521 \nMean Squared Error (MSE): 0.01103041 \nRoot Mean Squared Error (RMSE): 0.1050258 \nR-squared: 0.989295 \nAdjusted R-squared: 0.9892762 \n\n\nAnd yes, this is having a very large effect on the model, its not perfectly comparable to the removal of one of the variables at a time, but it is enough for us to assume that Infant Deaths and Under five deaths are more significant that the table initially lets on.\n\n\nAdult_Mortality, BMI and Schooling all negatively impact the model enough when removed to be significant.\nThis method is not without it faults however, as it doesn’t identify Under_five_deaths or Infant_deaths as significant. However if both are removed from the model, it causes a significant increase in error of the model. As we laid out in the previous model, these variables are high in multicollinearity. It is very possible that the removal of one of these is beneficial to the model, to prevent over-fitting, and the negative effects of removing these significant attributes is only shown when both are removed.\n\n\n\n\nSet up the data for Random Forest:\n\nRF_DF &lt;- df[, !(names(df) %in% c(\"Region\", \"Country\", \"Economy_status_Developed\", \"Economy_status_Developing\",\"Year\"))]\n\nsummary(RF_DF)\n\n Infant_deaths    Under_five_deaths Adult_mortality  Alcohol_consumption\n Min.   :  1.80   Min.   :  2.300   Min.   : 49.38   Min.   : 0.000     \n 1st Qu.:  8.10   1st Qu.:  9.675   1st Qu.:106.91   1st Qu.: 1.200     \n Median : 19.60   Median : 23.100   Median :163.84   Median : 4.020     \n Mean   : 30.36   Mean   : 42.938   Mean   :192.25   Mean   : 4.821     \n 3rd Qu.: 47.35   3rd Qu.: 66.000   3rd Qu.:246.79   3rd Qu.: 7.777     \n Max.   :138.10   Max.   :224.900   Max.   :719.36   Max.   :17.870     \n  Hepatitis_B       Measles           BMI            Polio        Diphtheria   \n Min.   :12.00   Min.   :10.00   Min.   :19.80   Min.   : 8.0   Min.   :16.00  \n 1st Qu.:78.00   1st Qu.:64.00   1st Qu.:23.20   1st Qu.:81.0   1st Qu.:81.00  \n Median :89.00   Median :83.00   Median :25.50   Median :93.0   Median :93.00  \n Mean   :84.29   Mean   :77.34   Mean   :25.03   Mean   :86.5   Mean   :86.27  \n 3rd Qu.:96.00   3rd Qu.:93.00   3rd Qu.:26.40   3rd Qu.:97.0   3rd Qu.:97.00  \n Max.   :99.00   Max.   :99.00   Max.   :32.10   Max.   :99.0   Max.   :99.00  \n Incidents_HIV     GDP_per_capita   Population_mln    \n Min.   : 0.0100   Min.   :   148   Min.   :   0.080  \n 1st Qu.: 0.0800   1st Qu.:  1416   1st Qu.:   2.098  \n Median : 0.1500   Median :  4217   Median :   7.850  \n Mean   : 0.8943   Mean   : 11541   Mean   :  36.676  \n 3rd Qu.: 0.4600   3rd Qu.: 12557   3rd Qu.:  23.688  \n Max.   :21.6800   Max.   :112418   Max.   :1379.860  \n Thinness_ten_nineteen_years Thinness_five_nine_years   Schooling     \n Min.   : 0.100              Min.   : 0.1             Min.   : 1.100  \n 1st Qu.: 1.600              1st Qu.: 1.6             1st Qu.: 5.100  \n Median : 3.300              Median : 3.4             Median : 7.800  \n Mean   : 4.866              Mean   : 4.9             Mean   : 7.632  \n 3rd Qu.: 7.200              3rd Qu.: 7.3             3rd Qu.:10.300  \n Max.   :27.700              Max.   :28.6             Max.   :14.100  \n Life_expectancy\n Min.   :39.40  \n 1st Qu.:62.70  \n Median :71.40  \n Mean   :68.86  \n 3rd Qu.:75.40  \n Max.   :83.80  \n\n\nSplit the data:\n\n# Set seed for reproducibility\nset.seed(321)\n\n# Split the data into training and testing sets\ntrain_index_RF &lt;- createDataPartition(RF_DF$Life_expectancy, p = 0.8, list = FALSE)\ntrain_data_RF &lt;- RF_DF[train_index_RF, ]\ntest_data_RF &lt;- RF_DF[-train_index_RF, ]\n\nMaking the model:\n\n# Train the random forest model\nrf_model &lt;- randomForest(Life_expectancy ~ ., data = train_data_RF, ntree = 500)\n\n# Print the trained model\nprint(rf_model)\n\n\nCall:\n randomForest(formula = Life_expectancy ~ ., data = train_data_RF,      ntree = 500) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 5\n\n          Mean of squared residuals: 0.2893711\n                    % Var explained: 99.67\n\n\nAssessing the model:\n\npredicted_values &lt;- predict(rf_model, test_data_RF)\n\nrmse_value &lt;- sqrt(mean((predicted_values - test_data_RF$Life_expectancy)^2))\nprint(paste(\"RMSE:\", rmse_value))\n\n[1] \"RMSE: 0.499788784239889\"\n\n# R-squared\nobserved_values &lt;- test_data_RF$Life_expectancy\nr_squared &lt;- cor(observed_values, predicted_values)^2\nprint(paste(\"R-squared:\", r_squared))\n\n[1] \"R-squared: 0.997343879005976\"\n\n\nSignificance plot:\n\n# Print variable importance\nprint(rf_model$importance)\n\n                            IncNodePurity\nInfant_deaths                  38309.0795\nUnder_five_deaths              62636.1320\nAdult_mortality                51316.8181\nAlcohol_consumption             1260.6709\nHepatitis_B                      330.7512\nMeasles                         1600.2814\nBMI                             5418.3906\nPolio                           1192.1789\nDiphtheria                       770.9613\nIncidents_HIV                  16695.6777\nGDP_per_capita                 10782.2387\nPopulation_mln                   848.2376\nThinness_ten_nineteen_years     1139.3053\nThinness_five_nine_years        1346.8517\nSchooling                       7127.5208\n\n\nThis gives us another way to answer to see which variables are significant for Life Expectancy.\nInterpreting these values:\n\nInfant_deaths, Under_five_deaths, and Adult_mortality have the highest importance scores, indicating that they are the most important predictors of life expectancy in your model.\nAlcohol_consumption, BMI, Incidents_HIV, GDP_per_capita, and Schooling also have relatively high importance scores, suggesting that they significantly contribute to the model’s predictive performance.\nHepatitis_B, Measles, Polio, Diphtheria, Population_mln, Thinness_ten_nineteen_years, and Thinness_five_nine_years have relatively less impact on the model compared to others.\n\nThis backs up the Multiple Regression model findings.\n\n\n\n\nFrom the various model made above, it seems conclusive that the most significant variables for Life Expectancy are Infant_deaths, Under_five_deaths, and Adult_mortality. This is not a surprising conclusion as all three of these variables directly relate to death at a certain age, which is what Life Expectancy is measuring.\nThe more interesting variables of significance are Alcohol_consumption, BMI, Incidents_HIV, GDP_per_capita, and Schooling.\nIncidents of HIV is again no surprise as HIV is a debilitating illness that if untreated will result in death, therefore the higher the rate of HIV the lower the life expectancy.\nThe other variables in this group are more interesting, and seem to correlate with a nation being more developed, and thus having more access to healthcare, and thus a higher life expectancy.\n\n\n\n\nFor each of these models if multiple models were made, we are using the final version of the model for comparison.\n\n\n\nModel\nRMSE\nAdjusted R^2\n\n\n\n\nMultiple Regression\n0.007220434\n0.9784\n\n\nRandom Forest\n0.5001062729781\n0.9973385774022\n\n\nSVR\n0.08820669\n0.992533\n\n\n\nAccording to these numbers, the Multiple Regression model is the most accurate.\n\n\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nsplit the data\n\nset.seed(17)\n\npartition_index &lt;- createDataPartition(df$Economy_status_Developed, p = 0.7, list = FALSE)\n\ntrain_data_log &lt;- df[partition_index,]\nvalidation_data_log &lt;- df[-partition_index,]\n\nmake the model\n\nLE_Log &lt;- glm(Economy_status_Developed ~ Life_expectancy,\n              data = train_data_log,\n              family = binomial)\n\nSummary of the model:\n\nsummary(LE_Log)\n\n\nCall:\nglm(formula = Economy_status_Developed ~ Life_expectancy, family = binomial, \n    data = train_data_log)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     -41.61314    2.17086  -19.17   &lt;2e-16 ***\nLife_expectancy   0.53984    0.02848   18.95   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2045.29  on 2005  degrees of freedom\nResidual deviance:  965.27  on 2004  degrees of freedom\nAIC: 969.27\n\nNumber of Fisher Scoring iterations: 7\n\n\nAs expected from our previous question, Life Expectancy is significant to the countries status, with a P Value of 2e-16.\nOdds Ratio\n\nodds_ratio &lt;- exp(coef(LE_Log))\n\nprint(odds_ratio)\n\n    (Intercept) Life_expectancy \n   8.465307e-19    1.715740e+00 \n\n\nPredictions and Confusion matrix\n\npredictions &lt;- predict(LE_Log, validation_data_log, type = \"response\" )\n\nbinary_predictions &lt;- ifelse(predictions &gt; 0.5, 1, 0)\n\nconfusion_Matrix &lt;- confusionMatrix(factor(binary_predictions), factor(validation_data_log$Economy_status_Developed))\n\nprint(confusion_Matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 639  45\n         1  42 132\n                                         \n               Accuracy : 0.8986         \n                 95% CI : (0.8764, 0.918)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt;2e-16         \n                                         \n                  Kappa : 0.6884         \n                                         \n Mcnemar's Test P-Value : 0.8302         \n                                         \n            Sensitivity : 0.9383         \n            Specificity : 0.7458         \n         Pos Pred Value : 0.9342         \n         Neg Pred Value : 0.7586         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7448         \n   Detection Prevalence : 0.7972         \n      Balanced Accuracy : 0.8420         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\nOverall accuracy: 90.1%\nSpecificity: 70.62%\nSensitivity: 95.16%\nOverall a very good model, going off this confusion matrix. However can we make it better?\nROC Curve\n\n la.roc &lt;- roc(validation_data_log$Economy_status_Developed, predictions)\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\n plot.roc(la.roc, print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\nFrom this we have learned that the best threshold for this model for predictions would be 0.308\nRemake the model with the best threshold.\n\npredictions &lt;- predict(LE_Log, validation_data_log, type = \"response\" )\n\nbinary_predictions &lt;- ifelse(predictions &gt; 0.308, 1, 0)\n\nconfusion_Matrix &lt;- confusionMatrix(factor(binary_predictions), factor(validation_data_log$Economy_status_Developed))\n\nprint(confusion_Matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 608  34\n         1  73 143\n                                          \n               Accuracy : 0.8753          \n                 95% CI : (0.8513, 0.8967)\n    No Information Rate : 0.7937          \n    P-Value [Acc &gt; NIR] : 2.69e-10        \n                                          \n                  Kappa : 0.6479          \n                                          \n Mcnemar's Test P-Value : 0.0002392       \n                                          \n            Sensitivity : 0.8928          \n            Specificity : 0.8079          \n         Pos Pred Value : 0.9470          \n         Neg Pred Value : 0.6620          \n             Prevalence : 0.7937          \n         Detection Rate : 0.7086          \n   Detection Prevalence : 0.7483          \n      Balanced Accuracy : 0.8504          \n                                          \n       'Positive' Class : 0               \n                                          \n\n\nOverall accuracy: 89.76%\nSpecificity: 83.05%\nSensitivity: 91.5%\nPlease note that this “Best” model is simply the one with the highest sum of sensitivity and specificity. As we do not have any costs associated with false negatives and false positives it is not possible to determine what the best model for our situation is.\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nAny factors need to be turned back into numeric values for this model:\n\nxgdf &lt;- df %&gt;%\n  mutate_if(is.factor, as.numeric)\n\nxgdf &lt;- xgdf %&gt;%\n  select(Life_expectancy, Economy_status_Developed)\n\nSplit the data:\n\nset.seed(101)\n\n# Create train-test split\ntrain_index &lt;- createDataPartition(xgdf$Economy_status_Developed, p = 0.8, list = FALSE)\ntrain_data &lt;- xgdf[train_index, ]\ntest_data &lt;- xgdf[-train_index, ]\n\nXGBoost requires a specific format, DMatrix:\n\n# Convert labels to binary format\ntrain_data$Economy_status_Developed &lt;- ifelse(train_data$Economy_status_Developed == 1, 0, 1)\n\n# Train data\ndtrain &lt;- xgb.DMatrix(data = as.matrix(train_data[, -ncol(train_data)]), label = train_data$Economy_status_Developed)\n\n# Test data\ndtest &lt;- xgb.DMatrix(data = as.matrix(test_data[, -ncol(test_data)]), label = test_data$Economy_status_Developed)\n\nNow we can actually make the model:\n\nparams &lt;- list(\n  booster = \"gbtree\",\n  objective = \"binary:logistic\",\n  eta = 0.1,\n  gamma = 1,\n  max_depth = 6,\n  min_child_weight = 1,\n  subsample = 0.8,\n  colsample_bytree = 0.8\n)\n\n# Train the model\nXG_model &lt;- xgb.train(params = params, data = dtrain, nrounds = 100, watchlist = list(train = dtrain, test = dtest), early_stopping_rounds = 10)\n\n[1] train-logloss:0.625828  test-logloss:0.746798 \nMultiple eval metrics are present. Will use test_logloss for early stopping.\nWill train until test_logloss hasn't improved in 10 rounds.\n\n[2] train-logloss:0.570548  test-logloss:0.802487 \n[3] train-logloss:0.524475  test-logloss:0.858668 \n[4] train-logloss:0.485445  test-logloss:0.916790 \n[5] train-logloss:0.452155  test-logloss:0.972407 \n[6] train-logloss:0.424040  test-logloss:1.029547 \n[7] train-logloss:0.400175  test-logloss:1.084337 \n[8] train-logloss:0.379408  test-logloss:1.138477 \n[9] train-logloss:0.361277  test-logloss:1.194970 \n[10]    train-logloss:0.345439  test-logloss:1.251218 \n[11]    train-logloss:0.331490  test-logloss:1.304111 \nStopping. Best iteration:\n[1] train-logloss:0.625828  test-logloss:0.746798\n\n\nPredictions and Confusion Matrix:\n\npreds &lt;- predict(XG_model, dtest)\n\npredicted_labels &lt;- ifelse(preds &gt; 0.5, 1, 0)\n\n\npredicted_labels_factor &lt;- factor(predicted_labels, levels = c(0, 1))\nactual_labels_factor &lt;- factor(test_data$Economy_status_Developed, levels = c(0, 1))\n\n# Compute the confusion matrix\nconf_matrix &lt;- confusionMatrix(predicted_labels_factor, actual_labels_factor)\nprint(conf_matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0   0 445\n         1   0  19\n                                          \n               Accuracy : 0.0409          \n                 95% CI : (0.0248, 0.0632)\n    No Information Rate : 1               \n    P-Value [Acc &gt; NIR] : 1               \n                                          \n                  Kappa : 0               \n                                          \n Mcnemar's Test P-Value : &lt;2e-16          \n                                          \n            Sensitivity :      NA         \n            Specificity : 0.04095         \n         Pos Pred Value :      NA         \n         Neg Pred Value :      NA         \n             Prevalence : 0.00000         \n         Detection Rate : 0.00000         \n   Detection Prevalence : 0.95905         \n      Balanced Accuracy :      NA         \n                                          \n       'Positive' Class : 0               \n                                          \n\n\nSensitivity: 96.34%\nSpecificity: 67.59%\nOverall Accuracy: 90.90%\n\n xg.roc &lt;- roc(test_data$Economy_status_Developed, preds)\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\n plot.roc(xg.roc, print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nChange the data to a factor:\n\ndf$Country &lt;- factor(df$Country)\ndf$Region &lt;- factor(df$Region)\ndf$Region &lt;- factor(df$Region)\ndf$Year &lt;- factor(df$Year)\ndf$Economy_status_Developed &lt;- factor(df$Economy_status_Developed)\ndf$Economy_status_Developing &lt;- factor(df$Economy_status_Developing)\n\n\nset.seed(127)\n\n# Create the partition\npartition_index &lt;- createDataPartition(df$Economy_status_Developed, p = 0.7, list = FALSE)\ntrain_data_DT &lt;- df[partition_index,]\nvalidation_data_DT &lt;- df[-partition_index,]\n\n# Build the decision tree model\ntree_model &lt;- rpart(Economy_status_Developed ~ Life_expectancy, data = train_data_DT, method=\"class\")\n\n# Predict using the model\npredictions &lt;- predict(tree_model, validation_data_DT, type = \"class\")\n\n\n# Compute confusion matrix\nconfusion_Matrix_dt &lt;- confusionMatrix(predictions, validation_data_DT$Economy_status_Developed)\nprint(confusion_Matrix_dt)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 654  59\n         1  27 118\n                                         \n               Accuracy : 0.8998         \n                 95% CI : (0.8777, 0.919)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.672          \n                                         \n Mcnemar's Test P-Value : 0.0008293      \n                                         \n            Sensitivity : 0.9604         \n            Specificity : 0.6667         \n         Pos Pred Value : 0.9173         \n         Neg Pred Value : 0.8138         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7622         \n   Detection Prevalence : 0.8310         \n      Balanced Accuracy : 0.8135         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\n\nset.seed(431)\ntree_model2 &lt;- train(\n  Economy_status_Developed ~ Life_expectancy, \n  data = train_data_DT, method =\"rpart\",\n  trControl = trainControl(\"cv\", number = 10),\n  tuneLength = 10\n)\n\nplot(tree_model2)\n\n\n\n\n\n\n\ntree_model2$bestTune\n\n         cp\n9 0.4947791\n\n\n\n# Predict using new the model\npredictions &lt;- predict(tree_model2, validation_data_DT)\n\n# Ensure predictions are factors with the same levels as the actual data\npredictions &lt;- factor(predictions, levels = levels(validation_data_DT$Economy_status_Developed))\n\n# Compute confusion matrix\nconfusion_Matrix_dt &lt;- confusionMatrix(predictions, validation_data_DT$Economy_status_Developed)\nprint(confusion_Matrix_dt)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 654  59\n         1  27 118\n                                         \n               Accuracy : 0.8998         \n                 95% CI : (0.8777, 0.919)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.672          \n                                         \n Mcnemar's Test P-Value : 0.0008293      \n                                         \n            Sensitivity : 0.9604         \n            Specificity : 0.6667         \n         Pos Pred Value : 0.9173         \n         Neg Pred Value : 0.8138         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7622         \n   Detection Prevalence : 0.8310         \n      Balanced Accuracy : 0.8135         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\nSensitivity: 96.04%\nSpecificity: 66.67%\nOverall Accuracy: 89.98%\n\n# Visualize the first model\nprint(rpart.plot(tree_model))\n\n$obj\nn= 2006 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 2006 415 0 (0.79312064 0.20687936)  \n  2) Life_expectancy&lt; 77.45 1629 111 0 (0.93186004 0.06813996) *\n  3) Life_expectancy&gt;=77.45 377  73 1 (0.19363395 0.80636605) *\n\n$snipped.nodes\nNULL\n\n$xlim\n[1] -0.65  1.65\n\n$ylim\n[1] -0.6  1.6\n\n$x\n[1] 0.50000000 0.03831241 0.96168759\n\n$y\n[1] 0.91704414 0.05269236 0.05269236\n\n$branch.x\n  [,1]       [,2]      [,3]\nx  0.5 0.03831241 0.9616876\n    NA 0.03831241 0.9616876\n    NA 0.50000000 0.5000000\n\n$branch.y\n      [,1]      [,2]      [,3]\ny 1.112783 0.2484309 0.2484309\n        NA 0.7013644 0.7013644\n        NA 0.7013644 0.7013644\n\n$labs\n[1] \"0\\n0.21\\n100%\" \"0\\n0.07\\n81%\"  \"1\\n0.81\\n19%\" \n\n$cex\n[1] 1\n\n$boxes\n$boxes$x1\n[1]  0.39365767 -0.05058696  0.87278822\n\n$boxes$y1\n[1]  0.78292839 -0.08142339 -0.08142339\n\n$boxes$x2\n[1] 0.6063423 0.1272118 1.0505870\n\n$boxes$y2\n[1] 1.1127827 0.2484309 0.2484309\n\n\n$split.labs\n[1] \"\"\n\n$split.cex\n[1] 1 1 1\n\n$split.box\n$split.box$x1\n[1] 0.1591808        NA        NA\n\n$split.box$y1\n[1] 0.6397416        NA        NA\n\n$split.box$x2\n[1] 0.8408192        NA        NA\n\n$split.box$y2\n[1] 0.7629872        NA        NA\n\n# Visualize the tuned model\nprint(rpart.plot(tree_model2$finalModel))\n\n\n\n\n\n\n\n\n$obj\nn= 2006 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 2006 415 0 (0.79312064 0.20687936)  \n  2) Life_expectancy&lt; 77.45 1629 111 0 (0.93186004 0.06813996) *\n  3) Life_expectancy&gt;=77.45 377  73 1 (0.19363395 0.80636605) *\n\n$snipped.nodes\nNULL\n\n$xlim\n[1] -0.65  1.65\n\n$ylim\n[1] -0.6  1.6\n\n$x\n[1] 0.50000000 0.03831241 0.96168759\n\n$y\n[1] 0.91704414 0.05269236 0.05269236\n\n$branch.x\n  [,1]       [,2]      [,3]\nx  0.5 0.03831241 0.9616876\n    NA 0.03831241 0.9616876\n    NA 0.50000000 0.5000000\n\n$branch.y\n      [,1]      [,2]      [,3]\ny 1.112783 0.2484309 0.2484309\n        NA 0.7013644 0.7013644\n        NA 0.7013644 0.7013644\n\n$labs\n[1] \"0\\n0.21\\n100%\" \"0\\n0.07\\n81%\"  \"1\\n0.81\\n19%\" \n\n$cex\n[1] 1\n\n$boxes\n$boxes$x1\n[1]  0.39365767 -0.05058696  0.87278822\n\n$boxes$y1\n[1]  0.78292839 -0.08142339 -0.08142339\n\n$boxes$x2\n[1] 0.6063423 0.1272118 1.0505870\n\n$boxes$y2\n[1] 1.1127827 0.2484309 0.2484309\n\n\n$split.labs\n[1] \"\"\n\n$split.cex\n[1] 1 1 1\n\n$split.box\n$split.box$x1\n[1] 0.1591808        NA        NA\n\n$split.box$y1\n[1] 0.6397416        NA        NA\n\n$split.box$x2\n[1] 0.8408192        NA        NA\n\n$split.box$y2\n[1] 0.7629872        NA        NA\n\n\nPruning the tree has made no change in the model. Which, thinking about it makes sense. There isn’t anything to prune.\nMake the ROC Curve:\n\nprob_predictions &lt;- predict(tree_model2, validation_data_DT, type = \"prob\")\n\n\nroc_curve &lt;- roc(validation_data_DT$Economy_status_Developed, prob_predictions[,2])\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\nplot(roc_curve, main=\"ROC Curve\" , print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogistic\nTree\nXGBoost\n\n\n\n\nSpecificity\n83.05%\n66.67%\n67.59%\n\n\nSensitivity\n91.5%\n96.04%\n96.34%\n\n\nOverall\n89.76%\n89.98%\n90.90%\n\n\n\nFor Specificity (Minimize False Positives) the logistic model is the winner, For Sensitivity (Minimize False Negatives) both the decision tree and the XGBoost are comparable.\nHowever none of these models were made with either in mind, and these values could be fine tuned via the ROC Curves provided with each to specialize in either. However our data set doesn’t include any costs for False Positives or negatives, and as such it is difficult to determine a “Best.”\n\n\n\n\nAcross almost all of our plots, Africa is the lowest when it comes to life expectancy and the highest when it comes to mortality. Why is that? We will be looking at Africa in depth in order to possibly explain this.\n\nggplot(df, aes(x = Under_five_deaths, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Under Five Deaths\")\n\n\n\n\n\n\n\n\n\nggplot(df, aes(x = Adult_mortality, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Adult Mortality\")\n\n\n\n\n\n\n\n\nCombining under five deaths and Adult Mortality into one general Mortality variable, note that this will have a gap between 5 and 15, and anyone above 60 will be excluded in this metric.\n\ndf$Mortality &lt;- df$Under_five_deaths + df$Adult_mortality\n\nggplot(df, aes(x = Mortality, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Mortality\")\n\n\n\n\n\n\n\n\nNext we will break down Africa into the countries within it for further analysis, and examine each variable in our data set this way to look for possible explanations.\n\nfiltered_df &lt;- df %&gt;%\n  filter(Region == \"Africa\")\nggplot(filtered_df, aes(x = Mortality, y = Country)) +\n  geom_point() +              \n  labs(title = \"Region vs Mortality\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = BMI, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs BMI\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Alcohol_consumption, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Alcohol\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Hepatitis_B, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Hepatitis\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Measles, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Measles\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Polio, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Polio\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Diphtheria, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Diphtheria\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Incidents_HIV, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs HIV\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = GDP_per_capita, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs GDP\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Population_mln, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Population\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Thinness_ten_nineteen_years, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Thinness\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Schooling, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Schooling\")\n\n\n\n\n\n\n\n\nNot every African nation is low in life expectancy, Why is that? We will take out the two highest, and two lowest countries in Africa and examine them fully, taking the average of the variables within our data over the 15 years present within the data set.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountry\nMortality\nBMI\nAlcohol\nHepatitis B\nMeasles\nPolio\nDiphtheria\nHIV\n\n\n\n\nTunisia\n120\n25.69\n1.29\n96.75%\n97.81%\n97.69%\n97.69%\n0.03\n\n\nAlgeria\n150\n24.87\n0.40\n88.31%\n93.25%\n91.75%\n91.88%\n0.02\n\n\nZimbabwe\n600\n23.54\n2.90\n79.56%\n64.00%\n79.60%\n79.10%\n8.0\n\n\nLesotho\n690\n24.49\n2.62\n86.63%\n70.44%\n87.75%\n89.56%\n14.35\n\n\nUnited States\n116\n28.27\n8.60\n91.5%\n86.00%\n92.25%\n95.13%\n0.13\n\n\n\n\n\n\nCountry\nGDP\nPopulation\n\n\n\n\nTunisia\n3585.63\n10.39\n\n\nAlgeria\n3745.13\n34.82\n\n\nZimbabwe\n1290.6\n12.5\n\n\nLesotho\n926.69\n2.01\n\n\nUnited States\n52662.94\n302.10\n\n\n\n\nfiltered_us &lt;- df %&gt;%\n  filter(Country == \"United States\")\nggplot(filtered_us, aes(x = Mortality, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Mortality\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = BMI, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs BMI\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Alcohol_consumption, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Alcohol\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Hepatitis_B, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Hepatitis\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Measles, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Measles\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Polio, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Polio\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Diphtheria, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Diphtheria\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Incidents_HIV, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs HIV\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = GDP_per_capita, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs GDP\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Population_mln, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Population\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Thinness_ten_nineteen_years, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Thinness\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Schooling, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Schooling\")\n\n\n\n\n\n\n\n\n\n\nTunisia and Algeria have lower mortality rates compared to Zimbabwe and Lesotho due to higher vaccination rates, higher GDP, and lower incidents of HIV."
  },
  {
    "objectID": "analysis_report.html#introduction",
    "href": "analysis_report.html#introduction",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "This dataset includes comprehensive information on 179 countries spanning from 2000 to 2015, covering aspects like life expectancy, health indicators, immunization rates, and economic and demographic data. Originally sourced from Kaggle, it underwent updates to rectify inaccuracies and missing values. Population, GDP, and life expectancy figures were updated from World Bank data, while data on vaccinations, alcohol consumption, BMI, HIV rates, mortality, and other health metrics were sourced from the World Health Organization. Additional information on schooling was gathered from the University of Oxford’s Our World in Data project. Missing values were addressed using strategies such as filling with the closest three-year average or the regional average. Countries with significant missing data were excluded, and the remaining countries were categorized based on their Gross National Income per capita into developed vs developing economies, following guidelines from organizations like the World Trade Organization and the UN.\n\n\nColumns in the dataset:\n\nCountry: List of the 179 countries\nRegion: 179 countries are distributed in 9 regions. E.g. Africa, Asia, Oceania, European Union, Rest of Europe and etc.\nYear: Years observed from 2000 to 2015\nInfant_deaths: Represents infant deaths per 1000 population\nUnder_five_deaths: Represents deaths of children under five years old per 1000 population\nAdult_mortality: Represents deaths of adults per 1000 population\nAlcohol_consumption: Represents alcohol consumption that is recorded in liters of pure alcohol per capita with 15+ years old\nHepatitis_B: Represents % of coverage of Hepatitis B (HepB3) immunization among 1-year-olds\nMeasles: Represents % of coverage of Measles containing vaccine first dose (MCV1) immunization among 1-year-olds\nBMI: BMI is a measure of nutritional status in adults. It is defined as a person’s weight in kilograms divided by the square of that person’s height in meters (kg/m2)\nPolio: Represents % of coverage of Polio (Pol3) immunization among 1-year-olds\nDiphtheria: Represents % of coverage of Diphtheria tetanus toxoid and pertussis (DTP3) immunization among 1-year-olds\nIncidents_HIV: Incidents of HIV per 1000 population aged 15-49\nGDP_per_capita: GDP per capita in current USD\nPopulation_mln: Total population in millions\nThinness_ten_nineteen_years: Prevalence of thinness among adolescents aged 10-19 years. BMI &lt; -2 standard deviations below the median\nThinness_five_nine_years: Prevalence of thinness among children aged 5-9 years. BMI &lt; -2 standard deviations below the median\nSchooling: Average years that people aged 25+ spent in formal education\nEconomy_status_Developed: Developed country\nEconomy_status_Developing: Developing county\nLife_expectancy: Average life expectancy of both genders in different years from 2010 to 2015\n\n\n\n\nOriginal dataset can be found here: https://www.kaggle.com/datasets/lashagoch/life-expectancy-who-updated\nFor ease of use we have re-uploaded the dataset to this Github repository created for this group project:\nhttps://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv\n\n\n\n\nWhat are the predicting variables affecting life expectancy?\nHow does infant and adult mortality rates affect life expectancy?\nDoes life expectancy have a positive or negative correlation with\n\nBMI\nDiseases\nAlcohol Consumption\nImmunizations\n\nWhat is the impact of schooling on the lifespan of humans?\n\nCan we predict lifespan based off of schooling?\n\nDo densely populated countries tend to have lower life expectancy?\nWhat is the impact of imunization coverage on life expectancy?\nWill there be an increase in life expectancy in the next 10 years?\nWill the rate of infant deaths go down over the next 5 years?\nIs there a correlation between economic status and life expectancy?\n\nCan we predict countries economic status based off life expectancy?\n\nDo certain regions have higher vaccination rates?"
  },
  {
    "objectID": "analysis_report.html#data-loading-understanding",
    "href": "analysis_report.html#data-loading-understanding",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "Install these packages if not already installed on your machine:\n\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n\ninstall.packages(\"tidyverse\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"car\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"caret\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"neuralnet\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"e1071\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"randomForest\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"caTools\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"clusterGeneration\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"pROC\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\ninstall.packages(\"xgboost\")\n\nInstalling package into '/opt/homebrew/lib/R/4.4/site-library'\n(as 'lib' is unspecified)\n\n\nImport the libraries:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(caret)\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\nlibrary(car)\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nlibrary(neuralnet)\n\n\nAttaching package: 'neuralnet'\n\nThe following object is masked from 'package:dplyr':\n\n    compute\n\nlibrary(e1071)\nlibrary(randomForest)\n\nrandomForest 4.7-1.1\nType rfNews() to see new features/changes/bug fixes.\n\nAttaching package: 'randomForest'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\nlibrary(caTools)\nlibrary(parallel)\nlibrary(doParallel)\n\nLoading required package: foreach\n\nAttaching package: 'foreach'\n\nThe following objects are masked from 'package:purrr':\n\n    accumulate, when\n\nLoading required package: iterators\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(xgboost)\n\n\nAttaching package: 'xgboost'\n\nThe following object is masked from 'package:dplyr':\n\n    slice\n\n\n\n\n\nLoad the dataset from the GitHub repository:\n\ndf &lt;- read_csv(\"https://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv\", show_col_types = FALSE)\n\nDisplay the first 5 rows of the dataset:\n\nhead(df, 5)\n\n# A tibble: 5 × 21\n  Country Region          Year Infant_deaths Under_five_deaths Adult_mortality\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n1 Turkiye Middle East     2015          11.1              13             106. \n2 Spain   European Union  2015           2.7               3.3            57.9\n3 India   Asia            2007          51.5              67.9           201. \n4 Guyana  South America   2006          32.8              40.5           222. \n5 Israel  Middle East     2012           3.4               4.3            58.0\n# ℹ 15 more variables: Alcohol_consumption &lt;dbl&gt;, Hepatitis_B &lt;dbl&gt;,\n#   Measles &lt;dbl&gt;, BMI &lt;dbl&gt;, Polio &lt;dbl&gt;, Diphtheria &lt;dbl&gt;,\n#   Incidents_HIV &lt;dbl&gt;, GDP_per_capita &lt;dbl&gt;, Population_mln &lt;dbl&gt;,\n#   Thinness_ten_nineteen_years &lt;dbl&gt;, Thinness_five_nine_years &lt;dbl&gt;,\n#   Schooling &lt;dbl&gt;, Economy_status_Developed &lt;dbl&gt;,\n#   Economy_status_Developing &lt;dbl&gt;, Life_expectancy &lt;dbl&gt;\n\n\nShape of the data frame\n\n# Get the number of rows\nnum_rows &lt;- nrow(df)\n\n# Get the number of columns\nnum_cols &lt;- ncol(df)\n\n# Print the results\ncat(\"Number of rows:\", num_rows, \"\\n\")\n\nNumber of rows: 2864 \n\ncat(\"Number of columns:\", num_cols, \"\\n\")\n\nNumber of columns: 21 \n\n\nSummary of the Data Frame:\n\nsummary(df)\n\n   Country             Region               Year      Infant_deaths   \n Length:2864        Length:2864        Min.   :2000   Min.   :  1.80  \n Class :character   Class :character   1st Qu.:2004   1st Qu.:  8.10  \n Mode  :character   Mode  :character   Median :2008   Median : 19.60  \n                                       Mean   :2008   Mean   : 30.36  \n                                       3rd Qu.:2011   3rd Qu.: 47.35  \n                                       Max.   :2015   Max.   :138.10  \n Under_five_deaths Adult_mortality  Alcohol_consumption  Hepatitis_B   \n Min.   :  2.300   Min.   : 49.38   Min.   : 0.000      Min.   :12.00  \n 1st Qu.:  9.675   1st Qu.:106.91   1st Qu.: 1.200      1st Qu.:78.00  \n Median : 23.100   Median :163.84   Median : 4.020      Median :89.00  \n Mean   : 42.938   Mean   :192.25   Mean   : 4.821      Mean   :84.29  \n 3rd Qu.: 66.000   3rd Qu.:246.79   3rd Qu.: 7.777      3rd Qu.:96.00  \n Max.   :224.900   Max.   :719.36   Max.   :17.870      Max.   :99.00  \n    Measles           BMI            Polio        Diphtheria   \n Min.   :10.00   Min.   :19.80   Min.   : 8.0   Min.   :16.00  \n 1st Qu.:64.00   1st Qu.:23.20   1st Qu.:81.0   1st Qu.:81.00  \n Median :83.00   Median :25.50   Median :93.0   Median :93.00  \n Mean   :77.34   Mean   :25.03   Mean   :86.5   Mean   :86.27  \n 3rd Qu.:93.00   3rd Qu.:26.40   3rd Qu.:97.0   3rd Qu.:97.00  \n Max.   :99.00   Max.   :32.10   Max.   :99.0   Max.   :99.00  \n Incidents_HIV     GDP_per_capita   Population_mln    \n Min.   : 0.0100   Min.   :   148   Min.   :   0.080  \n 1st Qu.: 0.0800   1st Qu.:  1416   1st Qu.:   2.098  \n Median : 0.1500   Median :  4217   Median :   7.850  \n Mean   : 0.8943   Mean   : 11541   Mean   :  36.676  \n 3rd Qu.: 0.4600   3rd Qu.: 12557   3rd Qu.:  23.688  \n Max.   :21.6800   Max.   :112418   Max.   :1379.860  \n Thinness_ten_nineteen_years Thinness_five_nine_years   Schooling     \n Min.   : 0.100              Min.   : 0.1             Min.   : 1.100  \n 1st Qu.: 1.600              1st Qu.: 1.6             1st Qu.: 5.100  \n Median : 3.300              Median : 3.4             Median : 7.800  \n Mean   : 4.866              Mean   : 4.9             Mean   : 7.632  \n 3rd Qu.: 7.200              3rd Qu.: 7.3             3rd Qu.:10.300  \n Max.   :27.700              Max.   :28.6             Max.   :14.100  \n Economy_status_Developed Economy_status_Developing Life_expectancy\n Min.   :0.0000           Min.   :0.0000            Min.   :39.40  \n 1st Qu.:0.0000           1st Qu.:1.0000            1st Qu.:62.70  \n Median :0.0000           Median :1.0000            Median :71.40  \n Mean   :0.2067           Mean   :0.7933            Mean   :68.86  \n 3rd Qu.:0.0000           3rd Qu.:1.0000            3rd Qu.:75.40  \n Max.   :1.0000           Max.   :1.0000            Max.   :83.80  \n\n\n\n\n\n\nNominal (Factors)\n\nCountry\nRegion\nYear\nEconomy_status_Developed\nEconomy_status_Developing\n\nNumerical (Nominal):\n\nInfant_deaths\nUnder_five_deaths\n\nNumerical (Interval)\n\nBMI\n\nNumerical (Ratio)\n\nLife_expectancy\nAdult_mortality\nHepatitis_B\nMeasles\nPolio\nIncidents_HIV\nGDP_per_capita\nPopulation_mln\nThinness_five_nine_years\nThinness_ten_nineteen_years\nSchooling\n\n\n\nCreating a list of all nominal/factors\nRegions\n\ndf |&gt;\ndistinct(Region)\n\n# A tibble: 9 × 1\n  Region                       \n  &lt;chr&gt;                        \n1 Middle East                  \n2 European Union               \n3 Asia                         \n4 South America                \n5 Central America and Caribbean\n6 Rest of Europe               \n7 Africa                       \n8 Oceania                      \n9 North America                \n\n\nCountry\n\ndf |&gt;\ndistinct(Country)\n\n# A tibble: 179 × 1\n   Country           \n   &lt;chr&gt;             \n 1 Turkiye           \n 2 Spain             \n 3 India             \n 4 Guyana            \n 5 Israel            \n 6 Costa Rica        \n 7 Russian Federation\n 8 Hungary           \n 9 Jordan            \n10 Moldova           \n# ℹ 169 more rows\n\n\nYear\n\ndf |&gt;\ndistinct(Year)\n\n# A tibble: 16 × 1\n    Year\n   &lt;dbl&gt;\n 1  2015\n 2  2007\n 3  2006\n 4  2012\n 5  2000\n 6  2001\n 7  2008\n 8  2011\n 9  2002\n10  2013\n11  2005\n12  2003\n13  2004\n14  2009\n15  2010\n16  2014\n\n\nEconomic Status:\n\ndf |&gt;\ndistinct(Economy_status_Developed)\n\n# A tibble: 2 × 1\n  Economy_status_Developed\n                     &lt;dbl&gt;\n1                        0\n2                        1\n\ndf |&gt;\ndistinct(Economy_status_Developing)\n\n# A tibble: 2 × 1\n  Economy_status_Developing\n                      &lt;dbl&gt;\n1                         1\n2                         0\n\n\nFor the purpose of analysis in R, it is good practice to change categorical variables into factors\n\ndf$Country &lt;- factor(df$Country)\ndf$Region &lt;- factor(df$Region)\ndf$Region &lt;- factor(df$Region)\ndf$Year &lt;- factor(df$Year)\ndf$Economy_status_Developed &lt;- factor(df$Economy_status_Developed)\ndf$Economy_status_Developing &lt;- factor(df$Economy_status_Developing)\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …"
  },
  {
    "objectID": "analysis_report.html#data-cleaning",
    "href": "analysis_report.html#data-cleaning",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "The original data set had several hundred missing values. While the data is publicly available as it is all published by the various nations of the world and the World Heath Organization, it is not feasible with our teams man hours to manually enter each missing value.\nNumber of Missing Values:\n\nLife_expectancy: 10\nAdult_mortality: 10\nInfant_deaths: 0\nHepatitis_B: 553\nMeasles: 0\nBMI: 34\nUnder_five_deaths: 0\nPolio: 19\nIncidents_HIV: 0\nGDP_per_capita: 448\nPopulation_mln: 652\nThinness_five_nine_years: 34\nSchooling: 163\n\n\n\n1) Delete the row: Possible for datasets with small number of NA’s, sadly that is not our dataset.\n2) Replace the missing values with the average for that variable\n\n\n\nWhen doing research on how to handle the missing values, Our group leader found a data set that has already “fixed” the missing values. This new data set first grouped each country into regions, from there the average value of each column was found by region. This is a very clean way to ensure that different regions do not effect each other, while still filling in the missing values.\n\n\n\nThe group moved forward with the “Fixed” dataset.\n\n\n\n\nFunction to find number of outliers and plot:\n\nnum_outliers &lt;- function(data_set, column) {\n  q1 &lt;- quantile(column, 0.25)\n  q3 &lt;- quantile(column, 0.75)\n  iqr &lt;- q3 -q1\n  \n  upper_bound &lt;- q3 + 1.5 * iqr\n  lower_bound &lt;- q1 - 1.5 * iqr\n  \n  outliers &lt;- column[column &lt; lower_bound | column &gt; upper_bound]\n  \n  plot &lt;- ggplot(data_set) + geom_boxplot(aes(x = \"\", y = column))\n  \n  print(plot)\n  \n  return(length(outliers))\n}\n\nNumber of Outliers:\nLife_expectancy:\n\nnum_outliers(df, df$Life_expectancy)\n\n\n\n\n\n\n\n\n[1] 19\n\n\nAdult_mortality:\n\nnum_outliers(df, df$Adult_mortality)\n\n\n\n\n\n\n\n\n[1] 112\n\n\nAlcohol_consumption:\n\nnum_outliers(df, df$Alcohol_consumption)\n\n\n\n\n\n\n\n\n[1] 2\n\n\nHepatitis_B:\n\nnum_outliers(df, df$Hepatitis_B)\n\n\n\n\n\n\n\n\n[1] 164\n\n\nMeasles:\n\nnum_outliers(df, df$Measles)\n\n\n\n\n\n\n\n\n[1] 35\n\n\nPolio:\n\nnum_outliers(df, df$Polio)\n\n\n\n\n\n\n\n\n[1] 190\n\n\nDiphtheria:\n\nnum_outliers(df, df$Diphtheria)\n\n\n\n\n\n\n\n\n[1] 187\n\n\nIncidents_HIV:\n\nnum_outliers(df, df$Incidents_HIV)\n\n\n\n\n\n\n\n\n[1] 461\n\n\nGDP_per_capita:\n\nnum_outliers(df, df$GDP_per_capita)\n\n\n\n\n\n\n\n\n[1] 425\n\n\nPopulation_mln:\n\nnum_outliers(df, df$Population_mln)\n\n\n\n\n\n\n\n\n[1] 362\n\n\nThinness_five_nine_years:\n\nnum_outliers(df, df$Thinness_five_nine_years)\n\n\n\n\n\n\n\n\n[1] 95\n\n\nThinness_ten_nineteen_years:\n\nnum_outliers(df, df$Thinness_ten_nineteen_years)\n\n\n\n\n\n\n\n\n[1] 89\n\n\nSchooling:\n\nnum_outliers(df, df$Schooling)\n\n\n\n\n\n\n\n\n[1] 0\n\n\nBMI:\n\nnum_outliers(df, df$BMI)\n\n\n\n\n\n\n\n\n[1] 25\n\n\nInfant_deaths:\n\nnum_outliers(df, df$Infant_deaths)\n\n\n\n\n\n\n\n\n[1] 29\n\n\nUnder_five_deaths:\n\nnum_outliers(df, df$Under_five_deaths)\n\n\n\n\n\n\n\n\n[1] 102\n\n\n\n\nThe variation in outlier counts between our analytical methods (IQR Method, identify_outliers function) and box plot visualization likely comes from differing definitions of outliers. While the analytical methods stick to strict statistical criteria, box plots visually show points beyond the data’s central range, potentially capturing more extreme values.\n\nggplot(df, aes(x = Region, y = Infant_deaths)) + geom_boxplot() + ggtitle(\"Comparison of Infant Deaths Incidence by Region\")\n\n\n\n\n\n\n\n\nThe “Infant_deaths” column represents the number of infant deaths per 1000 population. The IQR method identifies 29 outliers. The regions with outliers include Africa, Central America and Caribbean, European Union, Middle East, Rest of Europe, and South America. Outliers in infant deaths may indicate regions with unusually high infant mortality rates, potentially reflecting poor healthcare access and quality.\n\nggplot(df, aes(x = Region, y = Under_five_deaths )) + geom_boxplot() + ggtitle(\"Comparison of Under Five Deaths:  by Region\")\n\n\n\n\n\n\n\n\nThe “Under_five_deaths” column represents deaths of children under five years old per 1000 population. The IQR method identifies 102 outliers. The regions with outliers include Africa, Asia, Central America and Caribbean, European Union, Middle East, Rest of Europe, and South America. High rates of under-five deaths may indicate challenges related to healthcare access, quality, and availability of essential services such as maternal and child healthcare and vaccinations.\n\nggplot(df, aes(x = Region, y = Adult_mortality)) + geom_boxplot() + ggtitle(\"Comparison of Adult M         ortality by Region\")\n\n\n\n\n\n\n\n\nThe “Adult_mortality” column represents the probability of dying between 15 and 60 per 1000 population. The IQR method identifies 112 outliers. The only region with outliers is Africa. High rates of adult mortality may indicate challenges related to healthcare access, quality, and availability of essential services such as vaccinations.\n\nggplot(df, aes(x = Region, y = Alcohol_consumption)) + geom_boxplot() + ggtitle(\"Comparison of Alcohol Consumption by Region\")\n\n\n\n\n\n\n\n\nThe “Alcohol_consumption” column represents alcohol consumption per capita by liter. The IQR method identifies 2 outliers.\n\nggplot(df, aes(x = Region, y = Hepatitis_B)) + geom_boxplot() + ggtitle(\"Comparison of Hepatitis B by Region\")\n\n\n\n\n\n\n\n\nThe “Hepatitis_B” column represents Hepatitis B immunization coverage in 1-year olds. The IQR method identifies 164 outliers.\n\nggplot(df, aes(x = Region, y = Measles)) + geom_boxplot() + ggtitle(\"Comparison of Measles by Region\")\n\n\n\n\n\n\n\n\nThe “Measles” column represents number of measles cases reported per 1000 population. The IQR method identifies 35 outliers. The regions with outliers include Indonesia(Asia), Philippines(Asia), Afghanistan(Asia), and Suriname(South America). High rates of measles may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = BMI)) + geom_boxplot() + ggtitle(\"Comparison of BMI by Region\")\n\n\n\n\n\n\n\n\nThe “BMI” column represents the body mass index of the entire population. The IQR method identifies 25 outliers. The regions with outliers are Samoa and Tonga. Higher BMI may indicate genetic predispositions and fattier diets.\n\nggplot(df, aes(x = Region, y = Polio)) + geom_boxplot() + ggtitle(\"Comparison of Polio by Region\")\n\n\n\n\n\n\n\n\nThe “Polio” column represents the polio immunization records among 1-year olds. The IQR method identifies 190 outliers. The regions with outliers include Africa and Oceania. Lower polio vaccination rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = Diphtheria)) + geom_boxplot() + ggtitle(\"Comparison of Diphtheria by Region\")\n\n\n\n\n\n\n\n\nThe “Diphtheria” column represents the TDP immunization records among 1-year olds. The IQR method identifies 187 outliers. The regions with outliers include Africa and Asia. Lower diphtheria vaccination rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = Incidents_HIV)) + geom_boxplot() + ggtitle(\"Comparison of Incidents HIV by Region\")\n\n\n\n\n\n\n\n\nThe “Incidents_HIV” column represents the deaths per 1000 live births due to HIV/AIDS. The IQR method identifies 461 outliers. The region with outliers is Africa. Higher HIV rates may indicate challenges related to healthcare access.\n\nggplot(df, aes(x = Region, y = GDP_per_capita)) + geom_boxplot() + ggtitle(\"Comparison of GDP Per Capita by Region\")\n\n\n\n\n\n\n\n\nThe “GDP_per_capita’ column represents the gross domestic product per capita. The IQR method identifies 425 outliers. The regions with outliers includes France and Austria. Higher GDP may indicate a more developed economy.\n\n\nggplot(df, aes(x = Region, y = Population_mln)) + geom_boxplot() + ggtitle(\"Comparison of Population by Region\")\n\n\n\n\n\n\n\n\nThe “Population_mln” column represents the total population in millions. The IQR method identifies 362 outliers. The regions with outliers include India, China, and the United States.\n\n\nggplot(df, aes(x = Region, y = Thinness_ten_nineteen_years)) + geom_boxplot() + ggtitle(\"Comparison of Thinness Ten to Nineteen Years by Region\")\n\n\n\n\n\n\n\n\nThe “Thinness_ten_nineteen_years” column represents the prevalence of thinness among 10 to 19 year olds. The IQR method identifies 89 outliers. The regions with outliers include Asia and Africa. Higher rates of thinness may indicate challenges related to healthcare access, diet, and cultural values.\n\n\nggplot(df, aes(x = Region, y = Thinness_five_nine_years)) + geom_boxplot() + ggtitle(\"Comparison of Thinness Five to Nine Years by Region\")\n\n\n\n\n\n\n\n\nThe “Thinness_five_nine_years” column represents the prevalence of thinness among 5 to 9 year olds. The IQR method identifies 95 outliers. The regions with outliers include Asia and Africa. Higher rates of thinness may indicate challenges related to healthcare access, diet, and cultural values.\n\n\nggplot(df, aes(x = Region, y = Schooling)) + geom_boxplot() + ggtitle(\"Comparison of Schooling by Region\")\n\n\n\n\n\n\n\n\nThere are no outliers.\n\nggplot(df, aes(x = Region, y = Life_expectancy)) + geom_boxplot() + ggtitle(\"Comparison of Life Expectancy by Region\")\n\n\n\n\n\n\n\n\nThe “Life_expectancy” represents the average life expectancy in age. The IQR method identifies 19 outliers. The region with outliers include Africa. Lower life expectancy rates may indicate challenges related to healthcare access.\n\n\n\n1) Trimming: Remove outliers from the dataset. This approach can be appropriate if the outliers are deemed to be data entry errors or highly improbable values. Due to the high number of outliers in the dataset, this is not a viable option.\n2) Winsorization: Replace outliers with values at a specified percentile (e.g., replacing values above the 95th percentile with the 95th percentile value, replacing values below the 5th percentile with the 5th percentile value).\n\n\n\nAfter doing research on how to identify and treat outliers in R, and reviewing the outliers present in our data, we have chosen to leave the outliers as is. None of them appear erroneous and as such provide valid data for training the models"
  },
  {
    "objectID": "analysis_report.html#data-analysis",
    "href": "analysis_report.html#data-analysis",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "covariance_plot &lt;- function(y_val, x_val, data_frame, std_data_frame) {\n  ggplot(data = data_frame, aes_string(y = y_val, x = x_val, color = \"Region\")) +\n    geom_point() +\n    geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], std_data_frame[[x_val]]), 2))),\n            x = Inf, y = Inf, hjust = 1, vjust = 1, color = \"black\")\n}\n\n\n\n\nLife Expectancy\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Life_expectancy))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Life_expectancy), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Life_expectancy, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Life expectancy by Region\",\n         x=\"Life expectancy\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Life_expectancy)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  39.40   62.70   71.40   68.86   75.40   83.80 \n\n\n\nInference:\nLife Expectancy represents the average years lived in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~71\nThe minimum is 39.40, the max is 83.8\nWe can see that the various regions are clustered\n\nInfant Deaths\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Infant_deaths))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Infant_deaths), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Life_expectancy, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Infant_deaths by Region\",\n         x=\"Infant deaths\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Infant_deaths)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.80    8.10   19.60   30.36   47.35  138.10 \n\n\nInference:\nIt represents the Infant Deaths in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~20\nThe minimum is 1.80, the max is 138.10\n\nUnder_five_deaths\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Under_five_deaths))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Under_five_deaths), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Under_five_deaths, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Under_five_deaths by Region\",\n         x=\"Under_five_deaths\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Under_five_deaths)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.300   9.675  23.100  42.938  66.000 224.900 \n\n\nInference:\nLife Expectancy represents the average deaths under five (age) in the given country\nLife Expectancy is not evenly distributed,\nLife Expectancy peaks ~23\nThe minimum is 2.30, the max is 224.90\n\nAdult_mortality\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Adult_mortality))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Adult_mortality), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Adult_mortality, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Adult_mortality by Region\",\n         x=\"Adult_mortality\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Adult_mortality)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  49.38  106.91  163.84  192.25  246.79  719.36 \n\n\nInference:\nAdult mortality represents the adult deaths in the given country\nLife Expectancy is not evenly distributed,\nAdult mortality peaks ~164\nThe minimum is 49.38, the max is 719.36\n\nAlcohol Consumption\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Alcohol_consumption))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Alcohol_consumption), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Alcohol_consumption, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Alcohol_consumption by Region\",\n         x=\"Alcohol_consumption\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Alcohol_consumption)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.200   4.020   4.821   7.777  17.870 \n\n\nInference:\nAlcohol consumption is recorded per capita (15+) consumption (in litres of pure alcohol)\nMin is 0 litres\nMax is 17.87\nAlcohol consumption is not evenly distrusted.\nAlcohol Consumption peaks at 0\n\n$Hepatitis_B\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Hepatitis_B))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Hepatitis_B), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Hepatitis_B, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Hepatitis_B by Region\",\n         x=\"Hepatitis_B\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Hepatitis_B)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   78.00   89.00   84.29   96.00   99.00 \n\n\nHepatitis Inferences:\nHepatitis B represents the immunization coverage among 1-year olds(%)\nIt is not evenly distrusted\nmin: 12\nMax 99.9\nIt peaks around 90%\nWhy is there a spike around 85?\nThat spike is due to the E.U.\n\nMeasles\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Measles))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Measles), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Measles, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Measles by Region\",\n         x=\"Measles\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Measles)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.00   64.00   83.00   77.34   93.00   99.00 \n\n\nMeasles Influences:\nMeasles represents the percentage of 1 year olds who have been immunized\nIt is not evenly distrusted\nMin 10\nMax 99\nIt peaks around 62%\nWhy is there a spike around 62%?\nDue to a large chunk of Africa\n\nBMI\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$BMI))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$BMI), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=BMI, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of BMI by Region\",\n         x=\"BMI\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$BMI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  19.80   23.20   25.50   25.03   26.40   32.10 \n\n\nBMI Inferences:\nBMI represents the nutritional status of the adult population\nIt is not evenly distributed\nMin 19\nMax 32.10\nWhy is there two groups?\nThe two groups are two to African and Asia forming one peak, and Europe forming another peak\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Polio))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Polio), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Polio, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Polio by Region\",\n         x=\"Polio\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Polio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    8.0    81.0    93.0    86.5    97.0    99.0 \n\n\nPolio represents the percentage of one year-olds who were immunized for polio\nMin: 8\nMedian 93.0\nMax 99.0\nDiphtheria\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Diphtheria))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Diphtheria), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Diphtheria, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Diphtheria by Region\",\n         x=\"Diphtheria\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Diphtheria)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  16.00   81.00   93.00   86.27   97.00   99.00 \n\n\nPolio represents the percentage of one year-olds who were immunized for Diphtheria\nMin: 16\nMedian 93.0\nMax 99.0\nHIV\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Incidents_HIV))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Incidents_HIV), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Incidents_HIV, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Incidents_HIV by Region\",\n         x=\"Incidents_HIV\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Incidents_HIV)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0100  0.0800  0.1500  0.8943  0.4600 21.6800 \n\n\nMin. 1st Qu.  Median    Mean 3rd Qu.    Max.  \n0.0100  0.0800  0.1500  0.8943  0.4600 21.6800 \nIncidents_HIV represents the number of incidents of HIV per 1000 people\nMin: 0.01\nMedian 0.15\nMax:21.68\nMost of the regions exist in the large spike at just after 0, with Africa making up the bulk of the rest of the graph, this is a possible explanation for Africa’s lower life expectancy\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$GDP_per_capita))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$GDP_per_capita), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=GDP_per_capita, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of GDP_per_capita by Region\",\n         x=\"GDP_per_capita\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$GDP_per_capita)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    148    1416    4217   11541   12557  112418 \n\n\nGDP is a representation of the overall wealth of a country\nMin:148\nMedian: 4217\nMean: 11541\nMax: 112418\nThis variable has a very large range, with the majority of the world existing in the lower end of this scale.\nPopulation\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Population_mln))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Population_mln), bins = 100) \n\n\n\n\n\n\n\n#re-do of the graph with xlim to exclude the outliers \ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Population_mln), bins = 30) +\n  xlim(0,350)\n\nWarning: Removed 32 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\nggplot(df, aes(x=Population_mln, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Population_mln by Region\",\n         x=\"Population_mln\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Population_mln)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   0.080    2.098    7.850   36.676   23.688 1379.860 \n\n\nPopulation represents the total number of people living within a nation, in the millions.\nMin: 0.08\nMedian: 7.85\nMean: 36.676\nMax: 1379.86\nThe outliers on the extreme edge are India and China.\nThinness 10 to 19\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Thinness_ten_nineteen_years))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Thinness_ten_nineteen_years), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Thinness_ten_nineteen_years, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Thinness_ten_nineteen_years by Region\",\n         x=\"Thinness_ten_nineteen_years\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Thinness_ten_nineteen_years)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.100   1.600   3.300   4.866   7.200  27.700 \n\n\nThinness 10-19 represents the percentage of individuals in the age group who are “thin”\nMin: 0.1\nMedian: 3.3\nMean 4.866\nMax: 27.7\nWhy are there two groups?\nThe two peaks are formed by different regions, the first being Europe, the second being Africa.\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Thinness_five_nine_years))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Thinness_five_nine_years), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Thinness_five_nine_years, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Thinness_five_nine_years by Region\",\n         x=\"Thinness_five_nine_years\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Thinness_five_nine_years)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.1     1.6     3.4     4.9     7.3    28.6 \n\n\nMin: 0.1\nMedian:3.4\nMean:4.9\nMax: 28.6\nWhy are there two groups?\nSame as the 10-19 Thinness, Most of this graph is a mirror of the other Thinness graph.\n\ndf |&gt;\nggplot() +\n    geom_boxplot(aes(x=0, y=df$Schooling))\n\n\n\n\n\n\n\ndf |&gt;\nggplot() +\n    geom_histogram(aes(x=df$Schooling), bins = 30)\n\n\n\n\n\n\n\nggplot(df, aes(x=Schooling, fill=Region)) +\n    geom_histogram(bins=30, alpha=0.6, position=\"identity\") +\n    labs(title=\"Histogram of Schooling by Region\",\n         x=\"Schooling\",\n         y=\"Count\") +\n    theme_minimal()\n\n\n\n\n\n\n\nsummary(df$Schooling)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.100   5.100   7.800   7.632  10.300  14.100 \n\n\nSchooling Represents the average years of schooling in the nation.\nMin: 1.1\nMedian: 7.8\nMean: 7.632\nMax: 14.1\nSchooling is our most evenly distrusted graph so far.\n\n\n\nFor Covariance Analysis we need a subset of the data that only has the numeric variables\nStandardize the data\n\nsdf &lt;- df |&gt;\n  select(-Year, everything()) |&gt;\n  mutate(across(where(is.numeric), scale))\n\n\n# Get only numeric data\nnumeric_data &lt;- select_if(sdf, is.numeric)\n\ncov_matrix &lt;- cov(numeric_data)\n\nprint(cov_matrix)\n\n                            Infant_deaths Under_five_deaths Adult_mortality\nInfant_deaths                  1.00000000       0.985651346      0.79466086\nUnder_five_deaths              0.98565135       1.000000000      0.80236112\nAdult_mortality                0.79466086       0.802361123      1.00000000\nAlcohol_consumption           -0.45452615      -0.409367397     -0.24479376\nHepatitis_B                   -0.51256224      -0.507427407     -0.34488221\nMeasles                       -0.52628201      -0.512971742     -0.41615254\nBMI                           -0.66198827      -0.665255042     -0.52286551\nPolio                         -0.74079046      -0.742983474     -0.52422554\nDiphtheria                    -0.72187465      -0.725355032     -0.51380270\nIncidents_HIV                  0.34945826       0.369617726      0.69911938\nGDP_per_capita                -0.51228611      -0.469681668     -0.51012141\nPopulation_mln                 0.00762199      -0.005234231     -0.05384768\nThinness_ten_nineteen_years    0.49119174       0.466978458      0.38214030\nThinness_five_nine_years       0.47763934       0.450755699      0.37979229\nSchooling                     -0.78851253      -0.773195983     -0.58103548\nLife_expectancy               -0.92003192      -0.920419134     -0.94536036\n                            Alcohol_consumption Hepatitis_B     Measles\nInfant_deaths                       -0.45452615 -0.51256224 -0.52628201\nUnder_five_deaths                   -0.40936740 -0.50742741 -0.51297174\nAdult_mortality                     -0.24479376 -0.34488221 -0.41615254\nAlcohol_consumption                  1.00000000  0.16843582  0.31860293\nHepatitis_B                          0.16843582  1.00000000  0.42916779\nMeasles                              0.31860293  0.42916779  1.00000000\nBMI                                  0.28403195  0.34542091  0.41632141\nPolio                                0.30192623  0.72434526  0.51409629\nDiphtheria                           0.29901592  0.76178009  0.49405877\nIncidents_HIV                       -0.03411801 -0.07578195 -0.15058000\nGDP_per_capita                       0.44396595  0.15937504  0.31372372\nPopulation_mln                      -0.03911866 -0.08239640 -0.09822189\nThinness_ten_nineteen_years         -0.44636618 -0.20845350 -0.34070533\nThinness_five_nine_years            -0.43302972 -0.21379442 -0.36696995\nSchooling                            0.61572804  0.34764345  0.49839128\nLife_expectancy                      0.39915911  0.41780443  0.49001859\n                                   BMI       Polio  Diphtheria Incidents_HIV\nInfant_deaths               -0.6619883 -0.74079046 -0.72187465    0.34945826\nUnder_five_deaths           -0.6652550 -0.74298347 -0.72535503    0.36961773\nAdult_mortality             -0.5228655 -0.52422554 -0.51380270    0.69911938\nAlcohol_consumption          0.2840319  0.30192623  0.29901592   -0.03411801\nHepatitis_B                  0.3454209  0.72434526  0.76178009   -0.07578195\nMeasles                      0.4163214  0.51409629  0.49405877   -0.15058000\nBMI                          1.0000000  0.45720604  0.42650090   -0.16114208\nPolio                        0.4572060  1.00000000  0.95317790   -0.14795220\nDiphtheria                   0.4265009  0.95317790  1.00000000   -0.14693191\nIncidents_HIV               -0.1611421 -0.14795220 -0.14693191    1.00000000\nGDP_per_capita               0.3361796  0.31378567  0.31332094   -0.16958972\nPopulation_mln              -0.1664820 -0.03348589 -0.02733598   -0.05803971\nThinness_ten_nineteen_years -0.5964833 -0.31268545 -0.30446625    0.18876454\nThinness_five_nine_years    -0.5991122 -0.30699811 -0.29559745    0.19384734\nSchooling                    0.6354752  0.55276511  0.53562097   -0.20124620\nLife_expectancy              0.5984233  0.64121746  0.62754139   -0.55302746\n                            GDP_per_capita Population_mln\nInfant_deaths                  -0.51228611    0.007621990\nUnder_five_deaths              -0.46968167   -0.005234231\nAdult_mortality                -0.51012141   -0.053847680\nAlcohol_consumption             0.44396595   -0.039118659\nHepatitis_B                     0.15937504   -0.082396398\nMeasles                         0.31372372   -0.098221891\nBMI                             0.33617960   -0.166482004\nPolio                           0.31378567   -0.033485888\nDiphtheria                      0.31332094   -0.027335977\nIncidents_HIV                  -0.16958972   -0.058039708\nGDP_per_capita                  1.00000000   -0.040838867\nPopulation_mln                 -0.04083887    1.000000000\nThinness_ten_nineteen_years    -0.37526974    0.256322009\nThinness_five_nine_years       -0.38103211    0.258485836\nSchooling                       0.58062592   -0.033561816\nLife_expectancy                 0.58308972    0.026297880\n                            Thinness_ten_nineteen_years\nInfant_deaths                                 0.4911917\nUnder_five_deaths                             0.4669785\nAdult_mortality                               0.3821403\nAlcohol_consumption                          -0.4463662\nHepatitis_B                                  -0.2084535\nMeasles                                      -0.3407053\nBMI                                          -0.5964833\nPolio                                        -0.3126855\nDiphtheria                                   -0.3044662\nIncidents_HIV                                 0.1887645\nGDP_per_capita                               -0.3752697\nPopulation_mln                                0.2563220\nThinness_ten_nineteen_years                   1.0000000\nThinness_five_nine_years                      0.9387571\nSchooling                                    -0.5714852\nLife_expectancy                              -0.4678245\n                            Thinness_five_nine_years   Schooling\nInfant_deaths                              0.4776393 -0.78851253\nUnder_five_deaths                          0.4507557 -0.77319598\nAdult_mortality                            0.3797923 -0.58103548\nAlcohol_consumption                       -0.4330297  0.61572804\nHepatitis_B                               -0.2137944  0.34764345\nMeasles                                   -0.3669700  0.49839128\nBMI                                       -0.5991122  0.63547517\nPolio                                     -0.3069981  0.55276511\nDiphtheria                                -0.2955975  0.53562097\nIncidents_HIV                              0.1938473 -0.20124620\nGDP_per_capita                            -0.3810321  0.58062592\nPopulation_mln                             0.2584858 -0.03356182\nThinness_ten_nineteen_years                0.9387571 -0.57148516\nThinness_five_nine_years                   1.0000000 -0.55137635\nSchooling                                 -0.5513764  1.00000000\nLife_expectancy                           -0.4581662  0.73248447\n                            Life_expectancy\nInfant_deaths                   -0.92003192\nUnder_five_deaths               -0.92041913\nAdult_mortality                 -0.94536036\nAlcohol_consumption              0.39915911\nHepatitis_B                      0.41780443\nMeasles                          0.49001859\nBMI                              0.59842332\nPolio                            0.64121746\nDiphtheria                       0.62754139\nIncidents_HIV                   -0.55302746\nGDP_per_capita                   0.58308972\nPopulation_mln                   0.02629788\nThinness_ten_nineteen_years     -0.46782450\nThinness_five_nine_years        -0.45816623\nSchooling                        0.73248447\nLife_expectancy                  1.00000000\n\n\nLife Expectancy:\n\ncovariance_plot(\"Life_expectancy\", \"Adult_mortality\", df, sdf)\n\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`.\nℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Life_expectancy\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInference:\nStrong negative: adult mortality, infant deaths, under five deaths\nNegative: HIV, thinness\nSlight positive: Alcohol consumption, Hepatitis B, measles\nPositive: BMI, Polio, Diphtheria, Schooling\n\nAlcohol Consumption:\n\ncovariance_plot(\"Alcohol_consumption\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Alcohol_consumption\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nThere is a positive relationship between Schooling and alcohol consumption,\nSome positive relationship: GDP\nSome negative relationship: Infant deaths\nStrong negative relationship: Population\nOther variables have some covariance, but it does not seem to be strongly related.\n\nGDP:\n\ncovariance_plot(\"GDP_per_capita\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"GDP_per_capita\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInference:\nSome positive relationship: Life expectancy, alcohol consumption, schooling\nSome negative relationship: Infant deaths, under five deaths, adult mortality\n\nAdult Mortality:\n\ncovariance_plot(\"Adult_mortality\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Adult_mortality\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nStrong negative: Life expectancy\nNegative: BMI, polio Diphtheria, schooling\nPositive: HIV\nStrong positive: infant deaths, under five deaths\n\nHepatitis B:\n\ncovariance_plot(\"Hepatitis_B\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Hepatitis_B\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nHepatitis B Inferences:\nPositive: Life Expectancy, Alcohol Consumption, Polio, Measles, Diphtheria\nNegative: Infant Deaths, Under Five Deaths, Adult mortality\n\nMeasles:\n\ncovariance_plot(\"Measles\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Measles\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nMeasles Inferences:\nPositive: Life Expectancy, Schooling, Hepatitis B, BMI, polio, Diphtheria\nNegative: Infant Deaths, Under Five Deaths, adult mortality\n\nBMI:\n\ncovariance_plot(\"BMI\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"BMI\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nBMI Inferences:\nPositive: Life Expectancy, Diphtheria, GDP, measles, polio, schooling\nNegative: Thinness, infant deaths, under five deaths, adult mortality\n\nPolio:\n\ncovariance_plot(\"Polio\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Polio\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nPolio Inferences:\nStrong Positive, Hepatitis B, Diphtheria\nPositive: Polio, BMI, Schooling, life expectancy, measles\nNegative: Thinness, adult mortality\nStrong Negative: Infant Deaths, Under Five deaths\n\nDiphtheria:\n\ncovariance_plot(\"Diphtheria\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Diphtheria\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nDiphtheria Inferences:\nStrong Positive: Hepatitis B, Polio\nPositive: Life Expectancy, Measles, BMI, Schooling\nNegative: Thinness, adult mortality\nStrong Negative: Infant Deaths, Under Five Deaths\n\nHIV:\n\ncovariance_plot(\"Incidents_HIV\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Incidents_HIV\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nHIV Inferences:\nPositive: Adult mortality\nNegative: life expectancy\nConclusion: We may want to separate out Africa for this one, as it seems to be skewing the data.\n\nPopulation:\n\ncovariance_plot(\"Population_mln\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Population_mln\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nPopulation Inferences:\nConclusion: We may want to do this again without China and India, as they seems to be skewing the data\n\nThinness:\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Thinness_ten_nineteen_years\", \"Schooling\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nThinness:\nStrong positive: Thinness\nPositive: Infant deaths, under five deaths, adult mortality\nNegative: Life expectancy, alcohol consumption, BMI, schooling\nNo surprise that the two thinness are basically one to one.\n\nSchooling:\n\ncovariance_plot(\"Schooling\", \"GDP_per_capita\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Infant_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Under_five_deaths\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Life_expectancy\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Adult_mortality\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Hepatitis_B\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Measles\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"BMI\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Polio\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Diphtheria\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Alcohol_consumption\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Incidents_HIV\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Population_mln\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Thinness_five_nine_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\ncovariance_plot(\"Schooling\", \"Thinness_ten_nineteen_years\", df, sdf)\n\nWarning in geom_text(aes(label = paste(\"Covariance:\", round(cov(std_data_frame[[y_val]], : All aesthetics have length 1, but the data has 2864 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nInferences:\nPositive: Life expectancy, alcohol consumption, measles, BMI, polio, diphtheria, GDP\nNegative: Infant deaths, under five deaths, adult mortality, thinness"
  },
  {
    "objectID": "analysis_report.html#models",
    "href": "analysis_report.html#models",
    "title": "Life Expectancy Analysis Report",
    "section": "",
    "text": "For testing purposes, we must separate out a portion of the data now. We will be using a 80/20 split. 80% Training, 20% testing.\n\n\n\n#seed to make this reproducible \nset.seed(333)\n\n#split the data\ntraining.samples &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain.data &lt;- sdf[training.samples, ]\ntest.data &lt;- sdf[-training.samples, ]\n\n\n\n\nWe are leaving out one of the two economy status variables as they are two halves of a binary variable.\nWe must also pick between Country and Region, as having both in the model seems to create singularities. For readability sake we will be keeping Region\n\n#make the model\nLE_MR &lt;- lm(Life_expectancy ~ .  -Economy_status_Developing -Country , data = train.data)\n\n#print summary of the model\nsummary(LE_MR)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Economy_status_Developing - \n    Country, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.45439 -0.08736 -0.00297  0.08382  0.60675 \n\nCoefficients:\n                                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         -0.1066983  0.0139377  -7.655 2.84e-14 ***\nRegionAsia                           0.0408052  0.0121871   3.348 0.000827 ***\nRegionCentral America and Caribbean  0.2160099  0.0128928  16.754  &lt; 2e-16 ***\nRegionEuropean Union                -0.0760235  0.0190799  -3.984 6.98e-05 ***\nRegionMiddle East                    0.0337327  0.0149020   2.264 0.023691 *  \nRegionNorth America                  0.0806516  0.0254903   3.164 0.001577 ** \nRegionOceania                       -0.0846981  0.0154317  -5.489 4.51e-08 ***\nRegionRest of Europe                 0.0305305  0.0151715   2.012 0.044300 *  \nRegionSouth America                  0.1913290  0.0148165  12.913  &lt; 2e-16 ***\nInfant_deaths                       -0.1453887  0.0179910  -8.081 1.04e-15 ***\nUnder_five_deaths                   -0.2410563  0.0181045 -13.315  &lt; 2e-16 ***\nAdult_mortality                     -0.5682994  0.0078518 -72.379  &lt; 2e-16 ***\nAlcohol_consumption                 -0.0015641  0.0049114  -0.318 0.750163    \nHepatitis_B                         -0.0132183  0.0045331  -2.916 0.003581 ** \nMeasles                              0.0025920  0.0034613   0.749 0.454030    \nBMI                                 -0.0307122  0.0052688  -5.829 6.38e-09 ***\nPolio                                0.0161071  0.0092268   1.746 0.081001 .  \nDiphtheria                          -0.0106687  0.0096653  -1.104 0.269792    \nIncidents_HIV                        0.0179509  0.0046521   3.859 0.000117 ***\nGDP_per_capita                       0.0345499  0.0042100   8.207 3.78e-16 ***\nPopulation_mln                      -0.0043878  0.0028185  -1.557 0.119671    \nThinness_ten_nineteen_years         -0.0163594  0.0078495  -2.084 0.037261 *  \nThinness_five_nine_years             0.0113872  0.0079526   1.432 0.152314    \nSchooling                            0.0379658  0.0062753   6.050 1.69e-09 ***\nEconomy_status_Developed1            0.2759249  0.0176359  15.646  &lt; 2e-16 ***\nYear2001                             0.0036431  0.0150026   0.243 0.808156    \nYear2002                             0.0047602  0.0150254   0.317 0.751417    \nYear2003                            -0.0002601  0.0150909  -0.017 0.986251    \nYear2004                            -0.0019237  0.0151688  -0.127 0.899095    \nYear2005                             0.0060558  0.0152973   0.396 0.692236    \nYear2006                            -0.0028633  0.0149272  -0.192 0.847903    \nYear2007                             0.0080377  0.0152156   0.528 0.597376    \nYear2008                             0.0143914  0.0149241   0.964 0.334998    \nYear2009                             0.0231979  0.0154422   1.502 0.133175    \nYear2010                             0.0260254  0.0152619   1.705 0.088285 .  \nYear2011                             0.0250554  0.0150605   1.664 0.096321 .  \nYear2012                             0.0324372  0.0150364   2.157 0.031093 *  \nYear2013                             0.0367911  0.0155761   2.362 0.018260 *  \nYear2014                             0.0557758  0.0154254   3.616 0.000306 ***\nYear2015                             0.0570597  0.0154153   3.701 0.000219 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1278 on 2253 degrees of freedom\nMultiple R-squared:  0.9841,    Adjusted R-squared:  0.9838 \nF-statistic:  3579 on 39 and 2253 DF,  p-value: &lt; 2.2e-16\n\n\nEach variable in the model is given a P_Value, The lower the P_Value is the more significant the attribute is, with the cutoff for significance being 0.05.\nFrom this first model we can see that the following attributes are significant:\n\nAny attribute not on this table did not make the cut for significance.\n\n\nAttribute\nP Value\n\n\n\n\nRegion\nVarious\n\n\nInfant Deaths\n1.04e-15\n\n\nUnder Five Deaths\n2e-16\n\n\nAdult Mortality\n2e-16\n\n\nHepatitis B\n0.003581\n\n\nBMI\n6.38e-09\n\n\nPolio\n0.081001\n\n\nIncidents HIV\n0.000117\n\n\nGDP per Capita\n3.78e-16\n\n\nThinness_ten_nineteen\n0.037261\n\n\nSchooling\n1.69e-09\n\n\nEconomy_Status\n2e-16\n\n\nYear\nVarious\n\n\n\nThis model has a very high R-Squared, but we need to be wary of over-fitting as well as other potential issues such as multicollinearity values.\n\n\n\nFirst performing a vif test to check for multicollinearity\n\nvif(LE_MR)\n\n                                 GVIF Df GVIF^(1/(2*Df))\nRegion                      52.587643  8        1.281018\nInfant_deaths               46.712975  1        6.834689\nUnder_five_deaths           47.630069  1        6.901454\nAdult_mortality              8.543636  1        2.922950\nAlcohol_consumption          3.411669  1        1.847070\nHepatitis_B                  2.772769  1        1.665163\nMeasles                      1.650280  1        1.284632\nBMI                          3.983825  1        1.995952\nPolio                       11.845756  1        3.441766\nDiphtheria                  13.011222  1        3.607107\nIncidents_HIV                2.946336  1        1.716490\nGDP_per_capita               2.628907  1        1.621390\nPopulation_mln               1.213445  1        1.101565\nThinness_ten_nineteen_years  8.612156  1        2.934648\nThinness_five_nine_years     8.871877  1        2.978570\nSchooling                    5.579833  1        2.362167\nEconomy_status_Developed     7.121377  1        2.668591\nYear                         1.191581 15        1.005860\n\n\nThere are several variables that have high multicollinearity. From the co-variation analysis done in 4.3 we know that Infant deaths and under five deaths are very closely related, as well as the two thinness variables, and Polio and Diphtheria are related.\nWe should only pick one of the variables in these pairs in order to avoid the issues that arise from having high multicollinearity values. We will be picking the values that have more relevance to the models.\nAs neither polio nor diphtheria are significant to the model we will be dropping both.\nFor the other two pairs we will be keeping:\n\nUnder Five Deaths\nThinness_ten_nineteen\n\nWe will also be dropping Region from the model due to its very high VIF test result.\nFirst, remove the variables from the VIF test.\n\n#make the multiple Regression model for Life Expectancy \nLE_MR2 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years, data = train.data)\n\n#print summary of the model\nsummary(LE_MR2)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years, \n    data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51173 -0.09891 -0.00468  0.09589  0.93355 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050046   0.015922   3.143  0.00169 ** \nUnder_five_deaths           -0.386302   0.007926 -48.738  &lt; 2e-16 ***\nAdult_mortality             -0.596080   0.008809 -67.669  &lt; 2e-16 ***\nAlcohol_consumption          0.032940   0.004732   6.961 4.42e-12 ***\nHepatitis_B                 -0.007311   0.003902  -1.873  0.06113 .  \nMeasles                      0.003348   0.003834   0.873  0.38272    \nBMI                         -0.035360   0.004961  -7.128 1.36e-12 ***\nIncidents_HIV                0.023195   0.005200   4.460 8.59e-06 ***\nGDP_per_capita               0.048889   0.004541  10.767  &lt; 2e-16 ***\nPopulation_mln              -0.003616   0.003158  -1.145  0.25230    \nThinness_ten_nineteen_years -0.017529   0.004373  -4.008 6.31e-05 ***\nSchooling                    0.033128   0.006463   5.126 3.22e-07 ***\nEconomy_status_Developing1  -0.079675   0.013134  -6.066 1.53e-09 ***\nYear2001                     0.007050   0.017306   0.407  0.68374    \nYear2002                     0.002974   0.017316   0.172  0.86366    \nYear2003                     0.001353   0.017396   0.078  0.93801    \nYear2004                    -0.006486   0.017472  -0.371  0.71049    \nYear2005                    -0.002628   0.017620  -0.149  0.88145    \nYear2006                    -0.004286   0.017194  -0.249  0.80316    \nYear2007                     0.002856   0.017520   0.163  0.87054    \nYear2008                     0.006734   0.017153   0.393  0.69465    \nYear2009                     0.011643   0.017742   0.656  0.51172    \nYear2010                     0.020988   0.017506   1.199  0.23068    \nYear2011                     0.013066   0.017255   0.757  0.44901    \nYear2012                     0.022202   0.017205   1.290  0.19701    \nYear2013                     0.025501   0.017784   1.434  0.15173    \nYear2014                     0.041596   0.017626   2.360  0.01836 *  \nYear2015                     0.048717   0.017567   2.773  0.00560 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2265 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  3861 on 27 and 2265 DF,  p-value: &lt; 2.2e-16\n\n\nNext remove measles\n\n#make the multiple Regression model for Life Expectancy \nLE_MR3 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles, data = train.data)\n\n#print summary of the model\nsummary(LE_MR3)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years - \n    Measles, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51250 -0.09831 -0.00455  0.09440  0.93757 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050020   0.015921   3.142  0.00170 ** \nUnder_five_deaths           -0.386432   0.007924 -48.766  &lt; 2e-16 ***\nAdult_mortality             -0.596671   0.008782 -67.941  &lt; 2e-16 ***\nAlcohol_consumption          0.033177   0.004724   7.023 2.86e-12 ***\nHepatitis_B                 -0.006479   0.003784  -1.712  0.08699 .  \nBMI                         -0.035190   0.004957  -7.100 1.67e-12 ***\nIncidents_HIV                0.023402   0.005195   4.505 6.98e-06 ***\nGDP_per_capita               0.048910   0.004540  10.772  &lt; 2e-16 ***\nPopulation_mln              -0.003818   0.003150  -1.212  0.22553    \nThinness_ten_nineteen_years -0.017545   0.004373  -4.012 6.21e-05 ***\nSchooling                    0.033816   0.006415   5.272 1.48e-07 ***\nEconomy_status_Developing1  -0.079557   0.013132  -6.058 1.61e-09 ***\nYear2001                     0.007142   0.017304   0.413  0.67986    \nYear2002                     0.003142   0.017314   0.182  0.85599    \nYear2003                     0.001277   0.017395   0.073  0.94150    \nYear2004                    -0.006502   0.017471  -0.372  0.70979    \nYear2005                    -0.002665   0.017619  -0.151  0.87981    \nYear2006                    -0.004253   0.017193  -0.247  0.80462    \nYear2007                     0.002819   0.017519   0.161  0.87219    \nYear2008                     0.006512   0.017151   0.380  0.70422    \nYear2009                     0.011442   0.017739   0.645  0.51898    \nYear2010                     0.020778   0.017503   1.187  0.23531    \nYear2011                     0.012996   0.017254   0.753  0.45140    \nYear2012                     0.022204   0.017204   1.291  0.19696    \nYear2013                     0.025139   0.017778   1.414  0.15749    \nYear2014                     0.041520   0.017625   2.356  0.01857 *  \nYear2015                     0.048636   0.017566   2.769  0.00567 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2266 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  4010 on 26 and 2266 DF,  p-value: &lt; 2.2e-16\n\n\nnext remove population\n\n#make the multiple Regression model for Life Expectancy \nLE_MR4 &lt;- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln, data = train.data)\n\n#print summary of the model\nsummary(LE_MR4)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Economy_status_Developed - \n    Polio - Diphtheria - Infant_deaths - Thinness_five_nine_years - \n    Measles - Population_mln, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.51307 -0.09792 -0.00394  0.09519  0.93736 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.050652   0.015914   3.183  0.00148 ** \nUnder_five_deaths           -0.386244   0.007924 -48.746  &lt; 2e-16 ***\nAdult_mortality             -0.595477   0.008728 -68.228  &lt; 2e-16 ***\nAlcohol_consumption          0.032976   0.004722   6.984 3.76e-12 ***\nHepatitis_B                 -0.006014   0.003765  -1.598  0.11028    \nBMI                         -0.034346   0.004908  -6.998 3.40e-12 ***\nIncidents_HIV                0.023078   0.005188   4.448 9.09e-06 ***\nGDP_per_capita               0.049225   0.004533  10.858  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.018571   0.004290  -4.328 1.57e-05 ***\nSchooling                    0.033231   0.006397   5.195 2.23e-07 ***\nEconomy_status_Developing1  -0.080269   0.013121  -6.118 1.11e-09 ***\nYear2001                     0.007042   0.017306   0.407  0.68412    \nYear2002                     0.003269   0.017315   0.189  0.85028    \nYear2003                     0.001075   0.017396   0.062  0.95073    \nYear2004                    -0.006690   0.017472  -0.383  0.70185    \nYear2005                    -0.002894   0.017619  -0.164  0.86956    \nYear2006                    -0.004419   0.017194  -0.257  0.79717    \nYear2007                     0.002706   0.017521   0.154  0.87726    \nYear2008                     0.006542   0.017152   0.381  0.70295    \nYear2009                     0.011470   0.017741   0.647  0.51799    \nYear2010                     0.020597   0.017505   1.177  0.23946    \nYear2011                     0.012816   0.017255   0.743  0.45772    \nYear2012                     0.022055   0.017205   1.282  0.20000    \nYear2013                     0.024885   0.017779   1.400  0.16173    \nYear2014                     0.041227   0.017625   2.339  0.01941 *  \nYear2015                     0.048649   0.017567   2.769  0.00566 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1475 on 2267 degrees of freedom\nMultiple R-squared:  0.9787,    Adjusted R-squared:  0.9785 \nF-statistic:  4169 on 25 and 2267 DF,  p-value: &lt; 2.2e-16\n\n\nNext we remove year,\n\n#make the multiple Regression model for Life Expectancy \nLE_MR5 &lt;- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln , data = train.data)\n\n#print summary of the model\nsummary(LE_MR5)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Year - \n    Economy_status_Developed - Polio - Diphtheria - Infant_deaths - \n    Thinness_five_nine_years - Measles - Population_mln, data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.50802 -0.09808 -0.00724  0.09558  0.94591 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.060100   0.010872   5.528 3.61e-08 ***\nUnder_five_deaths           -0.384942   0.007929 -48.550  &lt; 2e-16 ***\nAdult_mortality             -0.598249   0.008715 -68.649  &lt; 2e-16 ***\nAlcohol_consumption          0.032231   0.004724   6.823 1.14e-11 ***\nHepatitis_B                 -0.005156   0.003749  -1.375    0.169    \nBMI                         -0.033666   0.004911  -6.855 9.15e-12 ***\nIncidents_HIV                0.024005   0.005187   4.628 3.90e-06 ***\nGDP_per_capita               0.048657   0.004539  10.721  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.017914   0.004291  -4.174 3.10e-05 ***\nSchooling                    0.035912   0.006375   5.633 1.99e-08 ***\nEconomy_status_Developing1  -0.077447   0.013114  -5.906 4.04e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1478 on 2282 degrees of freedom\nMultiple R-squared:  0.9785,    Adjusted R-squared:  0.9784 \nF-statistic: 1.038e+04 on 10 and 2282 DF,  p-value: &lt; 2.2e-16\n\n\nNow Hep B has the lowest P Values and is thus next to be removed\n\n#make the multiple Regression model for Life Expectancy \nLE_MR6 &lt;- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln -Hepatitis_B, data = train.data)\n\n#print summary of the model\nsummary(LE_MR6)\n\n\nCall:\nlm(formula = Life_expectancy ~ . - Country - Region - Year - \n    Economy_status_Developed - Polio - Diphtheria - Infant_deaths - \n    Thinness_five_nine_years - Measles - Population_mln - Hepatitis_B, \n    data = train.data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.50728 -0.09775 -0.00759  0.09580  0.94256 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  0.060964   0.010856   5.616 2.19e-08 ***\nUnder_five_deaths           -0.381629   0.007556 -50.510  &lt; 2e-16 ***\nAdult_mortality             -0.598373   0.008716 -68.653  &lt; 2e-16 ***\nAlcohol_consumption          0.032139   0.004724   6.803 1.31e-11 ***\nBMI                         -0.033723   0.004912  -6.865 8.51e-12 ***\nIncidents_HIV                0.023336   0.005165   4.518 6.55e-06 ***\nGDP_per_capita               0.048763   0.004539  10.744  &lt; 2e-16 ***\nThinness_ten_nineteen_years -0.017852   0.004292  -4.159 3.31e-05 ***\nSchooling                    0.036260   0.006372   5.691 1.43e-08 ***\nEconomy_status_Developing1  -0.078664   0.013087  -6.011 2.14e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1479 on 2283 degrees of freedom\nMultiple R-squared:  0.9785,    Adjusted R-squared:  0.9784 \nF-statistic: 1.153e+04 on 9 and 2283 DF,  p-value: &lt; 2.2e-16\n\n\n\nggplot(df, aes(x = Under_five_deaths, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Under Five Deaths\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Adult_mortality\nggplot(df, aes(x = Adult_mortality, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") +\n  labs(title = \"Life Expectancy vs Adult Mortality\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Alcohol_consumption\nggplot(df, aes(x = Alcohol_consumption, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Alcohol Consumption\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for BMI\nggplot(df, aes(x = BMI, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs BMI\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Incidents_HIV\nggplot(df, aes(x = Incidents_HIV, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Incidents HIV\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for GDP_per_capita\nggplot(df, aes(x = GDP_per_capita, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs GDP per Capita\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Thinness_ten_nineteen_years\nggplot(df, aes(x = Thinness_ten_nineteen_years, y = Life_expectancy)) +\n  geom_point() +               \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Thinness (10-19 years)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# Scatter plot for Schooling\nggplot(df, aes(x = Schooling, y = Life_expectancy)) +\n  geom_point() +              \n  geom_smooth(method = \"lm\") + \n  labs(title = \"Life Expectancy vs Schooling\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTesting the data\n\npredictions &lt;- predict(LE_MR, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 1\")\n\n[1] \"RMSE 1\"\n\nrmse\n\n[1] 0.0006730005\n\npredictions &lt;- predict(LE_MR2, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 2\")\n\n[1] \"RMSE 2\"\n\nrmse\n\n[1] 0.006045691\n\nrmsepredictions &lt;- predict(LE_MR3, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 3\")\n\n[1] \"RMSE 3\"\n\nrmse\n\n[1] 0.006045691\n\npredictions &lt;- predict(LE_MR4, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 4\")\n\n[1] \"RMSE 4\"\n\nrmse\n\n[1] 0.006292047\n\npredictions &lt;- predict(LE_MR5, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 5\")\n\n[1] \"RMSE 5\"\n\nrmse\n\n[1] 0.006712114\n\npredictions &lt;- predict(LE_MR6, newdata = test.data)\n\nrmse &lt;- sqrt(mean(test.data$Life_expectancy - predictions)^2)\nprint(\"RMSE 6\")\n\n[1] \"RMSE 6\"\n\nrmse\n\n[1] 0.007220434\n\n\n\nComparing the Regression Models\n\n\nModel\nRMSE\nAdjusted R^2\n\n\n\n\nLE_MR\n0.0006730005\n0.9838\n\n\nLE_MR2\n0.006045691\n0.9785\n\n\nLE_MR3\n0.006045691\n0.9785\n\n\nLE_MR4\n0.006292047\n0.9785\n\n\nLE_MR5\n0.006712114\n0.9784\n\n\nLE_MR6\n0.007220434\n0.9784\n\n\n\n\n\n\n\nSplitting the dataset\n\nglimpse(sdf)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Infant_deaths               &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Under_five_deaths           &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Adult_mortality             &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Alcohol_consumption         &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Hepatitis_B                 &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Measles                     &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ BMI                         &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Polio                       &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Diphtheria                  &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Incidents_HIV               &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ GDP_per_capita              &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Population_mln              &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Thinness_ten_nineteen_years &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Thinness_five_nine_years    &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Schooling                   &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0,…\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,…\n$ Life_expectancy             &lt;dbl[,1]&gt; &lt;matrix[26 x 1]&gt;\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 20…\n\n\n\nsdf_num &lt;- sdf %&gt;% select_if(is.numeric)\n\n\n#seed to make this reproducible \nset.seed(444)\n\n#split the data\ntraining.samples. &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain_data_nn &lt;- sdf_num[training.samples, ]\ntest_data_nn &lt;- sdf_num[-training.samples, ]\n\nTraining\n\n# Train the neural network\nnn &lt;- neuralnet(Life_expectancy ~ . -Diphtheria  - Infant_deaths - Thinness_ten_nineteen_years \n, data = train_data_nn, hidden = 3,\n linear.output = FALSE)\nplot(nn)\n\n\n\n\n\n#seed to make this reproducible \nset.seed(444)\n\n#split the data\ntraining.samples &lt;- sdf$Life_expectancy |&gt; createDataPartition(p = 0.8, list = FALSE)\n\ntrain.data.svm &lt;- sdf[training.samples, ]\ntest.data.svm &lt;- sdf[-training.samples, ]\n\nThe data needs to be scaled for SVR\n\n# Filter out non-numeric columns\nnumeric_cols &lt;- sapply(train.data.svm, is.numeric)\ntrain.data.svm_numeric &lt;- train.data.svm[, numeric_cols]\n\n# Scale the numeric features\ntrain.data.svm_scaled &lt;- as.data.frame(scale(train.data.svm_numeric))\n\n# Train the SVR model \nLE_SVR &lt;- svm(Life_expectancy ~ . , data = train.data.svm_scaled)\n\nEvaluate Model function:\n\nevaluate_SVR_model &lt;- function(model, test_data) {\n  \n  actual_values &lt;- test_data$Life_expectancy\n  \n  # Predict \n  predicted_values &lt;- predict(model, newdata = test_data)\n  \n  # Calculate evaluation metrics\n  mae &lt;- mean(abs(predicted_values - actual_values))\n  mse &lt;- mean((predicted_values - actual_values)^2)\n  rmse &lt;- sqrt(mse)\n  r_squared &lt;- cor(predicted_values, actual_values)^2\n  \n  # Calculate Adjusted R-squared\n  n &lt;- length(actual_values)\n  p &lt;- 1  # Assuming you have one predictor, adjust accordingly if you have more\n  adjusted_r_squared &lt;- 1 - ((1 - r_squared) * (n - 1) / (n - p - 1))\n  \n  # Print evaluation metrics\n  cat(\"Mean Absolute Error (MAE):\", mae, \"\\n\")\n  cat(\"Mean Squared Error (MSE):\", mse, \"\\n\")\n  cat(\"Root Mean Squared Error (RMSE):\", rmse, \"\\n\")\n  cat(\"R-squared:\", r_squared, \"\\n\")\n  cat(\"Adjusted R-squared:\", adjusted_r_squared, \"\\n\")\n}\n\nUse the function to evaluate the model\n\nevaluate_SVR_model(LE_SVR, test.data.svm)\n\nMean Absolute Error (MAE): 0.07397218 \nMean Squared Error (MSE): 0.007783215 \nRoot Mean Squared Error (RMSE): 0.08822253 \nR-squared: 0.9925463 \nAdjusted R-squared: 0.9925332 \n\n\nTo establish which of the variables are significant we will be removing them one at a time and re-evaluate to see if the model is more or less accurate, Paying attention to the Adjusted R-Square and RMSE especially.\n\nRecursive Feature Elimination - Run this at your own risk!\n\n# Adjust cross-validation settings\n# ctrl &lt;- rfeControl(method = \"cv\", number = 5, verbose = FALSE)\n\n# Use parallel processing\n\n# cores &lt;- parallel::detectCores()\n# cl &lt;- makeCluster(cores - 1)  # Use one less core to avoid overloading\n# registerDoParallel(cl)\n\n# Perform RFE with scaled features\n# rfe_result &lt;- rfe(x = train.data.svm_scaled, \n#                  y = train.data.svm$Life_expectancy,\n#                  sizes = c(1:length(predictors)), rfeControl = ctrl)\n\n# Stop parallel processing\n# stopCluster(cl)\n\n\nAs RFE is not working for the group, we are going to just brute force it by removing attributes one at a time and see if the models numbers get better.\nGlimpse of the data just for checking the names\n\nglimpse(train.data.svm_scaled)\n\nRows: 2,293\nColumns: 16\n$ Infant_deaths               &lt;dbl&gt; 0.7590492, 0.0841529, -0.7856332, -0.30562…\n$ Under_five_deaths           &lt;dbl&gt; 0.55258540, -0.05825996, -0.73598621, -0.3…\n$ Adult_mortality             &lt;dbl&gt; 0.077338858, 0.261532302, 0.006631077, -0.…\n$ Alcohol_consumption         &lt;dbl&gt; -0.82494784, 0.20916759, 1.85721042, -1.08…\n$ Hepatitis_B                 &lt;dbl&gt; -1.51935470, 0.53879157, 0.22695123, 0.788…\n$ Measles                     &lt;dbl&gt; -2.31877381, -0.19600053, 1.16475158, 0.51…\n$ BMI                         &lt;dbl&gt; -1.75692499, 0.11855802, 0.39301895, 1.307…\n$ Polio                       &lt;dbl&gt; -1.2747616, 0.3605905, 0.8184891, 0.687660…\n$ Diphtheria                  &lt;dbl&gt; -1.4035975, 0.4296643, 0.8089598, 0.808959…\n$ Incidents_HIV               &lt;dbl&gt; -0.32326406, -0.04478948, -0.34436062, -0.…\n$ GDP_per_capita              &lt;dbl&gt; -0.6173467, -0.4339117, -0.1456139, -0.460…\n$ Population_mln              &lt;dbl&gt; 7.79008710, -0.26103660, -0.19662543, -0.2…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9415722, 0.1836360, -0.5722978, -0.19433…\n$ Thinness_five_nine_years    &lt;dbl&gt; 5.0464300, 0.1296280, -0.5696505, -0.22001…\n$ Schooling                   &lt;dbl&gt; -0.83048406, 0.08144663, 0.80470200, 0.616…\n$ Life_expectancy             &lt;dbl&gt; -0.36755454, -0.19705890, 0.25049214, 0.32…\n\n\n\n#Without Infant_deaths\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Infant_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07471295 \nMean Squared Error (MSE): 0.007852998 \nRoot Mean Squared Error (RMSE): 0.08861714 \nR-squared: 0.9924428 \nAdjusted R-squared: 0.9924295 \n\n\n\n#Without Under_five_deaths\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Under_five_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07619821 \nMean Squared Error (MSE): 0.008231436 \nRoot Mean Squared Error (RMSE): 0.09072726 \nR-squared: 0.9920679 \nAdjusted R-squared: 0.992054 \n\n\n\n#Adult_mortality\nLE_SVR_Testing &lt;- svm(Life_expectancy ~ . - Adult_mortality, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.1133804 \nMean Squared Error (MSE): 0.02399256 \nRoot Mean Squared Error (RMSE): 0.1548953 \nR-squared: 0.9766539 \nAdjusted R-squared: 0.9766129 \n\n\n\n#Alcohol_consumption\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Alcohol_consumption, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07744333 \nMean Squared Error (MSE): 0.008586509 \nRoot Mean Squared Error (RMSE): 0.09266342 \nR-squared: 0.9916855 \nAdjusted R-squared: 0.9916709 \n\n\n\n#Hepatitis_B                 \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Hepatitis_B                 , data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07241759 \nMean Squared Error (MSE): 0.007626557 \nRoot Mean Squared Error (RMSE): 0.08733016 \nR-squared: 0.9926655 \nAdjusted R-squared: 0.9926526 \n\n\n\n#Measles                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Measles, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07528426 \nMean Squared Error (MSE): 0.008338268 \nRoot Mean Squared Error (RMSE): 0.09131412 \nR-squared: 0.9919717 \nAdjusted R-squared: 0.9919576 \n\n\n\n#BMI                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - BMI, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07787055 \nMean Squared Error (MSE): 0.009170201 \nRoot Mean Squared Error (RMSE): 0.09576117 \nR-squared: 0.9912598 \nAdjusted R-squared: 0.9912444 \n\n\n\n#Polio                                      \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Polio, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07443335 \nMean Squared Error (MSE): 0.007857034 \nRoot Mean Squared Error (RMSE): 0.08863991 \nR-squared: 0.9925017 \nAdjusted R-squared: 0.9924885 \n\n\n\n#Diphtheria                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Diphtheria, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07355648 \nMean Squared Error (MSE): 0.007704026 \nRoot Mean Squared Error (RMSE): 0.08777258 \nR-squared: 0.9926214 \nAdjusted R-squared: 0.9926085 \n\n\n\n#Incidents_HIV                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Incidents_HIV, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07527161 \nMean Squared Error (MSE): 0.008397796 \nRoot Mean Squared Error (RMSE): 0.09163949 \nR-squared: 0.9918974 \nAdjusted R-squared: 0.9918832 \n\n\n\n#GDP_per_capita                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - GDP_per_capita, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07584458 \nMean Squared Error (MSE): 0.008198734 \nRoot Mean Squared Error (RMSE): 0.09054686 \nR-squared: 0.9921686 \nAdjusted R-squared: 0.9921549 \n\n\n\n#Population_mln                                     \nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Population_mln, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07505001 \nMean Squared Error (MSE): 0.008137925 \nRoot Mean Squared Error (RMSE): 0.09021045 \nR-squared: 0.992191 \nAdjusted R-squared: 0.9921773 \n\n\n\n#Thinness_ten_nineteen_years\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Thinness_ten_nineteen_years, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07369326 \nMean Squared Error (MSE): 0.007717285 \nRoot Mean Squared Error (RMSE): 0.08784808 \nR-squared: 0.9925828 \nAdjusted R-squared: 0.9925698 \n\n\n\n#Thinness_five_nine_years\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Thinness_five_nine_years, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07403657 \nMean Squared Error (MSE): 0.007772499 \nRoot Mean Squared Error (RMSE): 0.08816178 \nR-squared: 0.9925884 \nAdjusted R-squared: 0.9925753 \n\n\n\n#Schooling\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Schooling, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.07663966 \nMean Squared Error (MSE): 0.008466487 \nRoot Mean Squared Error (RMSE): 0.09201351 \nR-squared: 0.9918468 \nAdjusted R-squared: 0.9918324 \n\n\nTable comparing the different SVR models.\n\n\n\n\n\n\n\n\n\n\n\nRemoved Variable\nMAE\nMSE\nRMSE\nR-Squared\nAdjusted R-Squared\n\n\n\n\nNone (Base)\n0.07395971\n0.00778042\n0.08820669\n0.9925481\n0.992535\n\n\nInfant deaths\n0.07470623\n0.007850003\n0.08860024\n0.992445\n0.9924317\n\n\nUnder five deaths\n0.07621305\n0.008232278\n0.0907319\n0.9920679\n0.992054\n\n\nAdult mortality\n0.1133804\n0.02399256\n0.1548953\n0.9766539\n0.9766129\n\n\nAlcohol consumption\n0.07744333\n0.008586509\n0.09266342\n0.9916855\n0.9916709\n\n\nHepatitis B\n0.07243036\n0.007626723\n0.08733111\n0.992664\n0.9926511\n\n\nMeasles\n0.07528426\n0.008338268\n0.09131412\n0.9919717\n0.9919576\n\n\nBMI\n0.07787055\n0.009170201\n0.09576117\n0.9912598\n0.9912444\n\n\nPolio\n0.0744371\n0.007858702\n0.08864932\n0.9925011\n0.9924879\n\n\nDiphtheria\n0.07355422\n0.007703352\n0.08776874\n0.9926202\n0.9926072\n\n\nIncidents HIV\n0.07527161\n0.008397796\n0.09163949\n0.9918974\n0.9918832\n\n\nGDP per capita\n0.07584458\n0.008198734\n0.09054686\n0.9921686\n0.9921549\n\n\nPopulation mln\n0.07505001\n0.008137925\n0.09021045\n0.992191\n0.9921773\n\n\nThinness ten nineteen years\n0.07371203\n0.007720199\n0.08786466\n0.992582\n0.992569\n\n\nThinness five nine years\n0.0740283\n0.007773223\n0.08816589\n0.9925873\n0.9925743\n\n\nSchooling\n0.07663966\n0.008466487\n0.09201351\n0.9918468\n0.9918324\n\n\n\nThe general idea of this table is that the worse the model does without the given variable, the more important the variable is to the SVR model.\nThe fact that Infant deaths and Under 5 deaths are not showing as significant is interesting, as every other model shows them as being very significant. It is possible that due to the Multicollinearity between them, removing one will not have much of an effect as the other is still present in the model, to test this we will remove both to see what happens.\n\nLE_SVR_Testing&lt;- svm(Life_expectancy ~ . - Under_five_deaths -Infant_deaths, data = train.data.svm_scaled)\n\nevaluate_SVR_model(LE_SVR_Testing, test.data.svm)\n\nMean Absolute Error (MAE): 0.08451521 \nMean Squared Error (MSE): 0.01103041 \nRoot Mean Squared Error (RMSE): 0.1050258 \nR-squared: 0.989295 \nAdjusted R-squared: 0.9892762 \n\n\nAnd yes, this is having a very large effect on the model, its not perfectly comparable to the removal of one of the variables at a time, but it is enough for us to assume that Infant Deaths and Under five deaths are more significant that the table initially lets on.\n\n\nAdult_Mortality, BMI and Schooling all negatively impact the model enough when removed to be significant.\nThis method is not without it faults however, as it doesn’t identify Under_five_deaths or Infant_deaths as significant. However if both are removed from the model, it causes a significant increase in error of the model. As we laid out in the previous model, these variables are high in multicollinearity. It is very possible that the removal of one of these is beneficial to the model, to prevent over-fitting, and the negative effects of removing these significant attributes is only shown when both are removed.\n\n\n\n\nSet up the data for Random Forest:\n\nRF_DF &lt;- df[, !(names(df) %in% c(\"Region\", \"Country\", \"Economy_status_Developed\", \"Economy_status_Developing\",\"Year\"))]\n\nsummary(RF_DF)\n\n Infant_deaths    Under_five_deaths Adult_mortality  Alcohol_consumption\n Min.   :  1.80   Min.   :  2.300   Min.   : 49.38   Min.   : 0.000     \n 1st Qu.:  8.10   1st Qu.:  9.675   1st Qu.:106.91   1st Qu.: 1.200     \n Median : 19.60   Median : 23.100   Median :163.84   Median : 4.020     \n Mean   : 30.36   Mean   : 42.938   Mean   :192.25   Mean   : 4.821     \n 3rd Qu.: 47.35   3rd Qu.: 66.000   3rd Qu.:246.79   3rd Qu.: 7.777     \n Max.   :138.10   Max.   :224.900   Max.   :719.36   Max.   :17.870     \n  Hepatitis_B       Measles           BMI            Polio        Diphtheria   \n Min.   :12.00   Min.   :10.00   Min.   :19.80   Min.   : 8.0   Min.   :16.00  \n 1st Qu.:78.00   1st Qu.:64.00   1st Qu.:23.20   1st Qu.:81.0   1st Qu.:81.00  \n Median :89.00   Median :83.00   Median :25.50   Median :93.0   Median :93.00  \n Mean   :84.29   Mean   :77.34   Mean   :25.03   Mean   :86.5   Mean   :86.27  \n 3rd Qu.:96.00   3rd Qu.:93.00   3rd Qu.:26.40   3rd Qu.:97.0   3rd Qu.:97.00  \n Max.   :99.00   Max.   :99.00   Max.   :32.10   Max.   :99.0   Max.   :99.00  \n Incidents_HIV     GDP_per_capita   Population_mln    \n Min.   : 0.0100   Min.   :   148   Min.   :   0.080  \n 1st Qu.: 0.0800   1st Qu.:  1416   1st Qu.:   2.098  \n Median : 0.1500   Median :  4217   Median :   7.850  \n Mean   : 0.8943   Mean   : 11541   Mean   :  36.676  \n 3rd Qu.: 0.4600   3rd Qu.: 12557   3rd Qu.:  23.688  \n Max.   :21.6800   Max.   :112418   Max.   :1379.860  \n Thinness_ten_nineteen_years Thinness_five_nine_years   Schooling     \n Min.   : 0.100              Min.   : 0.1             Min.   : 1.100  \n 1st Qu.: 1.600              1st Qu.: 1.6             1st Qu.: 5.100  \n Median : 3.300              Median : 3.4             Median : 7.800  \n Mean   : 4.866              Mean   : 4.9             Mean   : 7.632  \n 3rd Qu.: 7.200              3rd Qu.: 7.3             3rd Qu.:10.300  \n Max.   :27.700              Max.   :28.6             Max.   :14.100  \n Life_expectancy\n Min.   :39.40  \n 1st Qu.:62.70  \n Median :71.40  \n Mean   :68.86  \n 3rd Qu.:75.40  \n Max.   :83.80  \n\n\nSplit the data:\n\n# Set seed for reproducibility\nset.seed(321)\n\n# Split the data into training and testing sets\ntrain_index_RF &lt;- createDataPartition(RF_DF$Life_expectancy, p = 0.8, list = FALSE)\ntrain_data_RF &lt;- RF_DF[train_index_RF, ]\ntest_data_RF &lt;- RF_DF[-train_index_RF, ]\n\nMaking the model:\n\n# Train the random forest model\nrf_model &lt;- randomForest(Life_expectancy ~ ., data = train_data_RF, ntree = 500)\n\n# Print the trained model\nprint(rf_model)\n\n\nCall:\n randomForest(formula = Life_expectancy ~ ., data = train_data_RF,      ntree = 500) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 5\n\n          Mean of squared residuals: 0.2893711\n                    % Var explained: 99.67\n\n\nAssessing the model:\n\npredicted_values &lt;- predict(rf_model, test_data_RF)\n\nrmse_value &lt;- sqrt(mean((predicted_values - test_data_RF$Life_expectancy)^2))\nprint(paste(\"RMSE:\", rmse_value))\n\n[1] \"RMSE: 0.499788784239889\"\n\n# R-squared\nobserved_values &lt;- test_data_RF$Life_expectancy\nr_squared &lt;- cor(observed_values, predicted_values)^2\nprint(paste(\"R-squared:\", r_squared))\n\n[1] \"R-squared: 0.997343879005976\"\n\n\nSignificance plot:\n\n# Print variable importance\nprint(rf_model$importance)\n\n                            IncNodePurity\nInfant_deaths                  38309.0795\nUnder_five_deaths              62636.1320\nAdult_mortality                51316.8181\nAlcohol_consumption             1260.6709\nHepatitis_B                      330.7512\nMeasles                         1600.2814\nBMI                             5418.3906\nPolio                           1192.1789\nDiphtheria                       770.9613\nIncidents_HIV                  16695.6777\nGDP_per_capita                 10782.2387\nPopulation_mln                   848.2376\nThinness_ten_nineteen_years     1139.3053\nThinness_five_nine_years        1346.8517\nSchooling                       7127.5208\n\n\nThis gives us another way to answer to see which variables are significant for Life Expectancy.\nInterpreting these values:\n\nInfant_deaths, Under_five_deaths, and Adult_mortality have the highest importance scores, indicating that they are the most important predictors of life expectancy in your model.\nAlcohol_consumption, BMI, Incidents_HIV, GDP_per_capita, and Schooling also have relatively high importance scores, suggesting that they significantly contribute to the model’s predictive performance.\nHepatitis_B, Measles, Polio, Diphtheria, Population_mln, Thinness_ten_nineteen_years, and Thinness_five_nine_years have relatively less impact on the model compared to others.\n\nThis backs up the Multiple Regression model findings.\n\n\n\n\nFrom the various model made above, it seems conclusive that the most significant variables for Life Expectancy are Infant_deaths, Under_five_deaths, and Adult_mortality. This is not a surprising conclusion as all three of these variables directly relate to death at a certain age, which is what Life Expectancy is measuring.\nThe more interesting variables of significance are Alcohol_consumption, BMI, Incidents_HIV, GDP_per_capita, and Schooling.\nIncidents of HIV is again no surprise as HIV is a debilitating illness that if untreated will result in death, therefore the higher the rate of HIV the lower the life expectancy.\nThe other variables in this group are more interesting, and seem to correlate with a nation being more developed, and thus having more access to healthcare, and thus a higher life expectancy.\n\n\n\n\nFor each of these models if multiple models were made, we are using the final version of the model for comparison.\n\n\n\nModel\nRMSE\nAdjusted R^2\n\n\n\n\nMultiple Regression\n0.007220434\n0.9784\n\n\nRandom Forest\n0.5001062729781\n0.9973385774022\n\n\nSVR\n0.08820669\n0.992533\n\n\n\nAccording to these numbers, the Multiple Regression model is the most accurate.\n\n\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nsplit the data\n\nset.seed(17)\n\npartition_index &lt;- createDataPartition(df$Economy_status_Developed, p = 0.7, list = FALSE)\n\ntrain_data_log &lt;- df[partition_index,]\nvalidation_data_log &lt;- df[-partition_index,]\n\nmake the model\n\nLE_Log &lt;- glm(Economy_status_Developed ~ Life_expectancy,\n              data = train_data_log,\n              family = binomial)\n\nSummary of the model:\n\nsummary(LE_Log)\n\n\nCall:\nglm(formula = Economy_status_Developed ~ Life_expectancy, family = binomial, \n    data = train_data_log)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     -41.61314    2.17086  -19.17   &lt;2e-16 ***\nLife_expectancy   0.53984    0.02848   18.95   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2045.29  on 2005  degrees of freedom\nResidual deviance:  965.27  on 2004  degrees of freedom\nAIC: 969.27\n\nNumber of Fisher Scoring iterations: 7\n\n\nAs expected from our previous question, Life Expectancy is significant to the countries status, with a P Value of 2e-16.\nOdds Ratio\n\nodds_ratio &lt;- exp(coef(LE_Log))\n\nprint(odds_ratio)\n\n    (Intercept) Life_expectancy \n   8.465307e-19    1.715740e+00 \n\n\nPredictions and Confusion matrix\n\npredictions &lt;- predict(LE_Log, validation_data_log, type = \"response\" )\n\nbinary_predictions &lt;- ifelse(predictions &gt; 0.5, 1, 0)\n\nconfusion_Matrix &lt;- confusionMatrix(factor(binary_predictions), factor(validation_data_log$Economy_status_Developed))\n\nprint(confusion_Matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 639  45\n         1  42 132\n                                         \n               Accuracy : 0.8986         \n                 95% CI : (0.8764, 0.918)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt;2e-16         \n                                         \n                  Kappa : 0.6884         \n                                         \n Mcnemar's Test P-Value : 0.8302         \n                                         \n            Sensitivity : 0.9383         \n            Specificity : 0.7458         \n         Pos Pred Value : 0.9342         \n         Neg Pred Value : 0.7586         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7448         \n   Detection Prevalence : 0.7972         \n      Balanced Accuracy : 0.8420         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\nOverall accuracy: 90.1%\nSpecificity: 70.62%\nSensitivity: 95.16%\nOverall a very good model, going off this confusion matrix. However can we make it better?\nROC Curve\n\n la.roc &lt;- roc(validation_data_log$Economy_status_Developed, predictions)\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\n plot.roc(la.roc, print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\nFrom this we have learned that the best threshold for this model for predictions would be 0.308\nRemake the model with the best threshold.\n\npredictions &lt;- predict(LE_Log, validation_data_log, type = \"response\" )\n\nbinary_predictions &lt;- ifelse(predictions &gt; 0.308, 1, 0)\n\nconfusion_Matrix &lt;- confusionMatrix(factor(binary_predictions), factor(validation_data_log$Economy_status_Developed))\n\nprint(confusion_Matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 608  34\n         1  73 143\n                                          \n               Accuracy : 0.8753          \n                 95% CI : (0.8513, 0.8967)\n    No Information Rate : 0.7937          \n    P-Value [Acc &gt; NIR] : 2.69e-10        \n                                          \n                  Kappa : 0.6479          \n                                          \n Mcnemar's Test P-Value : 0.0002392       \n                                          \n            Sensitivity : 0.8928          \n            Specificity : 0.8079          \n         Pos Pred Value : 0.9470          \n         Neg Pred Value : 0.6620          \n             Prevalence : 0.7937          \n         Detection Rate : 0.7086          \n   Detection Prevalence : 0.7483          \n      Balanced Accuracy : 0.8504          \n                                          \n       'Positive' Class : 0               \n                                          \n\n\nOverall accuracy: 89.76%\nSpecificity: 83.05%\nSensitivity: 91.5%\nPlease note that this “Best” model is simply the one with the highest sum of sensitivity and specificity. As we do not have any costs associated with false negatives and false positives it is not possible to determine what the best model for our situation is.\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nAny factors need to be turned back into numeric values for this model:\n\nxgdf &lt;- df %&gt;%\n  mutate_if(is.factor, as.numeric)\n\nxgdf &lt;- xgdf %&gt;%\n  select(Life_expectancy, Economy_status_Developed)\n\nSplit the data:\n\nset.seed(101)\n\n# Create train-test split\ntrain_index &lt;- createDataPartition(xgdf$Economy_status_Developed, p = 0.8, list = FALSE)\ntrain_data &lt;- xgdf[train_index, ]\ntest_data &lt;- xgdf[-train_index, ]\n\nXGBoost requires a specific format, DMatrix:\n\n# Convert labels to binary format\ntrain_data$Economy_status_Developed &lt;- ifelse(train_data$Economy_status_Developed == 1, 0, 1)\n\n# Train data\ndtrain &lt;- xgb.DMatrix(data = as.matrix(train_data[, -ncol(train_data)]), label = train_data$Economy_status_Developed)\n\n# Test data\ndtest &lt;- xgb.DMatrix(data = as.matrix(test_data[, -ncol(test_data)]), label = test_data$Economy_status_Developed)\n\nNow we can actually make the model:\n\nparams &lt;- list(\n  booster = \"gbtree\",\n  objective = \"binary:logistic\",\n  eta = 0.1,\n  gamma = 1,\n  max_depth = 6,\n  min_child_weight = 1,\n  subsample = 0.8,\n  colsample_bytree = 0.8\n)\n\n# Train the model\nXG_model &lt;- xgb.train(params = params, data = dtrain, nrounds = 100, watchlist = list(train = dtrain, test = dtest), early_stopping_rounds = 10)\n\n[1] train-logloss:0.625828  test-logloss:0.746798 \nMultiple eval metrics are present. Will use test_logloss for early stopping.\nWill train until test_logloss hasn't improved in 10 rounds.\n\n[2] train-logloss:0.570548  test-logloss:0.802487 \n[3] train-logloss:0.524475  test-logloss:0.858668 \n[4] train-logloss:0.485445  test-logloss:0.916790 \n[5] train-logloss:0.452155  test-logloss:0.972407 \n[6] train-logloss:0.424040  test-logloss:1.029547 \n[7] train-logloss:0.400175  test-logloss:1.084337 \n[8] train-logloss:0.379408  test-logloss:1.138477 \n[9] train-logloss:0.361277  test-logloss:1.194970 \n[10]    train-logloss:0.345439  test-logloss:1.251218 \n[11]    train-logloss:0.331490  test-logloss:1.304111 \nStopping. Best iteration:\n[1] train-logloss:0.625828  test-logloss:0.746798\n\n\nPredictions and Confusion Matrix:\n\npreds &lt;- predict(XG_model, dtest)\n\npredicted_labels &lt;- ifelse(preds &gt; 0.5, 1, 0)\n\n\npredicted_labels_factor &lt;- factor(predicted_labels, levels = c(0, 1))\nactual_labels_factor &lt;- factor(test_data$Economy_status_Developed, levels = c(0, 1))\n\n# Compute the confusion matrix\nconf_matrix &lt;- confusionMatrix(predicted_labels_factor, actual_labels_factor)\nprint(conf_matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0   0 445\n         1   0  19\n                                          \n               Accuracy : 0.0409          \n                 95% CI : (0.0248, 0.0632)\n    No Information Rate : 1               \n    P-Value [Acc &gt; NIR] : 1               \n                                          \n                  Kappa : 0               \n                                          \n Mcnemar's Test P-Value : &lt;2e-16          \n                                          \n            Sensitivity :      NA         \n            Specificity : 0.04095         \n         Pos Pred Value :      NA         \n         Neg Pred Value :      NA         \n             Prevalence : 0.00000         \n         Detection Rate : 0.00000         \n   Detection Prevalence : 0.95905         \n      Balanced Accuracy :      NA         \n                                          \n       'Positive' Class : 0               \n                                          \n\n\nSensitivity: 96.34%\nSpecificity: 67.59%\nOverall Accuracy: 90.90%\n\n xg.roc &lt;- roc(test_data$Economy_status_Developed, preds)\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\n plot.roc(xg.roc, print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\n\n\n\n\nglimpse(df)\n\nRows: 2,864\nColumns: 21\n$ Country                     &lt;fct&gt; \"Turkiye\", \"Spain\", \"India\", \"Guyana\", \"Is…\n$ Region                      &lt;fct&gt; Middle East, European Union, Asia, South A…\n$ Year                        &lt;fct&gt; 2015, 2015, 2007, 2006, 2012, 2006, 2015, …\n$ Infant_deaths               &lt;dbl&gt; 11.1, 2.7, 51.5, 32.8, 3.4, 9.8, 6.6, 8.7,…\n$ Under_five_deaths           &lt;dbl&gt; 13.0, 3.3, 67.9, 40.5, 4.3, 11.2, 8.2, 10.…\n$ Adult_mortality             &lt;dbl&gt; 105.8240, 57.9025, 201.0765, 222.1965, 57.…\n$ Alcohol_consumption         &lt;dbl&gt; 1.32, 10.35, 1.57, 5.68, 2.89, 4.19, 8.06,…\n$ Hepatitis_B                 &lt;dbl&gt; 97, 97, 60, 93, 97, 88, 97, 88, 97, 97, 96…\n$ Measles                     &lt;dbl&gt; 65, 94, 35, 74, 89, 86, 97, 99, 87, 92, 70…\n$ BMI                         &lt;dbl&gt; 27.8, 26.0, 21.2, 25.3, 27.0, 26.4, 26.2, …\n$ Polio                       &lt;dbl&gt; 97, 97, 67, 92, 94, 89, 97, 99, 97, 96, 96…\n$ Diphtheria                  &lt;dbl&gt; 97, 97, 64, 93, 94, 89, 97, 99, 99, 90, 95…\n$ Incidents_HIV               &lt;dbl&gt; 0.08, 0.09, 0.13, 0.79, 0.08, 0.16, 0.08, …\n$ GDP_per_capita              &lt;dbl&gt; 11006, 25742, 1076, 4146, 33995, 9110, 931…\n$ Population_mln              &lt;dbl&gt; 78.53, 46.44, 1183.21, 0.75, 7.91, 4.35, 1…\n$ Thinness_ten_nineteen_years &lt;dbl&gt; 4.9, 0.6, 27.1, 5.7, 1.2, 2.0, 2.3, 2.3, 4…\n$ Thinness_five_nine_years    &lt;dbl&gt; 4.8, 0.5, 28.0, 5.5, 1.1, 1.9, 2.3, 2.3, 3…\n$ Schooling                   &lt;dbl&gt; 7.8, 9.7, 5.0, 7.9, 12.8, 7.9, 12.0, 10.2,…\n$ Economy_status_Developed    &lt;fct&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, …\n$ Economy_status_Developing   &lt;fct&gt; 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ Life_expectancy             &lt;dbl&gt; 76.5, 82.8, 65.4, 67.0, 81.7, 78.2, 71.2, …\n\n\nChange the data to a factor:\n\ndf$Country &lt;- factor(df$Country)\ndf$Region &lt;- factor(df$Region)\ndf$Region &lt;- factor(df$Region)\ndf$Year &lt;- factor(df$Year)\ndf$Economy_status_Developed &lt;- factor(df$Economy_status_Developed)\ndf$Economy_status_Developing &lt;- factor(df$Economy_status_Developing)\n\n\nset.seed(127)\n\n# Create the partition\npartition_index &lt;- createDataPartition(df$Economy_status_Developed, p = 0.7, list = FALSE)\ntrain_data_DT &lt;- df[partition_index,]\nvalidation_data_DT &lt;- df[-partition_index,]\n\n# Build the decision tree model\ntree_model &lt;- rpart(Economy_status_Developed ~ Life_expectancy, data = train_data_DT, method=\"class\")\n\n# Predict using the model\npredictions &lt;- predict(tree_model, validation_data_DT, type = \"class\")\n\n\n# Compute confusion matrix\nconfusion_Matrix_dt &lt;- confusionMatrix(predictions, validation_data_DT$Economy_status_Developed)\nprint(confusion_Matrix_dt)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 654  59\n         1  27 118\n                                         \n               Accuracy : 0.8998         \n                 95% CI : (0.8777, 0.919)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.672          \n                                         \n Mcnemar's Test P-Value : 0.0008293      \n                                         \n            Sensitivity : 0.9604         \n            Specificity : 0.6667         \n         Pos Pred Value : 0.9173         \n         Neg Pred Value : 0.8138         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7622         \n   Detection Prevalence : 0.8310         \n      Balanced Accuracy : 0.8135         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\n\nset.seed(431)\ntree_model2 &lt;- train(\n  Economy_status_Developed ~ Life_expectancy, \n  data = train_data_DT, method =\"rpart\",\n  trControl = trainControl(\"cv\", number = 10),\n  tuneLength = 10\n)\n\nplot(tree_model2)\n\n\n\n\n\n\n\ntree_model2$bestTune\n\n         cp\n9 0.4947791\n\n\n\n# Predict using new the model\npredictions &lt;- predict(tree_model2, validation_data_DT)\n\n# Ensure predictions are factors with the same levels as the actual data\npredictions &lt;- factor(predictions, levels = levels(validation_data_DT$Economy_status_Developed))\n\n# Compute confusion matrix\nconfusion_Matrix_dt &lt;- confusionMatrix(predictions, validation_data_DT$Economy_status_Developed)\nprint(confusion_Matrix_dt)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 654  59\n         1  27 118\n                                         \n               Accuracy : 0.8998         \n                 95% CI : (0.8777, 0.919)\n    No Information Rate : 0.7937         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.672          \n                                         \n Mcnemar's Test P-Value : 0.0008293      \n                                         \n            Sensitivity : 0.9604         \n            Specificity : 0.6667         \n         Pos Pred Value : 0.9173         \n         Neg Pred Value : 0.8138         \n             Prevalence : 0.7937         \n         Detection Rate : 0.7622         \n   Detection Prevalence : 0.8310         \n      Balanced Accuracy : 0.8135         \n                                         \n       'Positive' Class : 0              \n                                         \n\n\nSensitivity: 96.04%\nSpecificity: 66.67%\nOverall Accuracy: 89.98%\n\n# Visualize the first model\nprint(rpart.plot(tree_model))\n\n$obj\nn= 2006 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 2006 415 0 (0.79312064 0.20687936)  \n  2) Life_expectancy&lt; 77.45 1629 111 0 (0.93186004 0.06813996) *\n  3) Life_expectancy&gt;=77.45 377  73 1 (0.19363395 0.80636605) *\n\n$snipped.nodes\nNULL\n\n$xlim\n[1] -0.65  1.65\n\n$ylim\n[1] -0.6  1.6\n\n$x\n[1] 0.50000000 0.03831241 0.96168759\n\n$y\n[1] 0.91704414 0.05269236 0.05269236\n\n$branch.x\n  [,1]       [,2]      [,3]\nx  0.5 0.03831241 0.9616876\n    NA 0.03831241 0.9616876\n    NA 0.50000000 0.5000000\n\n$branch.y\n      [,1]      [,2]      [,3]\ny 1.112783 0.2484309 0.2484309\n        NA 0.7013644 0.7013644\n        NA 0.7013644 0.7013644\n\n$labs\n[1] \"0\\n0.21\\n100%\" \"0\\n0.07\\n81%\"  \"1\\n0.81\\n19%\" \n\n$cex\n[1] 1\n\n$boxes\n$boxes$x1\n[1]  0.39365767 -0.05058696  0.87278822\n\n$boxes$y1\n[1]  0.78292839 -0.08142339 -0.08142339\n\n$boxes$x2\n[1] 0.6063423 0.1272118 1.0505870\n\n$boxes$y2\n[1] 1.1127827 0.2484309 0.2484309\n\n\n$split.labs\n[1] \"\"\n\n$split.cex\n[1] 1 1 1\n\n$split.box\n$split.box$x1\n[1] 0.1591808        NA        NA\n\n$split.box$y1\n[1] 0.6397416        NA        NA\n\n$split.box$x2\n[1] 0.8408192        NA        NA\n\n$split.box$y2\n[1] 0.7629872        NA        NA\n\n# Visualize the tuned model\nprint(rpart.plot(tree_model2$finalModel))\n\n\n\n\n\n\n\n\n$obj\nn= 2006 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 2006 415 0 (0.79312064 0.20687936)  \n  2) Life_expectancy&lt; 77.45 1629 111 0 (0.93186004 0.06813996) *\n  3) Life_expectancy&gt;=77.45 377  73 1 (0.19363395 0.80636605) *\n\n$snipped.nodes\nNULL\n\n$xlim\n[1] -0.65  1.65\n\n$ylim\n[1] -0.6  1.6\n\n$x\n[1] 0.50000000 0.03831241 0.96168759\n\n$y\n[1] 0.91704414 0.05269236 0.05269236\n\n$branch.x\n  [,1]       [,2]      [,3]\nx  0.5 0.03831241 0.9616876\n    NA 0.03831241 0.9616876\n    NA 0.50000000 0.5000000\n\n$branch.y\n      [,1]      [,2]      [,3]\ny 1.112783 0.2484309 0.2484309\n        NA 0.7013644 0.7013644\n        NA 0.7013644 0.7013644\n\n$labs\n[1] \"0\\n0.21\\n100%\" \"0\\n0.07\\n81%\"  \"1\\n0.81\\n19%\" \n\n$cex\n[1] 1\n\n$boxes\n$boxes$x1\n[1]  0.39365767 -0.05058696  0.87278822\n\n$boxes$y1\n[1]  0.78292839 -0.08142339 -0.08142339\n\n$boxes$x2\n[1] 0.6063423 0.1272118 1.0505870\n\n$boxes$y2\n[1] 1.1127827 0.2484309 0.2484309\n\n\n$split.labs\n[1] \"\"\n\n$split.cex\n[1] 1 1 1\n\n$split.box\n$split.box$x1\n[1] 0.1591808        NA        NA\n\n$split.box$y1\n[1] 0.6397416        NA        NA\n\n$split.box$x2\n[1] 0.8408192        NA        NA\n\n$split.box$y2\n[1] 0.7629872        NA        NA\n\n\nPruning the tree has made no change in the model. Which, thinking about it makes sense. There isn’t anything to prune.\nMake the ROC Curve:\n\nprob_predictions &lt;- predict(tree_model2, validation_data_DT, type = \"prob\")\n\n\nroc_curve &lt;- roc(validation_data_DT$Economy_status_Developed, prob_predictions[,2])\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\nplot(roc_curve, main=\"ROC Curve\" , print.auc = TRUE, print.thres =\"best\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogistic\nTree\nXGBoost\n\n\n\n\nSpecificity\n83.05%\n66.67%\n67.59%\n\n\nSensitivity\n91.5%\n96.04%\n96.34%\n\n\nOverall\n89.76%\n89.98%\n90.90%\n\n\n\nFor Specificity (Minimize False Positives) the logistic model is the winner, For Sensitivity (Minimize False Negatives) both the decision tree and the XGBoost are comparable.\nHowever none of these models were made with either in mind, and these values could be fine tuned via the ROC Curves provided with each to specialize in either. However our data set doesn’t include any costs for False Positives or negatives, and as such it is difficult to determine a “Best.”\n\n\n\n\nAcross almost all of our plots, Africa is the lowest when it comes to life expectancy and the highest when it comes to mortality. Why is that? We will be looking at Africa in depth in order to possibly explain this.\n\nggplot(df, aes(x = Under_five_deaths, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Under Five Deaths\")\n\n\n\n\n\n\n\n\n\nggplot(df, aes(x = Adult_mortality, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Adult Mortality\")\n\n\n\n\n\n\n\n\nCombining under five deaths and Adult Mortality into one general Mortality variable, note that this will have a gap between 5 and 15, and anyone above 60 will be excluded in this metric.\n\ndf$Mortality &lt;- df$Under_five_deaths + df$Adult_mortality\n\nggplot(df, aes(x = Mortality, y = Region)) +\n  geom_point() +              \n  labs(title = \"Region vs Mortality\")\n\n\n\n\n\n\n\n\nNext we will break down Africa into the countries within it for further analysis, and examine each variable in our data set this way to look for possible explanations.\n\nfiltered_df &lt;- df %&gt;%\n  filter(Region == \"Africa\")\nggplot(filtered_df, aes(x = Mortality, y = Country)) +\n  geom_point() +              \n  labs(title = \"Region vs Mortality\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = BMI, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs BMI\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Alcohol_consumption, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Alcohol\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Hepatitis_B, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Hepatitis\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Measles, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Measles\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Polio, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Polio\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Diphtheria, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Diphtheria\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Incidents_HIV, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs HIV\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = GDP_per_capita, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs GDP\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Population_mln, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Population\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Thinness_ten_nineteen_years, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Thinness\")\n\n\n\n\n\n\n\nggplot(filtered_df, aes(x = Schooling, y = Country)) +\n  geom_point() +              \n  labs(title = \"African Country vs Schooling\")\n\n\n\n\n\n\n\n\nNot every African nation is low in life expectancy, Why is that? We will take out the two highest, and two lowest countries in Africa and examine them fully, taking the average of the variables within our data over the 15 years present within the data set.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountry\nMortality\nBMI\nAlcohol\nHepatitis B\nMeasles\nPolio\nDiphtheria\nHIV\n\n\n\n\nTunisia\n120\n25.69\n1.29\n96.75%\n97.81%\n97.69%\n97.69%\n0.03\n\n\nAlgeria\n150\n24.87\n0.40\n88.31%\n93.25%\n91.75%\n91.88%\n0.02\n\n\nZimbabwe\n600\n23.54\n2.90\n79.56%\n64.00%\n79.60%\n79.10%\n8.0\n\n\nLesotho\n690\n24.49\n2.62\n86.63%\n70.44%\n87.75%\n89.56%\n14.35\n\n\nUnited States\n116\n28.27\n8.60\n91.5%\n86.00%\n92.25%\n95.13%\n0.13\n\n\n\n\n\n\nCountry\nGDP\nPopulation\n\n\n\n\nTunisia\n3585.63\n10.39\n\n\nAlgeria\n3745.13\n34.82\n\n\nZimbabwe\n1290.6\n12.5\n\n\nLesotho\n926.69\n2.01\n\n\nUnited States\n52662.94\n302.10\n\n\n\n\nfiltered_us &lt;- df %&gt;%\n  filter(Country == \"United States\")\nggplot(filtered_us, aes(x = Mortality, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Mortality\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = BMI, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs BMI\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Alcohol_consumption, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Alcohol\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Hepatitis_B, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Hepatitis\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Measles, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Measles\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Polio, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Polio\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Diphtheria, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Diphtheria\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Incidents_HIV, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs HIV\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = GDP_per_capita, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs GDP\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Population_mln, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Population\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Thinness_ten_nineteen_years, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Thinness\")\n\n\n\n\n\n\n\nggplot(filtered_us, aes(x = Schooling, y = Country)) +\n  geom_point() +              \n  labs(title = \"United States vs Schooling\")\n\n\n\n\n\n\n\n\n\n\nTunisia and Algeria have lower mortality rates compared to Zimbabwe and Lesotho due to higher vaccination rates, higher GDP, and lower incidents of HIV."
  }
]