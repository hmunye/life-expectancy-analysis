---
title: "Report Draft"
format: html
toc: true
toc-depth: 4
editor: visual
author: Group 5
Group Leader: Mackenzie Hiddie
Group Members: Adam Thomas, Yusuf Unsal, Austin Perkins, Justyn Kovalsk, Huseen Munye
---

# Table of Contents

-   \[**1** **Introduction**\]

    -   [1.1 Data Understanding]

    -   [1.2 Data Source]

    -   [1.3 Initial questions]

-   \[**2 Data Loading**\]

    -   [2.1 Importing Libraries]

    -   [2.2 Loading and Understanding the Data]

    -   [2.3 Categorizing the Datasets Attributes]

-   \[**3 Data Cleaning**\]

    -   [3.1 Handling Null Values]

        -   [3.1.1 Treating Null Values]

        -   [3.1.2 Decision for Treating Null Values]

        -   [3.1.3 Approach]

    -   [3.2 Handling Outliers]

        -   [3.2.1 Treating Outliers]

        -   [3.2.2 Decision for Treating Outliers]

        -   [3.2.3 Approach](#approach-1)

-   \[**4 Data Analysis**\]

    -   [4.1 Plots]

    -   [4.2 Variance Analysis]

    -   [4.3 Covariance Analysis]

-   \[**5 Models**\]

    -   [5.1.1 Multiple Regression of Life Expectancy]

        -   [5.1.1.1 Splitting the Data]

        -   [5.1.1.2 Making the First Model]

        -   [5.1.1.3 Pruning the Model]

            -   \[5.1.1.3.1 VIF Test\]

            -   \[5.1.1.3.2 Removing variables one at a time\]

        -   \[5.1.4 Testing the Data\]

    -   [5.1.2 Neural Network of Life Expectancy]

        -   \[5.2.1 Splitting the Dataset\]

    -   5.3 ...

## 1 Introduction

This Document is prepared by Group 5 under the supervision of Mackenzie Hiddie.

The group members contributing to this document include:

-   Adam Thomas

-   Huseen Munye

-   Yusuf Unsal

-   Austin Perkins

-   Justyn Kovalski

This dataset includes comprehensive information on 179 countries spanning from 2000 to 2015, covering aspects like life expectancy, health indicators, immunization rates, and economic and demographic data. Originally sourced from Kaggle, it underwent updates to rectify inaccuracies and missing values. Population, GDP, and life expectancy figures were updated from World Bank data, while data on vaccinations, alcohol consumption, BMI, HIV rates, mortality, and other health metrics were sourced from the World Health Organization. Additional information on schooling was gathered from the University of Oxford's Our World in Data project. Missing values were addressed using strategies such as filling with the closest three-year average or the regional average. Countries with significant missing data were excluded, and the remaining countries were categorized based on their Gross National Income per capita into developed vs developing economies, following guidelines from organizations like the World Trade Organization and the UN.

#### 1.1 Data Understanding

Columns in the dataset:

-   **Country:** List of the 179 countries

-   **Region:** 179 countries are distributed in 9 regions. E.g. Africa, Asia, Oceania, European Union, Rest of Europe and etc.

-   **Year:** Years observed from 2000 to 2015

-   **Infant_deaths:** Represents infant deaths per 1000 population

-   **Under_five_deaths:** Represents deaths of children under five years old per 1000 population

-   **Adult_mortality:** Represents deaths of adults per 1000 population

-   **Alcohol_consumption:** Represents alcohol consumption that is recorded in liters of pure alcohol per capita with 15+ years old

-   **Hepatitis_B:** Represents % of coverage of Hepatitis B (HepB3) immunization among 1-year-olds

-   **Measles:** Represents % of coverage of Measles containing vaccine first dose (MCV1) immunization among 1-year-olds

-   **BMI:** BMI is a measure of nutritional status in adults. It is defined as a person's weight in kilograms divided by the square of that person's height in meters (kg/m2)

-   **Polio:** Represents % of coverage of Polio (Pol3) immunization among 1-year-olds

-   **Diphtheria:** Represents % of coverage of Diphtheria tetanus toxoid and pertussis (DTP3) immunization among 1-year-olds

-   **Incidents_HIV:** Incidents of HIV per 1000 population aged 15-49

-   **GDP_per_capita:** GDP per capita in current USD

-   **Population_mln:** Total population in millions

-   **Thinness_ten_nineteen_years:** Prevalence of thinness among adolescents aged 10-19 years. BMI \< -2 standard deviations below the median

-   **Thinness_five_nine_years:** Prevalence of thinness among children aged 5-9 years. BMI \< -2 standard deviations below the median

-   **Schooling:** Average years that people aged 25+ spent in formal education

-   **Economy_status_Developed:** Developed country

-   **Economy_status_Developing:** Developing county

-   **Life_expectancy:** Average life expectancy of both genders in different years from 2010 to 2015

#### 1.2 Data Source

Original dataset can be found here: <https://www.kaggle.com/datasets/lashagoch/life-expectancy-who-updated>

For ease of use we have re-uploaded the dataset to this Github repository created for this group project:

<https://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv>

### 1.3 Initial Questions

-   What are the predicting variables affecting life expectancy? - [5.1.5 Conclusion of which variables most influence Life Expectancy.]

-   \- How does Infant and Adult mortality rates affect life expectancy?

-   \- Does Life Expectancy have a positive or negative correlation with

    -   \- BMI,

    -   \- disease,

    -   \- drinking alcohol,

    -   \- immunizations,

    -   etc.? -

-   What is the impact of schooling on the lifespan of humans?

    -   \- Can we predict lifespan based off of schooling?

-   \- Do densely populated countries tend to have lower life expectancy?

-   \- What is the impact of Immunization coverage on life Expectancy?

-   \- Will there be an increase in life expectancy in the next 10 years?

-   \- Will the rate of infant deaths go down over the next 5 years?

-   \- Is there a correlation between economic status and Life expectancy?

    -   Can we predict countries economic status based off Life expectancy?

-   \- Do certain regions have higher vaccination rates? SVN DECESION TREE/FOREST XG BOOST)

## 2 Data Loading

#### 2.1 Importing Libraries

Install the packages if not already installed on your machine

```{r}
install.packages("tidyverse")
install.packages("car")
install.packages("caret")
install.packages("neuralnet")
install.packages("e1071")
install.packages("randomForest")
install.packages("caTools")
install.packages("clusterGeneration")
```

```{r}
install.packages("doParallel")
```

```{r}
#import the needed libraries 
library(tidyverse)
library(caret)
library(car)
library(neuralnet)
library(e1071)
library(randomForest)
library(caTools)
library(parallel)
library(doParallel)

```

#### 2.2 Loading and Understanding the Data

Load the dataset from the group GitHub repository:

```{r}

df <- read_csv("https://raw.githubusercontent.com/hmunye/life-expectancy-analysis/main/data/Life-Expectancy-Data-Updated.csv", show_col_types = FALSE)

```

Display the first 5 rows of the dataset:

```{r}
head(df, 5)
```

The shape of the data frame

```{r}
# Get the number of rows
num_rows <- nrow(df)

# Get the number of columns
num_cols <- ncol(df)

# Print the results
cat("Number of rows:", num_rows, "\n")
cat("Number of columns:", num_cols, "\n")
```

Summary of the Data Frame:

```{r}
summary(df)

```

#### 2.3 Categorizing the Datasets Attributes

-   Nominal (Factors)

    -   Country

    -   Region

    -   Economy_status_Developed

    -   Economy_status_Developing

-   Numerical (Nominal):

    -   Year

    -   Infant_deaths

    -   Under_five_deaths

-   Numerical (Interval)

    -   BMI

-   Numerical (Ratio)

    -   Life_expectancy
    -   Adult_mortality
    -   Hepatitis_B
    -   Measles
    -   Polio
    -   Incidents_HIV
    -   GDP_per_capita
    -   Population_mln
    -   Thinness_five_nine_years
    -   Thinness_ten_nineteen_years
    -   Schooling

-   Put Reasoning here (Why each is what it is)

    -   **Someone please double check me.**

------------------------------------------------------------------------

Creating a list of all nominal/factors

Regions

```{r}
df |>
distinct(Region)
```

Country

```{r}
df |>
  distinct(Country)
```

Year

```{r}
df |>
distinct(Year)
```

Economic Status:

```{r}
df |>
distinct(Economy_status_Developed)
df |>
distinct(Economy_status_Developing)
```

For the purpose of analysis in R, it is a good practice to change the categorical variables into factors

```{r}
df$Country <- factor(df$Country)
df$Region <- factor(df$Region)
df$Region <- factor(df$Region)
df$Year <- factor(df$Year)
df$Economy_status_Developed <- factor(df$Economy_status_Developed)
df$Economy_status_Developing <- factor(df$Economy_status_Developing)

glimpse(df)
```

## 3 Data Cleaning

### 3.1 Handling Null Values

The original data set had several hundred missing values. While the data is publicly available as it is all published by the various nations of the world and the World Heath Organization, it is not feasible with our teams man hours to manually enter each missing value.

**Number of Missing Values:**

Life_expectancy: 10

Adult_mortality: 10

Infant_deaths: 0

Hepatitis_B: 553

Measles: 0

BMI: 34

Under_five_deaths: 0

Polio: 19

Incidents_HIV: 0

GDP_per_capita: 448

Population_mln: 652

Thinness_five_nine_years: 34

Schooling: 163

#### 3.1.1 Treating Null Values

1\) Delete the row: Possible for datasets with small number of NA's, sadly that is not our dataset.

#### 3.1.2 Decision for Treating Null Values

When doing research on how to handle the missing values, Our group leader found a data set that has already "fixed" the missing values. This new data set first grouped each country into regions, from there the average value of each column was found by region. This is a very clean way to ensure that different regions do not effect each other, while still filling in the missing values.

#### 3.1.3 Approach

The group moved forward with the "Fixed" dataset.

### 3.2 Handling Outliers

Function to Find Number of Outliers and Plot:

```{r}
num_outliers <- function(data_set, column) {
  q1 <- quantile(column, 0.25)
  q3 <- quantile(column, 0.75)
  iqr <- q3 -q1
  
  upper_bound <- q3 + 1.5 * iqr
  lower_bound <- q1 - 1.5 * iqr
  
  outliers <- column[column < lower_bound | column > upper_bound]
  
  plot <- ggplot(data_set) + geom_boxplot(aes(x = "", y = column))
  
  print(plot)
  
  return(length(outliers))
}
```

**Number of Outliers:**

Life_expectancy:

```{r}
num_outliers(df, df$Life_expectancy)
```

Adult_mortality:

```{r}
num_outliers(df, df$Adult_mortality)
```

Alcohol_consumption:

```{r}
num_outliers(df, df$Alcohol_consumption)
```

Hepatitis_B:

```{r}
num_outliers(df, df$Hepatitis_B)
```

Measles:

```{r}
num_outliers(df, df$Measles)
```

Polio:

```{r}
num_outliers(df, df$Polio)
```

Diphtheria:

```{r}
num_outliers(df, df$Diphtheria)
```

Incidents_HIV:

```{r}
num_outliers(df, df$Incidents_HIV)
```

GDP_per_capita:

```{r}
num_outliers(df, df$GDP_per_capita)
```

Population_mln:

```{r}
num_outliers(df, df$Population_mln)
```

Thinness_five_nine_years:

```{r}
num_outliers(df, df$Thinness_five_nine_years)
```

Thinness_ten_nineteen_years:

```{r}
num_outliers(df, df$Thinness_ten_nineteen_years)
```

Schooling:

```{r}
num_outliers(df, df$Schooling)
```

BMI:

```{r}
num_outliers(df, df$BMI)
```

Infant_deaths:

```{r}
num_outliers(df, df$Infant_deaths)
```

Under_five_deaths:

```{r}
num_outliers(df, df$Under_five_deaths)
```

#### 3.2.1 Treating Outliers

**1) Trimming**: Remove outliers from the dataset. This approach can be appropriate if the outliers are deemed to be data entry errors or highly improbable values. Due to the high number of outliers in the dataset, this is not a viable option.

**2) Winsorization**: Replace outliers with values at a specified percentile (e.g., replacing values above the 95th percentile with the 95th percentile value, replacing values below the 5th percentile with the 5th percentile value).

#### 3.2.2 Decision for Treating Outliers

After doing research on how to identify and treat outliers in R,

#### 3.2.3 Approach {#approach-1}

## 4 Data Analysis

#### 4.1 Plots

```{r}
covariance_plot <- function(y_val, x_val, data_frame, std_data_frame) {
  ggplot(data = data_frame, aes_string(y = y_val, x = x_val, color = "Region")) +
    geom_point() +
    geom_text(aes(label = paste("Covariance:", round(cov(std_data_frame[[y_val]], std_data_frame[[x_val]]), 2))),
            x = Inf, y = Inf, hjust = 1, vjust = 1, color = "black")
}
```

#### 4.2 Variance Analysis

Life Expectancy

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Life_expectancy))

df |>
ggplot() +
    geom_histogram(aes(x=df$Life_expectancy), bins = 30)

summary(df$Life_expectancy)
```

------------------------------------------------------------------------

Inference:

Life Expectancy represents the average years lived in the given country

Life Expectancy is not evenly distributed,

Life Expectancy peaks \~71

The minimum is 39.40, the max is 83.8

Conclusion:

------------------------------------------------------------------------

Infant Deaths

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Infant_deaths))

df |>
ggplot() +
    geom_histogram(aes(x=df$Infant_deaths), bins = 30)

summary(df$Infant_deaths)
```

Inference:

It represents the Infant Deaths in the given country

Life Expectancy is not evenly distributed,

Life Expectancy peaks \~20

The minimum is 1.80, the max is 138.10

Conclusion:

------------------------------------------------------------------------

Under_five_deaths

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Under_five_deaths))

df |>
ggplot() +
    geom_histogram(aes(x=df$Under_five_deaths), bins = 30)

summary(df$Under_five_deaths)
```

Inference:

Life Expectancy represents the average deaths under five (age) in the given country

Life Expectancy is not evenly distributed,

Life Expectancy peaks \~23

The minimum is 2.30, the max is 224.90

Conclusion:

------------------------------------------------------------------------

Adult_mortality

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Adult_mortality))

df |>
ggplot() +
    geom_histogram(aes(x=df$Adult_mortality), bins = 30)

summary(df$Adult_mortality)
```

Inference:

Adult mortality represents the adult deaths in the given country

Life Expectancy is not evenly distributed,

Adult mortality peaks \~164

The minimum is 49.38, the max is 719.36

Conclusion:

------------------------------------------------------------------------

Alcohol Consumption

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Alcohol_consumption))

df |>
ggplot() +
    geom_histogram(aes(x=df$Alcohol_consumption), bins = 30)

summary(df$Alcohol_consumption)
```

Inference:

Alcohol consumption is recorded per capita (15+) consumption (in litres of pure alcohol)

Min is 0 litres

Max is 17.87

Alcohol consumption is not evenly distrusted.

Alchohol Consumption peaks at 0

Conclusion:

------------------------------------------------------------------------

\$Hepatitis_B

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Hepatitis_B))

df |>
ggplot() +
    geom_histogram(aes(x=df$Hepatitis_B), bins = 30)

summary(df$Hepatitis_B)
```

Hepatitis Inferences:

Hepatitis B represents the immunization coverage among 1-year olds(%)

It is not evenly distrusted

min: 12

Max 99.9

It peaks around 90%

Why is there a spike around 85?

------------------------------------------------------------------------

Measles

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Measles))

df |>
ggplot() +
    geom_histogram(aes(x=df$Measles), bins = 30)

summary(df$Measles)

```

Measles Influences:

Measles represents the percentage of 1 year olds who have been immunized

It is not evenly distrusted

Min 10

Max 99

It peaks around 62%

Why is there a spike around 62%?

------------------------------------------------------------------------

BMI

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$BMI))

df |>
ggplot() +
    geom_histogram(aes(x=df$BMI), bins = 30)

summary(df$Polio)
```

BMI Inferences:

BMI represents the nutritional status of the adult population

It is not evenly distributed

Min 8

Max 99

Why is there two groups?

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Polio))

df |>
ggplot() +
    geom_histogram(aes(x=df$Polio), bins = 30)

summary(df$Polio)
```

Diphtheria

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Diphtheria))

df |>
ggplot() +
    geom_histogram(aes(x=df$Diphtheria), bins = 30)

summary(df$Diphtheria)
```

HIV

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Incidents_HIV))

df |>
ggplot() +
    geom_histogram(aes(x=df$Incidents_HIV), bins = 30)

summary(df$Incidents_HIV)
```

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$GDP_per_capita))

df |>
ggplot() +
    geom_histogram(aes(x=df$GDP_per_capita), bins = 30)

summary(df$GDP_per_capita)
```

Population

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Population_mln))

df |>
ggplot() +
    geom_histogram(aes(x=df$Population_mln), bins = 100) 

#re-do of the graph with xlim to exclude the outliers 
df |>
ggplot() +
    geom_histogram(aes(x=df$Population_mln), bins = 30) +
  xlim(0,350)

summary(df$Population_mln)
```

Thinness 10 to 19

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Thinness_ten_nineteen_years))

df |>
ggplot() +
    geom_histogram(aes(x=df$Thinness_ten_nineteen_years), bins = 30)

summary(df$Thinness_ten_nineteen_years)
```

Why are there two groups?

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Thinness_five_nine_years))

df |>
ggplot() +
    geom_histogram(aes(x=df$Thinness_five_nine_years), bins = 30)

summary(df$Thinness_five_nine_years)
```

Why are there two groups?

```{r}
df |>
ggplot() +
    geom_boxplot(aes(x=0, y=df$Schooling))

df |>
ggplot() +
    geom_histogram(aes(x=df$Schooling), bins = 30)

summary(df$Schooling)
```

#### 4.3 Covariance Analysis

For Covariance Analysis we need a subset of the data that only has the numeric variables

Standardize the data

```{r}
sdf <- df |>
  select(-Year, everything()) |>
  mutate(across(where(is.numeric), scale))
```

```{r}
#get only numeric data
numeric_data <- select_if(sdf, is.numeric)

#remove categorical values that are numeric
numeric_data <- numeric_data |>
   select(-Year, -Economy_status_Developed, -Economy_status_Developing)

cov_matrix <- cov(numeric_data)

print(cov_matrix)
```

Life Expectancy:

```{r}

covariance_plot("Life_expectancy", "Adult_mortality", df, sdf)

covariance_plot("Life_expectancy", "Infant_deaths", df, sdf)

covariance_plot("Life_expectancy", "Under_five_deaths", df, sdf)

covariance_plot("Life_expectancy", "Alcohol_consumption", df, sdf)

covariance_plot("Life_expectancy", "Hepatitis_B", df, sdf)

covariance_plot("Life_expectancy", "Measles", df, sdf)

covariance_plot("Life_expectancy", "BMI", df, sdf)

covariance_plot("Life_expectancy", "Polio", df, sdf)

covariance_plot("Life_expectancy", "Diphtheria", df, sdf)

covariance_plot("Life_expectancy", "Incidents_HIV", df, sdf)

covariance_plot("Life_expectancy", "GDP_per_capita", df, sdf)

covariance_plot("Life_expectancy", "Population_mln", df, sdf)

covariance_plot("Life_expectancy", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Life_expectancy", "Thinness_five_nine_years", df, sdf)

covariance_plot("Life_expectancy", "Schooling", df, sdf)

```

Inference:

Strong negative: adult mortality, infant deaths, under five deaths

Negative: HIV, thinness

Slight positive: Alcohol consumption, Hepatitas B, measles

Positive: BMI, Polio, Diphteria, Schooling

------------------------------------------------------------------------

Alcohol Consumption:

```{r}

covariance_plot("Alcohol_consumption", "Adult_mortality", df, sdf)

covariance_plot("Alcohol_consumption", "Infant_deaths", df, sdf)

covariance_plot("Alcohol_consumption", "Under_five_deaths", df, sdf)

covariance_plot("Alcohol_consumption", "Life_expectancy", df, sdf)

covariance_plot("Alcohol_consumption", "Hepatitis_B", df, sdf)

covariance_plot("Alcohol_consumption", "Measles", df, sdf)

covariance_plot("Alcohol_consumption", "BMI", df, sdf)

covariance_plot("Alcohol_consumption", "Polio", df, sdf)

covariance_plot("Alcohol_consumption", "Diphtheria", df, sdf)

covariance_plot("Alcohol_consumption", "Incidents_HIV", df, sdf)

covariance_plot("Alcohol_consumption", "GDP_per_capita", df, sdf)

covariance_plot("Alcohol_consumption", "Population_mln", df, sdf)

covariance_plot("Alcohol_consumption", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Alcohol_consumption", "Thinness_five_nine_years", df, sdf)

covariance_plot("Alcohol_consumption", "Schooling", df, sdf)

```

Inferences:

There is a positive relationship between Schooling and alcohol consumption,

Some positive relationship: GDP

Some negative relationship: Infant deaths

Strong negative relationship: Population

Other variables have some covariance, but it does not seem to be strongly related.

------------------------------------------------------------------------

GDP:

```{r}

covariance_plot("GDP_per_capita", "Adult_mortality", df, sdf)

covariance_plot("GDP_per_capita", "Infant_deaths", df, sdf)

covariance_plot("GDP_per_capita", "Under_five_deaths", df, sdf)

covariance_plot("GDP_per_capita", "Life_expectancy", df, sdf)

covariance_plot("GDP_per_capita", "Hepatitis_B", df, sdf)

covariance_plot("GDP_per_capita", "Measles", df, sdf)

covariance_plot("GDP_per_capita", "BMI", df, sdf)

covariance_plot("GDP_per_capita", "Polio", df, sdf)

covariance_plot("GDP_per_capita", "Diphtheria", df, sdf)

covariance_plot("GDP_per_capita", "Incidents_HIV", df, sdf)

covariance_plot("GDP_per_capita", "Alcohol_consumption", df, sdf)

covariance_plot("GDP_per_capita", "Population_mln", df, sdf)

covariance_plot("GDP_per_capita", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("GDP_per_capita", "Thinness_five_nine_years", df, sdf)

covariance_plot("GDP_per_capita", "Schooling", df, sdf)

```

Inference:

Some positive relationship: Life expectancy, alcohol consumption, schooling

Some negative relationship: Infant deaths, under five deaths, adult mortality

------------------------------------------------------------------------

Adult Mortality:

```{r}

covariance_plot("Adult_mortality", "GDP_per_capita", df, sdf)

covariance_plot("Adult_mortality", "Infant_deaths", df, sdf)

covariance_plot("Adult_mortality", "Under_five_deaths", df, sdf)

covariance_plot("Adult_mortality", "Life_expectancy", df, sdf)

covariance_plot("Adult_mortality", "Hepatitis_B", df, sdf)

covariance_plot("Adult_mortality", "Measles", df, sdf)

covariance_plot("Adult_mortality", "BMI", df, sdf)

covariance_plot("Adult_mortality", "Polio", df, sdf)

covariance_plot("Adult_mortality", "Diphtheria", df, sdf)

covariance_plot("Adult_mortality", "Incidents_HIV", df, sdf)

covariance_plot("Adult_mortality", "Alcohol_consumption", df, sdf)

covariance_plot("Adult_mortality", "Population_mln", df, sdf)

covariance_plot("Adult_mortality", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Adult_mortality", "Thinness_five_nine_years", df, sdf)

covariance_plot("Adult_mortality", "Schooling", df, sdf)

```

Inferences:

Strong negative: Life expectancy

Negative: BMI, polio Diphtheria, schooling

Positive: HIV

Strong positive: infant deaths, under five deaths

------------------------------------------------------------------------

Hepatitis B:

```{r}

covariance_plot("Hepatitis_B", "GDP_per_capita", df, sdf)

covariance_plot("Hepatitis_B", "Infant_deaths", df, sdf)

covariance_plot("Hepatitis_B", "Under_five_deaths", df, sdf)

covariance_plot("Hepatitis_B", "Life_expectancy", df, sdf)

covariance_plot("Hepatitis_B", "Adult_mortality", df, sdf)

covariance_plot("Hepatitis_B", "Measles", df, sdf)

covariance_plot("Hepatitis_B", "BMI", df, sdf)

covariance_plot("Hepatitis_B", "Polio", df, sdf)

covariance_plot("Hepatitis_B", "Diphtheria", df, sdf)

covariance_plot("Hepatitis_B", "Incidents_HIV", df, sdf)

covariance_plot("Hepatitis_B", "Alcohol_consumption", df, sdf)

covariance_plot("Hepatitis_B", "Population_mln", df, sdf)

covariance_plot("Hepatitis_B", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Hepatitis_B", "Thinness_five_nine_years", df, sdf)

covariance_plot("Hepatitis_B", "Schooling", df, sdf)

```

Hepatitis B Inferences:

Positive: Life Expectancy, Alcohol Consumption, Polio, Measles, Diphtheria

Negative: Infant Deaths, Under Five Deaths, Adult mortality

------------------------------------------------------------------------

Measles:

```{r}

covariance_plot("Measles", "GDP_per_capita", df, sdf)

covariance_plot("Measles", "Infant_deaths", df, sdf)

covariance_plot("Measles", "Under_five_deaths", df, sdf)

covariance_plot("Measles", "Life_expectancy", df, sdf)

covariance_plot("Measles", "Adult_mortality", df, sdf)

covariance_plot("Measles", "Hepatitis_B", df, sdf)

covariance_plot("Measles", "BMI", df, sdf)

covariance_plot("Measles", "Polio", df, sdf)

covariance_plot("Measles", "Diphtheria", df, sdf)

covariance_plot("Measles", "Incidents_HIV", df, sdf)

covariance_plot("Measles", "Alcohol_consumption", df, sdf)

covariance_plot("Measles", "Population_mln", df, sdf)

covariance_plot("Measles", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Measles", "Thinness_five_nine_years", df, sdf)

covariance_plot("Measles", "Schooling", df, sdf)

```

Measles Inferences:

Positive: Life Expectancy, Schooling, Hepatitis B, BMI, polio, Diphtheria

Negative: Infant Deaths, Under Five Deaths, adult mortality

------------------------------------------------------------------------

BMI:

```{r}

covariance_plot("BMI", "GDP_per_capita", df, sdf)

covariance_plot("BMI", "Infant_deaths", df, sdf)

covariance_plot("BMI", "Under_five_deaths", df, sdf)

covariance_plot("BMI", "Life_expectancy", df, sdf)

covariance_plot("BMI", "Adult_mortality", df, sdf)

covariance_plot("BMI", "Hepatitis_B", df, sdf)

covariance_plot("BMI", "Measles", df, sdf)

covariance_plot("BMI", "Polio", df, sdf)

covariance_plot("BMI", "Diphtheria", df, sdf)

covariance_plot("BMI", "Incidents_HIV", df, sdf)

covariance_plot("BMI", "Alcohol_consumption", df, sdf)

covariance_plot("BMI", "Population_mln", df, sdf)

covariance_plot("BMI", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("BMI", "Thinness_five_nine_years", df, sdf)

covariance_plot("BMI", "Schooling", df, sdf)

```

BMI Inferences:

Positive: Life Expectancy, Diphtheria, GDP, measles, polio, schooling

Negative: Thinness, infant deaths, under five deaths, adult mortality

------------------------------------------------------------------------

Polio:

```{r}

covariance_plot("Polio", "GDP_per_capita", df, sdf)

covariance_plot("Polio", "Infant_deaths", df, sdf)

covariance_plot("Polio", "Under_five_deaths", df, sdf)

covariance_plot("Polio", "Life_expectancy", df, sdf)

covariance_plot("Polio", "Adult_mortality", df, sdf)

covariance_plot("Polio", "Hepatitis_B", df, sdf)

covariance_plot("Polio", "Measles", df, sdf)

covariance_plot("Polio", "BMI", df, sdf)

covariance_plot("Polio", "Diphtheria", df, sdf)

covariance_plot("Polio", "Incidents_HIV", df, sdf)

covariance_plot("Polio", "Alcohol_consumption", df, sdf)

covariance_plot("Polio", "Population_mln", df, sdf)

covariance_plot("Polio", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Polio", "Thinness_five_nine_years", df, sdf)

covariance_plot("Polio", "Schooling", df, sdf)

```

Polio Inferences:

Strong Positive, Hepatitis B, Diphtheria

Positive: Polio, BMI, Schooling, life expectancy, measles

Negative: Thinness, adult mortality

Strong Negative: Infant Deaths, Under Five deaths

------------------------------------------------------------------------

Diphtheria:

```{r}

covariance_plot("Diphtheria", "GDP_per_capita", df, sdf)

covariance_plot("Diphtheria", "Infant_deaths", df, sdf)

covariance_plot("Diphtheria", "Under_five_deaths", df, sdf)

covariance_plot("Diphtheria", "Life_expectancy", df, sdf)

covariance_plot("Diphtheria", "Adult_mortality", df, sdf)

covariance_plot("Diphtheria", "Hepatitis_B", df, sdf)

covariance_plot("Diphtheria", "Measles", df, sdf)

covariance_plot("Diphtheria", "BMI", df, sdf)

covariance_plot("Diphtheria", "Polio", df, sdf)

covariance_plot("Diphtheria", "Incidents_HIV", df, sdf)

covariance_plot("Diphtheria", "Alcohol_consumption", df, sdf)

covariance_plot("Diphtheria", "Population_mln", df, sdf)

covariance_plot("Diphtheria", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Diphtheria", "Thinness_five_nine_years", df, sdf)

covariance_plot("Diphtheria", "Schooling", df, sdf)

```

Diphtheria Inferences:

Strong Positive: Hepatitis B, Polio

Positive: Life Expectancy, Measles, BMI, Schooling

Negative: Thinness, adult mortality

Strong Negative: Infant Deaths, Under Five Deaths

------------------------------------------------------------------------

HIV:

```{r}

covariance_plot("Incidents_HIV", "GDP_per_capita", df, sdf)

covariance_plot("Incidents_HIV", "Infant_deaths", df, sdf)

covariance_plot("Incidents_HIV", "Under_five_deaths", df, sdf)

covariance_plot("Incidents_HIV", "Life_expectancy", df, sdf)

covariance_plot("Incidents_HIV", "Adult_mortality", df, sdf)

covariance_plot("Incidents_HIV", "Hepatitis_B", df, sdf)

covariance_plot("Incidents_HIV", "Measles", df, sdf)

covariance_plot("Incidents_HIV", "BMI", df, sdf)

covariance_plot("Incidents_HIV", "Polio", df, sdf)

covariance_plot("Incidents_HIV", "Diphtheria", df, sdf)

covariance_plot("Incidents_HIV", "Alcohol_consumption", df, sdf)

covariance_plot("Incidents_HIV", "Population_mln", df, sdf)

covariance_plot("Incidents_HIV", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Incidents_HIV", "Thinness_five_nine_years", df, sdf)

covariance_plot("Incidents_HIV", "Schooling", df, sdf)

```

HIV Inferences:

Positive: Adult mortality

Negative: life expectancy

Conclusion: We may want to separate out Africa for this one, as it seems to be skewing the data.

------------------------------------------------------------------------

Population:

```{r}

covariance_plot("Population_mln", "GDP_per_capita", df, sdf)

covariance_plot("Population_mln", "Infant_deaths", df, sdf)

covariance_plot("Population_mln", "Under_five_deaths", df, sdf)

covariance_plot("Population_mln", "Life_expectancy", df, sdf)

covariance_plot("Population_mln", "Adult_mortality", df, sdf)

covariance_plot("Population_mln", "Hepatitis_B", df, sdf)

covariance_plot("Population_mln", "Measles", df, sdf)

covariance_plot("Population_mln", "BMI", df, sdf)

covariance_plot("Population_mln", "Polio", df, sdf)

covariance_plot("Population_mln", "Diphtheria", df, sdf)

covariance_plot("Population_mln", "Alcohol_consumption", df, sdf)

covariance_plot("Population_mln", "Incidents_HIV", df, sdf)

covariance_plot("Population_mln", "Thinness_ten_nineteen_years", df, sdf)

covariance_plot("Population_mln", "Thinness_five_nine_years", df, sdf)

covariance_plot("Population_mln", "Schooling", df, sdf)

```

Population Inferences:

Conclusion: We may want to do this again without China and India, as they seems to be skewing the data

------------------------------------------------------------------------

Thinness:

```{r}

covariance_plot("Thinness_ten_nineteen_years", "GDP_per_capita", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Infant_deaths", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Under_five_deaths", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Life_expectancy", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Adult_mortality", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Hepatitis_B", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Measles", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "BMI", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Polio", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Diphtheria", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Alcohol_consumption", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Incidents_HIV", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Population_mln", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Thinness_five_nine_years", df, sdf)

covariance_plot("Thinness_ten_nineteen_years", "Schooling", df, sdf)

```

Thinness:

Strong positive: Thinness

Positive: Infant deaths, under five deaths, adult mortality

Negative: Life expectancy, alcohol consumption, BMI, schooling

No surprise that the two thinness are basically one to one.

------------------------------------------------------------------------

Schooling:

```{r}

covariance_plot("Schooling", "GDP_per_capita", df, sdf)

covariance_plot("Schooling", "Infant_deaths", df, sdf)

covariance_plot("Schooling", "Under_five_deaths", df, sdf)

covariance_plot("Schooling", "Life_expectancy", df, sdf)

covariance_plot("Schooling", "Adult_mortality", df, sdf)

covariance_plot("Schooling", "Hepatitis_B", df, sdf)

covariance_plot("Schooling", "Measles", df, sdf)

covariance_plot("Schooling", "BMI", df, sdf)

covariance_plot("Schooling", "Polio", df, sdf)

covariance_plot("Schooling", "Diphtheria", df, sdf)

covariance_plot("Schooling", "Alcohol_consumption", df, sdf)

covariance_plot("Schooling", "Incidents_HIV", df, sdf)

covariance_plot("Schooling", "Population_mln", df, sdf)

covariance_plot("Schooling", "Thinness_five_nine_years", df, sdf)

covariance_plot("Schooling", "Thinness_ten_nineteen_years", df, sdf)

```

Inferences:

Positive: Life expectancy, alcohol consumption, measles, BMI, polio, diphtheria, GDP

Negative: Infant deaths, under five deaths, adult mortality, thinness

------------------------------------------------------------------------

## 5 Models {data-link="1 Introduction"}

#### 5.1 What variables most influence Life Expectancy? {data-link="5.1 Multiple Regression of Life Expectancy"}

#### 5.1.1 Multiple Regression of Life Expectancy

For testing purposes, we must separate out a portion of the data now. We will be using a 80/20 split. 80% Training, 20% testing.

##### 5.1.1.1 Splitting the Data

```{r}

#seed to make this reproducible 
set.seed(333)

#split the data
training.samples <- sdf$Life_expectancy |> createDataPartition(p = 0.8, list = FALSE)

train.data <- sdf[training.samples, ]
test.data <- sdf[-training.samples, ]

```

##### 5.1.1.2 Making the First Model

We are leaving out one of the two economy status variables as they are two halves of a binary variable.

We must also pick between Country and Region, as having both in the model seems to create singularities. For readability sake we will be keeping Region

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR <- lm(Life_expectancy ~ .  -Economy_status_Developing -Country , data = train.data)

#print summary of the model
summary(LE_MR)
```

Each variable in the model is given a P_Value, The lower the P_Value is the more significant the attribute is, with the cutoff for significance being 0.05.

From this first model we can see that the following attributes are significant:

| Attribute            | P Value  |
|----------------------|----------|
| Region               | Various  |
| Infant Deaths        | 1.04e-15 |
| Under Five Deaths    | 2e-16    |
| Adult Mortality      | 2e-16    |
| Hepatitis B          | 0.003581 |
| BMI                  | 6.38e-09 |
| Polio                | 0.081001 |
| Incidents HIV        | 0.000117 |
| GDP per Capita       | 3.78e-16 |
| Thinness_ten_ninteen | 0.037261 |
| Schooling            | 1.69e-09 |
| Economy_Status       | 2e-16    |
| Year                 | Various  |

: Any attribute not on this table did not make the cut for significance.

This model has a very high R-Squared, but we need to be wary of over-fitting as well as other potential issues such as multicollinearity values.

##### 5.1.1.3 Pruning the Model

First performing a vif test to check for multicollinearity

```{r}
vif(LE_MR)

```

There are several variables that have high multicollinearity. From the co-variation analysis done in 4.3 we know that Infant deaths and under five deaths are very closely related, as well as the two thinness variables, and Polio and Diphteria are related.

We should only pick one of the variables in these pairs in order to avoid the issues that arise from having high multicollinearity values. We will be picking the values that have more relevance to the models.

As neither polio nor diphtheria are significant to the model we will be dropping both.

For the other two pairs we will be keeping:

-   Under Five Deaths

-   Thinness_ten_nineteen

We will also be dropping Region from the model due to its very high VIF test result.

First, remove the variables from the VIF test.

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR2 <- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years, data = train.data)

#print summary of the model
summary(LE_MR2)
```

Next remove measles

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR3 <- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles, data = train.data)

#print summary of the model
summary(LE_MR3)
```

next remove population

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR4 <- lm(Life_expectancy ~ . - Country - Region  -Economy_status_Developed -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln, data = train.data)

#print summary of the model
summary(LE_MR4)
```

Next we remove year,

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR5 <- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln , data = train.data)

#print summary of the model
summary(LE_MR5)
```

Now Hep B has the lowest P Values and is thus next to be removed

```{r}
#make the multiple Regression model for Life Expectancy 
LE_MR6 <- lm(Life_expectancy ~ . - Country - Region -Year -Economy_status_Developed  -Polio -Diphtheria -Infant_deaths -Thinness_five_nine_years -Measles -Population_mln -Hepatitis_B, data = train.data)

#print summary of the model
summary(LE_MR6)
```

```{r}
ggplot(df, aes(x = Under_five_deaths, y = Life_expectancy)) +
  geom_point() +              
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs Under Five Deaths")

# Scatterplot for Adult_mortality
ggplot(df, aes(x = Adult_mortality, y = Life_expectancy)) +
  geom_point() +               
  geom_smooth(method = "lm") +
  labs(title = "Life Expectancy vs Adult Mortality")

# Scatterplot for Alcohol_consumption
ggplot(df, aes(x = Alcohol_consumption, y = Life_expectancy)) +
  geom_point() +              
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs Alcohol Consumption")

# Scatterplot for BMI
ggplot(df, aes(x = BMI, y = Life_expectancy)) +
  geom_point() +              
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs BMI")

# Scatterplot for Incidents_HIV
ggplot(df, aes(x = Incidents_HIV, y = Life_expectancy)) +
  geom_point() +               
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs Incidents HIV")

# Scatterplot for GDP_per_capita
ggplot(df, aes(x = GDP_per_capita, y = Life_expectancy)) +
  geom_point() +               
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs GDP per Capita")

# Scatterplot for Thinness_ten_nineteen_years
ggplot(df, aes(x = Thinness_ten_nineteen_years, y = Life_expectancy)) +
  geom_point() +               
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs Thinness (10-19 years)")

# Scatterplot for Schooling
ggplot(df, aes(x = Schooling, y = Life_expectancy)) +
  geom_point() +              
  geom_smooth(method = "lm") + 
  labs(title = "Life Expectancy vs Schooling")
```

As deaths under five go up, life expectancy goes down As adult mortality goes up, life expectancy goes down As alcohol consumption goes up, so does life expectancy As BMI goes up, so does life expectancy As incidents of HIV goes up, life expectancy goes down As GDP goes up, so does life expectancy As thinness goes up in prevalence, life expectancy goes down As schooling goes up, so does life expectancy

Testing the data

```{r}
predictions <- predict(LE_MR, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 1")
rmse

predictions <- predict(LE_MR2, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 2")
rmse

rmsepredictions <- predict(LE_MR3, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 3")
rmse

predictions <- predict(LE_MR4, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 4")
rmse

predictions <- predict(LE_MR5, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 5")
rmse

predictions <- predict(LE_MR6, newdata = test.data)

rmse <- sqrt(mean(test.data$Life_expectancy - predictions)^2)
print("RMSE 6")
rmse
```

| Model  | RMSE         | Adjusted R\^2 |
|--------|--------------|---------------|
| LE_MR  | 0.0006730005 | 0.9838        |
| LE_MR2 | 0.006045691  | 0.9785        |
| LE_MR3 | 0.006045691  | 0.9785        |
| LE_MR4 | 0.006292047  | 0.9785        |
| LE_MR5 | 0.006712114  | 0.9784        |
| LE_MR6 | 0.007220434  | 0.9784        |

: Comparing the Regression Models

#### 5.1.2 Neural Network of Life Expectancy

Splitting the dataset

```{r}
glimpse(sdf)
```

```{r}
sdf_num <- sdf %>% select_if(is.numeric)
```

```{r}
#seed to make this reproducible 
set.seed(444)

#split the data
training.samples. <- sdf$Life_expectancy |> createDataPartition(p = 0.8, list = FALSE)

train_data_nn <- sdf_num[training.samples, ]
test_data_nn <- sdf_num[-training.samples, ]
```

Training

```{r}



# Train the neural network
nn <- neuralnet(Life_expectancy ~ . -Diphtheria  - Infant_deaths - Thinness_ten_nineteen_years 
, data = train_data_nn, hidden = 3,
 linear.output = FALSE)
plot(nn)
```

Testing

#### 5.1.3 SVR model for Life Expectancy

```{r}
#seed to make this reproducible 
set.seed(444)

#split the data
training.samples <- sdf$Life_expectancy |> createDataPartition(p = 0.8, list = FALSE)

train.data.svm <- sdf[training.samples, ]
test.data.svm <- sdf[-training.samples, ]
```

```{r}
# Filter out non-numeric columns
numeric_cols <- sapply(train.data.svm, is.numeric)
train.data.svm_numeric <- train.data.svm[, numeric_cols]

# Scale the numeric features
train.data.svm_scaled <- as.data.frame(scale(train.data.svm_numeric))

# Train the SVR model with scaled features
LE_SVR <- svm(Life_expectancy ~ . , data = train.data.svm_scaled)
```

Evaluate Model function:

```{r}
evaluate_SVR_model <- function(model, test_data) {
  # Extract actual values from test data
  actual_values <- test_data$Life_expectancy
  
  # Predict using the provided model
  predicted_values <- predict(model, newdata = test_data)
  
  # Calculate evaluation metrics
  mae <- mean(abs(predicted_values - actual_values))
  mse <- mean((predicted_values - actual_values)^2)
  rmse <- sqrt(mse)
  r_squared <- cor(predicted_values, actual_values)^2
  
  # Calculate Adjusted R-squared
  n <- length(actual_values)
  p <- 1  # Assuming you have one predictor, adjust accordingly if you have more
  adjusted_r_squared <- 1 - ((1 - r_squared) * (n - 1) / (n - p - 1))
  
  # Print evaluation metrics
  cat("Mean Absolute Error (MAE):", mae, "\n")
  cat("Mean Squared Error (MSE):", mse, "\n")
  cat("Root Mean Squared Error (RMSE):", rmse, "\n")
  cat("R-squared:", r_squared, "\n")
  cat("Adjusted R-squared:", adjusted_r_squared, "\n")
}
```

Use the function to evaluate the model

```{r}
evaluate_SVR_model(LE_SVR, test.data.svm)
```

To establish which of the variables are significant we will be removing them one at a time and re-evaluate to see if the model is more or less accurate, Paying attention to the Adjusted R-Square and RMSE especially.

------------------------------------------------------------------------

Recursive Feature Elimination-Run this at your own risk!

```{r}
# Adjust cross-validation settings
ctrl <- rfeControl(method = "cv", number = 5, verbose = FALSE)

# Use parallel processing

cores <- parallel::detectCores()
cl <- makeCluster(cores - 1)  # Use one less core to avoid overloading
registerDoParallel(cl)

# Perform RFE with scaled features
rfe_result <- rfe(x = train.data.svm_scaled, 
                  y = train.data.svm$Life_expectancy,
                  sizes = c(1:length(predictors)), rfeControl = ctrl)

# Stop parallel processing
stopCluster(cl)
```

------------------------------------------------------------------------

As RFE is not working on my machine, I am going to just brute force it by removing attributes one at a time and see if the models numbers get better.

Glimpse of the data just for checking the names

```{r}
glimpse(train.data.svm_scaled)
```

```{r}
#Without Infant_deaths
LE_SVR_Testing <- svm(Life_expectancy ~ . - Infant_deaths, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Without Under_five_deaths
LE_SVR_Testing <- svm(Life_expectancy ~ . - Under_five_deaths, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Adult_mortality
LE_SVR_Testing <- svm(Life_expectancy ~ . - Adult_mortality, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Alcohol_consumption
LE_SVR_Testing<- svm(Life_expectancy ~ . - Alcohol_consumption, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Hepatitis_B                 
LE_SVR_Testing<- svm(Life_expectancy ~ . - Hepatitis_B                 , data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Measles                                      
LE_SVR_Testing<- svm(Life_expectancy ~ . - Measles, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#BMI                                      
LE_SVR_Testing<- svm(Life_expectancy ~ . - BMI, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Polio                                      
LE_SVR_Testing<- svm(Life_expectancy ~ . - Polio, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Diphtheria                                     
LE_SVR_Testing<- svm(Life_expectancy ~ . - Diphtheria, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Incidents_HIV                                     
LE_SVR_Testing<- svm(Life_expectancy ~ . - Incidents_HIV, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#GDP_per_capita                                     
LE_SVR_Testing<- svm(Life_expectancy ~ . - GDP_per_capita, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Population_mln                                     
LE_SVR_Testing<- svm(Life_expectancy ~ . - Population_mln, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Thinness_ten_nineteen_years
LE_SVR_Testing<- svm(Life_expectancy ~ . - Thinness_ten_nineteen_years, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Thinness_five_nine_years
LE_SVR_Testing<- svm(Life_expectancy ~ . - Thinness_five_nine_years, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

```{r}
#Schooling
LE_SVR_Testing<- svm(Life_expectancy ~ . - Schooling, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

Table comparing the different SVR models.

| Removed Variable            | MAE        | MSE         | RMSE       | R-Squared | Adjusted R-Squared |
|------------|------------|------------|------------|------------|------------|
| None (Base)                 | 0.07395971 | 0.00778042  | 0.08820669 | 0.9925481 | 0.992535           |
| Infant deaths               | 0.07470623 | 0.007850003 | 0.08860024 | 0.992445  | 0.9924317          |
| Under five deaths           | 0.07621305 | 0.008232278 | 0.0907319  | 0.9920679 | 0.992054           |
| Adult mortality             | 0.1133804  | 0.02399256  | 0.1548953  | 0.9766539 | 0.9766129          |
| Alcohol consumption         | 0.07744333 | 0.008586509 | 0.09266342 | 0.9916855 | 0.9916709          |
| Hepatitis B                 | 0.07243036 | 0.007626723 | 0.08733111 | 0.992664  | 0.9926511          |
| Measles                     | 0.07528426 | 0.008338268 | 0.09131412 | 0.9919717 | 0.9919576          |
| BMI                         | 0.07787055 | 0.009170201 | 0.09576117 | 0.9912598 | 0.9912444          |
| Polio                       | 0.0744371  | 0.007858702 | 0.08864932 | 0.9925011 | 0.9924879          |
| Diphtheria                  | 0.07355422 | 0.007703352 | 0.08776874 | 0.9926202 | 0.9926072          |
| Incidents HIV               | 0.07527161 | 0.008397796 | 0.09163949 | 0.9918974 | 0.9918832          |
| GDP per capita              | 0.07584458 | 0.008198734 | 0.09054686 | 0.9921686 | 0.9921549          |
| Population mln              | 0.07505001 | 0.008137925 | 0.09021045 | 0.992191  | 0.9921773          |
| Thinness ten nineteen years | 0.07371203 | 0.007720199 | 0.08786466 | 0.992582  | 0.992569           |
| Thinness five nine years    | 0.0740283  | 0.007773223 | 0.08816589 | 0.9925873 | 0.9925743          |
| Schooling                   | 0.07663966 | 0.008466487 | 0.09201351 | 0.9918468 | 0.9918324          |

The general idea of this table is that the worse the model does without the given variable, the more important the variable is to the SVR model.

The fact that Infant deaths and Under 5 deaths are not showing as significant is interesting, as every other model shows them as being very significant. It is possible that due to the Multicollinearity between them, removing one will not have much of an effect as the other is still present in the model, to test this we will remove *both* to see what happens.

```{r}
LE_SVR_Testing<- svm(Life_expectancy ~ . - Under_five_deaths -Infant_deaths, data = train.data.svm_scaled)

evaluate_SVR_model(LE_SVR_Testing, test.data.svm)
```

And yes, this is having a very large effect on the model, its not perfectly comparable to the removal of one of the variables at a time, but it is enough for us to assume that Infant Deaths and Under five deaths are more signifigant that the table initially lets on.

#### Conclusion of SVR Model:

**Adult_Mortality**, **BMI** and **Schooling** all negativly impact the model enough when removed to be significant.

This method is not without it faults however, as it doesn't identify **Under_five_deaths** or **Infant_deaths** as significant. However if *both* are removed from the model, it causes a significant increase in error of the model. As we laid out in the previous model, these variables are high in multicollinearity. It is very possible that the removal of one of these is beneficial to the model, to prevent over-fitting, and the negative effects of removing these significant attributes is only shown when both are removed.

### 5.1.4 Random Forest

Set up the data for Random Forest

```{r}

RF_DF <- df[, !(names(df) %in% c("Region", "Country", "Economy_status_Developed", "Economy_status_Developing","Year"))]

summary(RF_DF)
```

Split the data

```{r}
# Set seed for reproducibility
set.seed(321)

# Split the data into training and testing sets
train_index_RF <- createDataPartition(RF_DF$Life_expectancy, p = 0.8, list = FALSE)
train_data_RF <- RF_DF[train_index_RF, ]
test_data_RF <- RF_DF[-train_index_RF, ]

```

Making the model

```{r}

# Train the random forest model
rf_model <- randomForest(Life_expectancy ~ ., data = train_data_RF, ntree = 500)

# Print the trained model
print(rf_model)
```

Significance plot

```{r}

# Print variable importance
print(rf_model$importance)
```

This gives us another way to answer to see which variables are significant for Life Expectancy.

Interpreting these values:

-   **Infant_deaths**, **Under_five_deaths**, and **Adult_mortality** have the highest importance scores, indicating that they are the most important predictors of life expectancy in your model.

-   **Alcohol_consumption**, **BMI**, **Incidents_HIV**, **GDP_per_capita**, and **Schooling** also have relatively high importance scores, suggesting that they significantly contribute to the model's predictive performance.

-   **Hepatitis_B**, **Measles**, **Polio**, **Diphtheria**, **Population_mln**, **Thinness_ten_nineteen_years**, and **Thinness_five_nine_years** have relatively less impact on the model compared to others.

This backs up the Multiple Regression model findings.

------------------------------------------------------------------------

### 5.1.5 Conclusion of which variables most influence Life Expectancy.

From the various model made above, it seems conclusive that the most significant variables for Life Expectancy are **Infant_deaths**, **Under_five_deaths**, and **Adult_mortality**. This is not a surprising conclusion as all three of these variables directly relate to death at a certain age, which is what Life Expectancy is measuring.

The more interesting variables of significance are **Alcohol_consumption**, **BMI**, **Incidents_HIV**, **GDP_per_capita**, and **Schooling.**

Incidents of HIV is again no surprise as HIV is a depilitating illness that if untreated will result in death, therefore the higher the rate of HIV the lower the life expectancy.

The other variables in this group are more interesting, and seem to correlate with a nation being more developed, and thus having more access to healthcare, and thus a higher life expectancy.

------------------------------------------------------------------------

### 5.2 Predict countries economic status off Life expectancy:

#### 5.2.1 Logistic Regression Model

#### 5.2.2 XG Boost Model

#### 5.2.3 Decision Tree

#### 5.2.4 Compare the models

### 5.3 Deep analysis

```{r}
ggplot(df, aes(x = Under_five_deaths, y = Region)) +
  geom_point() +              
  labs(title = "Region vs Under Five Deaths")
```

```{r}
ggplot(df, aes(x = Adult_mortality, y = Region)) +
  geom_point() +              
  labs(title = "Region vs Adult Mortality")
```

```{r}
df$Mortality <- df$Under_five_deaths + df$Adult_mortality

ggplot(df, aes(x = Mortality, y = Region)) +
  geom_point() +              
  labs(title = "Region vs Mortality")

```

```{r}
filtered_df <- df %>%
  filter(Region == "Africa")
ggplot(filtered_df, aes(x = Mortality, y = Country)) +
  geom_point() +              
  labs(title = "Region vs Mortality")

ggplot(filtered_df, aes(x = BMI, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs BMI")

ggplot(filtered_df, aes(x = Alcohol_consumption, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Alcohol")

ggplot(filtered_df, aes(x = Hepatitis_B, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Hepatitis")

ggplot(filtered_df, aes(x = Measles, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Measles")

ggplot(filtered_df, aes(x = Polio, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Polio")

ggplot(filtered_df, aes(x = Diphtheria, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Diphtheria")

ggplot(filtered_df, aes(x = Incidents_HIV, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs HIV")

ggplot(filtered_df, aes(x = GDP_per_capita, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs GDP")

ggplot(filtered_df, aes(x = Population_mln, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Population")

ggplot(filtered_df, aes(x = Thinness_ten_nineteen_years, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Thinness")

ggplot(filtered_df, aes(x = Schooling, y = Country)) +
  geom_point() +              
  labs(title = "African Country vs Schooling")
```

| Country       | Mortality | BMI   | Alcohol | Hepatitis B | Measles |
|---------------|-----------|-------|---------|-------------|---------|
| Tunisia       | 120       | 25.69 | 1.29    | 96.75%      | 97.81%  |
| Algeria       | 150       | 24.87 | 0.40    | 88.31%      | 93.25%  |
| Zimbabwe      | 600       | 23.54 | 2.90    | 79.56%      | 64.00%  |
| Lesotho       | 690       | 24.49 | 2.62    | 86.63%      | 70.44%  |
| United States | 116       | 28.27 | 8.60    | 91.5%       | 86.00%  |

```{r}
filtered_us <- df %>%
  filter(Country == "United States")
ggplot(filtered_us, aes(x = Mortality, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Mortality")

ggplot(filtered_us, aes(x = BMI, y = Country)) +
  geom_point() +              
  labs(title = "United States vs BMI")

ggplot(filtered_us, aes(x = Alcohol_consumption, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Alcohol")

ggplot(filtered_us, aes(x = Hepatitis_B, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Hepatitis")

ggplot(filtered_us, aes(x = Measles, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Measles")

ggplot(filtered_us, aes(x = Polio, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Polio")

ggplot(filtered_us, aes(x = Diphtheria, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Diphtheria")

ggplot(filtered_us, aes(x = Incidents_HIV, y = Country)) +
  geom_point() +              
  labs(title = "United States vs HIV")

ggplot(filtered_us, aes(x = GDP_per_capita, y = Country)) +
  geom_point() +              
  labs(title = "United States vs GDP")

ggplot(filtered_us, aes(x = Population_mln, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Population")

ggplot(filtered_us, aes(x = Thinness_ten_nineteen_years, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Thinness")

ggplot(filtered_us, aes(x = Schooling, y = Country)) +
  geom_point() +              
  labs(title = "United States vs Schooling")
```
